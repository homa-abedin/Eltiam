<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="10/1/2025 4:40:03 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="IT-ABEDINZADEH"
  DTS:CreatorName="EL\abedinzadehh"
  DTS:DTSID="{1BF46D7E-7FA2-4CCF-B608-14AFCC5728D5}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="16.0.5685.0"
  DTS:LocaleID="1033"
  DTS:ObjectName="MarketShare"
  DTS:PackageType="5"
  DTS:VersionBuild="33"
  DTS:VersionGUID="{510565A5-5A7D-4BD4-92C0-59020BE80281}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[192.168.10.10.DW]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{02FA698E-F8B7-4C63-8A73-CC588B20835A}"
      DTS:ObjectName="192.168.10.10.DW">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=192.168.10.10;Initial Catalog=DW;Provider=SQLNCLI11.1;Integrated Security=SSPI;Application Name=SSIS-MarketShare-{02FA698E-F8B7-4C63-8A73-CC588B20835A}192.168.10.10.DW;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[192.168.10.10.Stage 1]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{E265F745-99C7-4A71-8DC7-D0680C5B70B8}"
      DTS:ObjectName="192.168.10.10.Stage 1">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=192.168.10.10;Initial Catalog=Stage;Provider=MSOLEDBSQL.1;Integrated Security=SSPI;Auto Translate=False;Application Name=SSIS-Package4-{E265F745-99C7-4A71-8DC7-D0680C5B70B8}192.168.10.10.Stage;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{D2D3A8C8-4442-46E9-A7D9-DD67EB80D06A}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="filename">
      <DTS:VariableValue
        DTS:DataType="8">E:\NEW Dashboard\Bamdad\Amarname\Iran_Drug_Report_1404_With_IRC\1404.xlsx</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{99D9CC79-C69A-4AAD-8D79-FDB97DD0B96D}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="filename1401">
      <DTS:VariableValue
        DTS:DataType="8">E:\NEW Dashboard\Bamdad\Amarname\1401.xlsx</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{05CF533A-6160-4A3B-8EBF-2B0E90ACD2E1}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="filename1402">
      <DTS:VariableValue
        DTS:DataType="8">E:\NEW Dashboard\Bamdad\Amarname\1402.xlsx</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{F93D3C63-613F-403A-AD8E-61A8E88BA473}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="filename1403">
      <DTS:VariableValue
        DTS:DataType="8">E:\NEW Dashboard\Bamdad\Amarname\IranDrugReport1403 (1)\1403.xlsx</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\1400"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:Disabled="True"
      DTS:DTSID="{dfafb592-1beb-44b9-8d3d-2dd7795d7517}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="1400"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\1400\OLE DB Destination"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="OLE DB Destination"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[amarDistribute]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\1400\OLE DB Destination.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[192.168.10.10.DW]"
                  connectionManagerRefId="Package.ConnectionManagers[192.168.10.10.DW]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\1400\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\1400\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[price]"
                      cachedDataType="i8"
                      cachedName="price"
                      externalMetadataColumnId="Package\1400\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[price]"
                      lineageId="Package\1400\Script Component.Outputs[Output 0].Columns[price]" />
                    <inputColumn
                      refId="Package\1400\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[cost]"
                      cachedDataType="i8"
                      cachedName="cost"
                      externalMetadataColumnId="Package\1400\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[cost]"
                      lineageId="Package\1400\Script Component.Outputs[Output 0].Columns[cost]" />
                    <inputColumn
                      refId="Package\1400\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[month]"
                      cachedDataType="i4"
                      cachedName="month"
                      externalMetadataColumnId="Package\1400\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[month]"
                      lineageId="Package\1400\Script Component.Outputs[Output 0].Columns[month]" />
                    <inputColumn
                      refId="Package\1400\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[year]"
                      cachedDataType="i4"
                      cachedName="year"
                      externalMetadataColumnId="Package\1400\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[year]"
                      lineageId="Package\1400\Script Component.Outputs[Output 0].Columns[year]" />
                    <inputColumn
                      refId="Package\1400\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Produce/Import]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Produce/Import"
                      externalMetadataColumnId="Package\1400\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Produce/Import]"
                      lineageId="Package\1400\Script Component.Outputs[Output 0].Columns[Produce/Import]" />
                    <inputColumn
                      refId="Package\1400\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Registered]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Registered"
                      externalMetadataColumnId="Package\1400\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Registered]"
                      lineageId="Package\1400\Script Component.Outputs[Output 0].Columns[Registered]" />
                    <inputColumn
                      refId="Package\1400\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[ProducerCountry]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="ProducerCountry"
                      externalMetadataColumnId="Package\1400\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ProducerCountry]"
                      lineageId="Package\1400\Script Component.Outputs[Output 0].Columns[ProducerCountry]" />
                    <inputColumn
                      refId="Package\1400\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[ATCCode]"
                      cachedDataType="wstr"
                      cachedLength="20"
                      cachedName="ATCCode"
                      externalMetadataColumnId="Package\1400\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ATCCode]"
                      lineageId="Package\1400\Script Component.Outputs[Output 0].Columns[ATCCode]" />
                    <inputColumn
                      refId="Package\1400\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[License]"
                      cachedDataType="i4"
                      cachedName="License"
                      externalMetadataColumnId="Package\1400\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[License]"
                      lineageId="Package\1400\Script Component.Outputs[Output 0].Columns[License]" />
                    <inputColumn
                      refId="Package\1400\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[biological]"
                      cachedDataType="i4"
                      cachedName="biological"
                      externalMetadataColumnId="Package\1400\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[biological]"
                      lineageId="Package\1400\Script Component.Outputs[Output 0].Columns[biological]" />
                    <inputColumn
                      refId="Package\1400\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[OTC]"
                      cachedDataType="i4"
                      cachedName="OTC"
                      externalMetadataColumnId="Package\1400\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[OTC]"
                      lineageId="Package\1400\Script Component.Outputs[Output 0].Columns[OTC]" />
                    <inputColumn
                      refId="Package\1400\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[ConsumerPrice]"
                      cachedDataType="i8"
                      cachedName="ConsumerPrice"
                      externalMetadataColumnId="Package\1400\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ConsumerPrice]"
                      lineageId="Package\1400\Script Component.Outputs[Output 0].Columns[ConsumerPrice]" />
                    <inputColumn
                      refId="Package\1400\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[QuantitySales]"
                      cachedDataType="i4"
                      cachedName="QuantitySales"
                      externalMetadataColumnId="Package\1400\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[QuantitySales]"
                      lineageId="Package\1400\Script Component.Outputs[Output 0].Columns[QuantitySales]" />
                    <inputColumn
                      refId="Package\1400\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[QuantityInPKG]"
                      cachedDataType="i4"
                      cachedName="QuantityInPKG"
                      externalMetadataColumnId="Package\1400\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[QuantityInPKG]"
                      lineageId="Package\1400\Script Component.Outputs[Output 0].Columns[QuantityInPKG]" />
                    <inputColumn
                      refId="Package\1400\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[QuantityPkG]"
                      cachedDataType="i4"
                      cachedName="QuantityPkG"
                      externalMetadataColumnId="Package\1400\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[QuantityPkG]"
                      lineageId="Package\1400\Script Component.Outputs[Output 0].Columns[QuantityPkG]" />
                    <inputColumn
                      refId="Package\1400\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[GenericName]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="GenericName"
                      externalMetadataColumnId="Package\1400\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[GenericName]"
                      lineageId="Package\1400\Script Component.Outputs[Output 0].Columns[GenericName]" />
                    <inputColumn
                      refId="Package\1400\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[GenericCode]"
                      cachedDataType="i4"
                      cachedName="GenericCode"
                      externalMetadataColumnId="Package\1400\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[GenericCode]"
                      lineageId="Package\1400\Script Component.Outputs[Output 0].Columns[GenericCode]" />
                    <inputColumn
                      refId="Package\1400\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[EffectiveMaterial]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="EffectiveMaterial"
                      externalMetadataColumnId="Package\1400\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[EffectiveMaterial]"
                      lineageId="Package\1400\Script Component.Outputs[Output 0].Columns[EffectiveMaterial]" />
                    <inputColumn
                      refId="Package\1400\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[BrandName]"
                      cachedDataType="wstr"
                      cachedLength="250"
                      cachedName="BrandName"
                      externalMetadataColumnId="Package\1400\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[BrandName]"
                      lineageId="Package\1400\Script Component.Outputs[Output 0].Columns[BrandName]" />
                    <inputColumn
                      refId="Package\1400\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[EnglishNameBrand]"
                      cachedDataType="wstr"
                      cachedLength="250"
                      cachedName="EnglishNameBrand"
                      externalMetadataColumnId="Package\1400\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[EnglishNameBrand]"
                      lineageId="Package\1400\Script Component.Outputs[Output 0].Columns[EnglishNameBrand]" />
                    <inputColumn
                      refId="Package\1400\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[IRC]"
                      cachedDataType="wstr"
                      cachedLength="250"
                      cachedName="IRC"
                      externalMetadataColumnId="Package\1400\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[IRC]"
                      lineageId="Package\1400\Script Component.Outputs[Output 0].Columns[IRC]" />
                    <inputColumn
                      refId="Package\1400\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Producer]"
                      cachedDataType="wstr"
                      cachedLength="250"
                      cachedName="Producer"
                      externalMetadataColumnId="Package\1400\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Producer]"
                      lineageId="Package\1400\Script Component.Outputs[Output 0].Columns[Producer]" />
                    <inputColumn
                      refId="Package\1400\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Supplier]"
                      cachedDataType="wstr"
                      cachedLength="250"
                      cachedName="Supplier"
                      externalMetadataColumnId="Package\1400\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Supplier]"
                      lineageId="Package\1400\Script Component.Outputs[Output 0].Columns[Supplier]" />
                    <inputColumn
                      refId="Package\1400\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[OwenerBrand]"
                      cachedDataType="wstr"
                      cachedLength="250"
                      cachedName="OwenerBrand"
                      externalMetadataColumnId="Package\1400\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[OwenerBrand]"
                      lineageId="Package\1400\Script Component.Outputs[Output 0].Columns[OwenerBrand]" />
                    <inputColumn
                      refId="Package\1400\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Distributer]"
                      cachedDataType="wstr"
                      cachedLength="250"
                      cachedName="Distributer"
                      externalMetadataColumnId="Package\1400\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Distributer]"
                      lineageId="Package\1400\Script Component.Outputs[Output 0].Columns[Distributer]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\1400\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Distributer]"
                      dataType="wstr"
                      length="250"
                      name="Distributer" />
                    <externalMetadataColumn
                      refId="Package\1400\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[OwenerBrand]"
                      dataType="wstr"
                      length="250"
                      name="OwenerBrand" />
                    <externalMetadataColumn
                      refId="Package\1400\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Supplier]"
                      dataType="wstr"
                      length="250"
                      name="Supplier" />
                    <externalMetadataColumn
                      refId="Package\1400\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Producer]"
                      dataType="wstr"
                      length="250"
                      name="Producer" />
                    <externalMetadataColumn
                      refId="Package\1400\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[IRC]"
                      dataType="wstr"
                      length="250"
                      name="IRC" />
                    <externalMetadataColumn
                      refId="Package\1400\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[EnglishNameBrand]"
                      dataType="wstr"
                      length="250"
                      name="EnglishNameBrand" />
                    <externalMetadataColumn
                      refId="Package\1400\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[BrandName]"
                      dataType="wstr"
                      length="250"
                      name="BrandName" />
                    <externalMetadataColumn
                      refId="Package\1400\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[EffectiveMaterial]"
                      dataType="wstr"
                      length="250"
                      name="EffectiveMaterial" />
                    <externalMetadataColumn
                      refId="Package\1400\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[GenericCode]"
                      dataType="wstr"
                      length="15"
                      name="GenericCode" />
                    <externalMetadataColumn
                      refId="Package\1400\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[GenericName]"
                      dataType="wstr"
                      length="250"
                      name="GenericName" />
                    <externalMetadataColumn
                      refId="Package\1400\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[QuantityPkG]"
                      dataType="i8"
                      name="QuantityPkG" />
                    <externalMetadataColumn
                      refId="Package\1400\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[QuantityInPKG]"
                      dataType="i4"
                      name="QuantityInPKG" />
                    <externalMetadataColumn
                      refId="Package\1400\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[QuantitySales]"
                      dataType="i8"
                      name="QuantitySales" />
                    <externalMetadataColumn
                      refId="Package\1400\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ConsumerPrice]"
                      dataType="i8"
                      name="ConsumerPrice" />
                    <externalMetadataColumn
                      refId="Package\1400\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[OTC]"
                      dataType="wstr"
                      length="20"
                      name="OTC" />
                    <externalMetadataColumn
                      refId="Package\1400\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[biological]"
                      dataType="wstr"
                      length="20"
                      name="biological" />
                    <externalMetadataColumn
                      refId="Package\1400\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[License]"
                      dataType="bool"
                      name="License" />
                    <externalMetadataColumn
                      refId="Package\1400\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ATCCode]"
                      dataType="wstr"
                      length="20"
                      name="ATCCode" />
                    <externalMetadataColumn
                      refId="Package\1400\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ProducerCountry]"
                      dataType="wstr"
                      length="100"
                      name="ProducerCountry" />
                    <externalMetadataColumn
                      refId="Package\1400\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Registered]"
                      dataType="wstr"
                      length="10"
                      name="Registered" />
                    <externalMetadataColumn
                      refId="Package\1400\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Produce/Import]"
                      dataType="wstr"
                      length="10"
                      name="Produce/Import" />
                    <externalMetadataColumn
                      refId="Package\1400\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[year]"
                      dataType="i4"
                      name="year" />
                    <externalMetadataColumn
                      refId="Package\1400\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[month]"
                      dataType="i4"
                      name="month" />
                    <externalMetadataColumn
                      refId="Package\1400\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[cost]"
                      dataType="i8"
                      name="cost" />
                    <externalMetadataColumn
                      refId="Package\1400\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[price]"
                      dataType="i8"
                      name="price" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\1400\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\1400\OLE DB Destination.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\1400\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\1400\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\1400\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\1400\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\1400\Script Component"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;13"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Script Component"
              version="13">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_d0a14345282c46b6ab377eedd5af9f26")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_d0a14345282c46b6ab377eedd5af9f26")]
[assembly: AssemblyCopyright("Copyright @  2025")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help: Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component.
 */
#endregion

#region Namespaces
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using System;
using System.Data;
using System.Data.OleDb;
using System.Windows.Forms;
#endregion

/// <summary>
/// This is the class to which to add your code. Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    string processResult = "Success";
    bool fireAgain = false;
    #region Help: Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable. To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     *
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     * DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     * Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help: Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component. See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor. To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     *
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     * object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     * SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     * object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     * string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     * Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help: Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     * ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     * ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     * ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        //Variab/*l*/es.Result1 = processResult; // فقط اینجا میشه نوشت
    }



    public override void CreateNewOutputRows()
    {


        string connStr = "Provider=Microsoft.ACE.OLEDB.12.0;" +
                 $"Data Source={Variables.filename1401};" +
                 "Extended Properties=\"Excel 12.0;HDR=YES;IMEX=1\";";

        bool fireAgain = false;

        using (OleDbConnection conn = new OleDbConnection(connStr))
        {
            //ComponentMetaData.FireInformation(0, "CustomLog", $"Updated ID , rows affected: {Variables.filname1}", "", 0, ref fireAgain);
            try
            {
                conn.Open();
                ComponentMetaData.FireInformation(0, "CustomLog", $"Updated ID , rows affected: conn.Open()", "", 0, ref fireAgain);

                OleDbDataAdapter da = new OleDbDataAdapter("SELECT * FROM [Dataset$]", conn);
                ComponentMetaData.FireInformation(0, "CustomLog", $"Updated ID , rows affected: OleDbDataAdapter", "", 0, ref fireAgain);

                DataTable dt = new DataTable();
                da.Fill(dt);
                ComponentMetaData.FireInformation(0, "CustomLog", $"Updated ID , rows affected: da.Fill(dt)", "", 0, ref fireAgain);
                int rowCount = dt.Rows.Count;
                ComponentMetaData.FireInformation(0, "CustomLog", $"Rows Count: {rowCount}", "", 0, ref fireAgain);





                foreach (DataRow row in dt.Rows)
                {
                    Output0Buffer.AddRow();
                    Output0Buffer.Distributer = row[0]?.ToString();
                    
                    Output0Buffer.OwenerBrand = row[1]?.ToString();
                    Output0Buffer.Supplier = row[2]?.ToString();
                    Output0Buffer.Producer = row[3].ToString();
                    Output0Buffer.IRC = row[5].ToString();
                    Output0Buffer.EnglishNameBrand = row[6].ToString();
                    Output0Buffer.BrandName = row[7].ToString();
                    Output0Buffer.EffectiveMaterial = row[8].ToString();
                    Output0Buffer.GenericCode = row[9] == DBNull.Value ? 0 : Convert.ToInt32(row[9]);
                    Output0Buffer.GenericName = row[10].ToString();
                    Output0Buffer.month = 1;
                    Output0Buffer.QuantityPkG = row[11] == DBNull.Value ? 0 : Convert.ToInt32(row[11]);
                    Output0Buffer.QuantityInPKG = row[12] == DBNull.Value ? 0 : Convert.ToInt32(row[12]);
                    Output0Buffer.QuantitySales = row[13] == DBNull.Value ? 0 : Convert.ToInt32(row[13]);
                    Output0Buffer.cost = 0;
                    Output0Buffer.price = 0;
                    Output0Buffer.ConsumerPrice = row[14] == DBNull.Value ? 0 : Convert.ToInt64(row[14]);
                    Output0Buffer.OTC = row[15] == DBNull.Value ? 0 : Convert.ToInt32(row[15]);
                    Output0Buffer.biological = row[16] == DBNull.Value ? 0 : Convert.ToInt32(row[16]);
                    Output0Buffer.ATCCode = row[18].ToString();
                    Output0Buffer.ProducerCountry = row[19].ToString();
                    Output0Buffer.Registered = row[20].ToString();
                    Output0Buffer.ProduceImport = row[21].ToString();
                    Output0Buffer.year = 1402;
                }
            }
            catch (Exception ex)
            {
                processResult = "Fail"; // فقط مقدار local تغییر می‌کنه
                ComponentMetaData.FireInformation(0, "CustomLog", $"Exception: {ex.Message}", "", 0, ref fireAgain);
            }



      
        }
    }

    /* Add rows by calling the AddRow method on the member variable named "<Output Name>Buffer". 
       For example, call MyOutputBuffer.AddRow() if your output was named "MyOutput". */
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Output0Buffer: ScriptBuffer

{
    public Output0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Int64 price
    {
        set
        {
            this[0] = value;
        }
    }
    public bool price_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int64 cost
    {
        set
        {
            this[1] = value;
        }
    }
    public bool cost_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 month
    {
        set
        {
            this[2] = value;
        }
    }
    public bool month_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 year
    {
        set
        {
            this[3] = value;
        }
    }
    public bool year_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ProduceImport
    {
        set
        {
            this[4] = value;
        }
    }
    public bool ProduceImport_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Registered
    {
        set
        {
            this[5] = value;
        }
    }
    public bool Registered_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ProducerCountry
    {
        set
        {
            this[6] = value;
        }
    }
    public bool ProducerCountry_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ATCCode
    {
        set
        {
            this[7] = value;
        }
    }
    public bool ATCCode_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 License
    {
        set
        {
            this[8] = value;
        }
    }
    public bool License_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(8);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 biological
    {
        set
        {
            this[9] = value;
        }
    }
    public bool biological_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(9);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 OTC
    {
        set
        {
            this[10] = value;
        }
    }
    public bool OTC_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(10);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int64 ConsumerPrice
    {
        set
        {
            this[11] = value;
        }
    }
    public bool ConsumerPrice_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(11);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 QuantitySales
    {
        set
        {
            this[12] = value;
        }
    }
    public bool QuantitySales_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(12);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 QuantityInPKG
    {
        set
        {
            this[13] = value;
        }
    }
    public bool QuantityInPKG_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(13);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 QuantityPkG
    {
        set
        {
            this[14] = value;
        }
    }
    public bool QuantityPkG_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(14);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String GenericName
    {
        set
        {
            this[15] = value;
        }
    }
    public bool GenericName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(15);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 GenericCode
    {
        set
        {
            this[16] = value;
        }
    }
    public bool GenericCode_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(16);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String EffectiveMaterial
    {
        set
        {
            this[17] = value;
        }
    }
    public bool EffectiveMaterial_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(17);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String BrandName
    {
        set
        {
            this[18] = value;
        }
    }
    public bool BrandName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(18);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String EnglishNameBrand
    {
        set
        {
            this[19] = value;
        }
    }
    public bool EnglishNameBrand_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(19);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String IRC
    {
        set
        {
            this[20] = value;
        }
    }
    public bool IRC_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(20);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Producer
    {
        set
        {
            this[21] = value;
        }
    }
    public bool Producer_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(21);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Supplier
    {
        set
        {
            this[22] = value;
        }
    }
    public bool Supplier_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(22);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String OwenerBrand
    {
        set
        {
            this[23] = value;
        }
    }
    public bool OwenerBrand_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(23);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Distributer
    {
        set
        {
            this[24] = value;
        }
    }
    public bool Distributer_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(24);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_d0a14345282c46b6ab377eedd5af9f26.Properties.Settings.get_Default():SC_d0a14345282c46b6ab377eedd5af9f26.Properties.Sett" +
    "ings")]

namespace SC_d0a14345282c46b6ab377eedd5af9f26.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output0Buffer Output0Buffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output0Buffer)
        {
            Output0Buffer.SetEndOfRowset();
            Output0Buffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 0"))
            {
                Output0Buffer = new Output0Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String filename1401
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["filename1401"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_d0a14345282c46b6ab377eedd5af9f26</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_d0a14345282c46b6ab377eedd5af9f26</msb:DisplayName>
    <msb:ProjectId>{FE6B842E-F94E-4DAD-911F-AC06EDE08E8A}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_d0a14345282c46b6ab377eedd5af9f26.csproj" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_d0a14345282c46b6ab377eedd5af9f26.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{15527E59-F829-4CEC-A450-B6E96C25074F}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_d0a14345282c46b6ab377eedd5af9f26</RootNamespace>
    <AssemblyName>SC_d0a14345282c46b6ab377eedd5af9f26</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_d0a14345282c46b6ab377eedd5af9f26.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_d0a14345282c46b6ab377eedd5af9f26.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_d0a14345282c46b6ab377eedd5af9f26.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_d0a14345282c46b6ab377eedd5af9f26.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_d0a14345282c46b6ab377eedd5af9f26.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_d0a14345282c46b6ab377eedd5af9f26.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[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
BgA2AOQoAAAAAMYA0gscATYAwygAAAAAxgHbCgYAOgA5KQAAAACGGGsJKAE6AEgpAAAAAIYYawko
ATsAVykAAAAAhghTAG8APAB9KQAAAACDGGsJBgA8AIUpAAAAAJMIvgguATwAsSkAAAAAkwg2AjMB
PAC4KQAAAACTCEICOAE8AMApAAAAAJYIEws+AT0AxykAAAAAhhhrCQYAPQDPKQAAAACRGHEJQwE9
AAAAAQC3CAAAAgBvCgAAAwAtCAAAAQB1BAAAAQB1BAAAAQB1BAAAAQB1BAAAAQB1BAAAAQB1BAAA
AQB1BAAAAQB1BAAAAQB1BAAAAQB1BAAAAQB1BAAAAQB1BAAAAQB1BAAAAQB1BAAAAQB1BAAAAQB1
BAAAAQB1BAAAAQB1BAAAAQB1BAAAAQB1BAAAAQB1BAAAAQB1BAAAAQB1BAAAAQB1BAAAAQB1BAAA
AQB1BAAAAQB1BAAAAQB1BAAAAQB1BAAAAQB1BAAAAQB1BAAAAQB1BAAAAQB1BAAAAQB1BAAAAQB1
BAAAAQB1BAAAAQB1BAAAAQB1BAAAAQB1BAAAAQB1BAAAAQB1BAAAAQB1BAAAAQB1BAAAAQB1BAAA
AQB1BAAAAQB1BAAAAQB1BAAAAQB1BAAAAQB1BAAAAQB1BAAAAQDKCgAAAgB4CQAAAwC8CgAABAAt
CAAAAQBRCwAAAQBRCwAAAQB1BAkAawkBABEAawkGABkAawkKACkAawkQADEAawkQADkAawkQAEEA
awkQAEkAawkQAFEAawkQAFkAawkQAGEAawkQAGkAawkGAMkAawkGAOkAawkVAPkAawkGALkAWAQG
ALkAYwQGAAEB7wosAHEAawkQAAkBXgcGALkA6wAzABEBeAc5ABkBawlEAHkAawkGACEBCwVLAHkA
0gpRADEBZwtXAAEB9gpbADEBXQlhAIEAWwtmAIkAOQdqAMEAlQRvAEEBbwRzAEkBZAB4AEkBbAB9
AIEA3guCAJEAnQIGAJkArAFvAAEB7wqGAKEAawmMAKEAQgeWAKEAMQcBAFkBawkQAKEAMwwGAKEA
BAsGAKEABwuCALkAawkGALkAsQCgALkAgwqnAMEAawkGALkAWQqtAGEBOQezALkAFgy6AGkB5wvA
AIEB4AHHAIEBOgzQANEAawnWAPEAawkGAC4ACwBmAS4AEwBvAS4AGwCOAS4AIwCXAS4AKwDAAS4A
MwDAAS4AOwDAAS4AQwCXAS4ASwDGAS4AUwDAAS4AWwDdAUMAYwAnAuMAawAnAkEBewAnAokGcwCO
AakGcwCOARsAnAADAAEABgAzAAcANAAIADYAAAB6AUcBAADLBUsBAADNC0cBAAAKB0sBAACiBE8B
AABFBksBAACCCE8BAACJBksBAACaC1MBAADxBksBAAA0AVMBAABpBUsBAABLDFMBAAAaB0sBAACU
AVMBAADcBUsBAACVAk8BAAAyBksBAACsBE8BAABWBksBAACtAE8BAAAqBUsBAABoAUcBAACyBUsB
AABLCk8BAADYBksBAADBAE8BAAA5BUsBAADTAE8BAABSBUsBAAD2AVMBAAAGBksBAACgAU8BAADv
BUsBAAC7BFMBAABsBksBAAAGAlMBAAAdBksBAABDAVMBAAB/BUsBAAClAFMBAAAbBUsBAACLCFMB
AACZBksBAADWCFMBAACtBksBAABYAVMBAACbBUsBAABFCVMBAADBBksBAABXAFMBAADCCFcBAABW
AlwBAAAXC2EBAQAGAAMAAQAHAAUAAQAIAAcAAQAJAAkAAQAKAAsAAQALAA0AAQAMAA8AAQANABEA
AQAOABMAAQAPABUAAQAQABcAAQARABkAAQASABsAAQATAB0AAQAUAB8AAQAVACEAAQAWACMAAQAX
ACUAAQAYACcAAQAZACkAAQAaACsAAQAbAC0AAQAcAC8AAQAdADEAAQAeADMAAQAfADUAAQAgADcA
AQAhADkAAQAiADsAAQAjAD0AAQAkAD8AAQAlAEEAAQAmAEMAAQAnAEUAAQAoAEcAAQApAEkAAQAq
AEsAAQArAE0AAQAsAE8AAQAtAFEAAQAuAFMAAQAvAFUAAQAwAFcAAQAxAFkAAQAyAFsAAQAzAF0A
AQA0AF8AAQA1AGEAAQA2AGMAAQA3AGUAAgBCAGcAAgBEAGkAAgBFAGsAAQBGAGsAAgBHAG0ABIAA
AAEAAAAAAAAAAAAAAAAAdAAAAAQAAAAAAAAAAAAAAN4AEwEAAAAAEAAAAAAAAAAAAAAA5wBxCwAA
AAAEAAAAAAAAAAAAAADeAN8AAAAAABAAAAAAAAAAAAAAAOcAqAsAAAAABAAAAAAAAAAAAAAA3gBL
BwAAAAAQAAAAAAAAAAAAAADnAFoIAAAAABAAAAAAAAAAAAAAAOcANwgAAAAAAAAAAAEAAADGCQAA
AAAAAABJRFRTQ29tcG9uZW50TWV0YURhdGExMDAASURUU1ZhcmlhYmxlMTAwAElEVFNWYXJpYWJs
ZXMxMDAASURUU0V2YWx1YXRvckNvbnRleHQxMDAAZ2V0X2ZpbGVuYW1lMTQwMQBUb0ludDMyAFRv
SW50NjQAU0NfZDBhMTQzNDUyODJjNDZiNmFiMzc3ZWVkZDVhZjlmMjYAPE1vZHVsZT4Ac2V0X0lS
QwBzZXRfT1RDAEdldE91dHB1dElEAHNldF9RdWFudGl0eUluUEtHAHNldF9RdWFudGl0eVBrRwBT
eXN0ZW0uRGF0YQBnZXRfQ29tcG9uZW50TWV0YURhdGEAU3lzdGVtLkRhdGEuT2xlRGIAbXNjb3Js
aWIATWFya091dHB1dHNGaW5pc2hlZABzZXRfUmVnaXN0ZXJlZABzZXRfRW5nbGlzaE5hbWVCcmFu
ZABzZXRfT3dlbmVyQnJhbmQAc2V0X0NvbnN1bWVyUHJpY2UAc2V0X3ByaWNlAGRlZmF1bHRJbnN0
YW5jZQBzZXRfQVRDQ29kZQBzZXRfR2VuZXJpY0NvZGUAZ2V0X01lc3NhZ2UARGF0YVRhYmxlAElE
aXNwb3NhYmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAHNldF9HZW5lcmlj
TmFtZQBzZXRfQnJhbmROYW1lAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lAFR5cGUA
Z2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJlAEludGVybmFsRGF0YUNvbGxl
Y3Rpb25CYXNlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAHNldF9MaWNlbnNlAERpc3Bvc2UARWRp
dG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25V
c2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJp
YnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRh
cmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNz
ZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRl
AEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lT
U2NyaXB0Q29tcG9uZW50RW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1
dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAUHJlRXhlY3V0ZQBQb3N0RXhlY3V0ZQBW
YWx1ZQB2YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRvU3RyaW5nAHNldF9tb250aABz
ZXRfYmlvbG9naWNhbABzZXRfRWZmZWN0aXZlTWF0ZXJpYWwAU3lzdGVtLkNvbXBvbmVudE1vZGVs
AFNDX2QwYTE0MzQ1MjgyYzQ2YjZhYjM3N2VlZGQ1YWY5ZjI2LmRsbABGaWxsAERCTnVsbABzZXRf
SVJDX0lzTnVsbABzZXRfT1RDX0lzTnVsbABzZXRfUXVhbnRpdHlJblBLR19Jc051bGwAc2V0X1F1
YW50aXR5UGtHX0lzTnVsbABzZXRfUmVnaXN0ZXJlZF9Jc051bGwAc2V0X0VuZ2xpc2hOYW1lQnJh
bmRfSXNOdWxsAHNldF9Pd2VuZXJCcmFuZF9Jc051bGwAc2V0X0NvbnN1bWVyUHJpY2VfSXNOdWxs
AHNldF9wcmljZV9Jc051bGwAc2V0X0FUQ0NvZGVfSXNOdWxsAHNldF9HZW5lcmljQ29kZV9Jc051
bGwAc2V0X0dlbmVyaWNOYW1lX0lzTnVsbABzZXRfQnJhbmROYW1lX0lzTnVsbABzZXRfTGljZW5z
ZV9Jc051bGwAc2V0X21vbnRoX0lzTnVsbABzZXRfYmlvbG9naWNhbF9Jc051bGwAc2V0X0VmZmVj
dGl2ZU1hdGVyaWFsX0lzTnVsbABzZXRfeWVhcl9Jc051bGwAc2V0X1Byb2R1Y2VyX0lzTnVsbABz
ZXRfU3VwcGxpZXJfSXNOdWxsAHNldF9EaXN0cmlidXRlcl9Jc051bGwAc2V0X1F1YW50aXR5U2Fs
ZXNfSXNOdWxsAHNldF9Qcm9kdWNlSW1wb3J0X0lzTnVsbABzZXRfY29zdF9Jc051bGwAc2V0X1By
b2R1Y2VyQ291bnRyeV9Jc051bGwAU2V0TnVsbABnZXRfSXRlbQBzZXRfSXRlbQBTeXN0ZW0AcmVz
b3VyY2VNYW4AT3BlbgBTY3JpcHRNYWluAGZpcmVBZ2FpbgBGaXJlSW5mb3JtYXRpb24AU3lzdGVt
LkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24ARGF0
YVJvd0NvbGxlY3Rpb24AT2xlRGJDb25uZWN0aW9uAEludmFsaWRPcGVyYXRpb25FeGNlcHRpb24A
U3lzdGVtLkRhdGEuQ29tbW9uAEN1bHR1cmVJbmZvAE91dHB1dE5hbWVNYXAAT3V0cHV0TWFwAE1p
Y3Jvc29mdC5TcWxTZXJ2ZXIuRFRTUnVudGltZVdyYXAATWljcm9zb2Z0LlNxbFNlcnZlci5EVFNQ
aXBlbGluZVdyYXAAc2V0X3llYXIAc2V0X1Byb2R1Y2VyAE91dHB1dDBCdWZmZXIAUGlwZWxpbmVC
dWZmZXIAU2NyaXB0QnVmZmVyAGdldF9SZXNvdXJjZU1hbmFnZXIAc2V0X1N1cHBsaWVyAE1pY3Jv
c29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUuV3JhcHBlcgBNaWNyb3NvZnQuU3FsU2VydmVyLkR0
cy5QaXBlbGluZS5XcmFwcGVyAE9sZURiRGF0YUFkYXB0ZXIAc2V0X0Rpc3RyaWJ1dGVyAElFbnVt
ZXJhdG9yAEdldEVudW1lcmF0b3IALmN0b3IALmNjdG9yAE91dHB1dElEcwBTeXN0ZW0uRGlhZ25v
c3RpY3MAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFND
X2QwYTE0MzQ1MjgyYzQ2YjZhYjM3N2VlZGQ1YWY5ZjI2LlByb3BlcnRpZXMuUmVzb3VyY2VzLnJl
c291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBTQ19kMGExNDM0NTI4MmM0NmI2YWIzNzdlZWRkNWFmOWYy
Ni5Qcm9wZXJ0aWVzAHNldF9RdWFudGl0eVNhbGVzAGdldF9SZWFkT25seVZhcmlhYmxlcwBCdWZm
ZXJDb2x1bW5JbmRleGVzAEdldENvbHVtbkluZGV4ZXMAU2V0dGluZ3MAU3lzdGVtLkNvbGxlY3Rp
b25zAENvbm5lY3Rpb25zAEJ1ZmZlcnMARmluaXNoT3V0cHV0cwBnZXRfUm93cwBDcmVhdGVOZXdP
dXRwdXRSb3dzAENvbmNhdABGb3JtYXQAT2JqZWN0AFNldEVuZE9mUm93c2V0AGdldF9EZWZhdWx0
AHByb2Nlc3NSZXN1bHQAVXNlckNvbXBvbmVudABQYXJlbnRDb21wb25lbnQAU2NyaXB0Q29tcG9u
ZW50AGdldF9DdXJyZW50AGdldF9Db3VudABNaWNyb3NvZnQuU3FsU2VydmVyLlR4U2NyaXB0AENv
bnZlcnQAc2V0X1Byb2R1Y2VJbXBvcnQATWljcm9zb2Z0LlNxbFNlcnZlci5QaXBlbGluZUhvc3QA
c2V0X2Nvc3QAUHJpbWVPdXRwdXQATW92ZU5leHQAR2V0VmFsdWVXaXRoQ29udGV4dABTY3JpcHRD
b21wb25lbnRFdmFsQ29udGV4dABnZXRfRXZhbHVhdG9yQ29udGV4dABEYXRhUm93AEFkZFJvdwBn
ZXRfQXNzZW1ibHkAc2V0X1Byb2R1Y2VyQ291bnRyeQAAAF1QAHIAbwB2AGkAZABlAHIAPQBNAGkA
YwByAG8AcwBvAGYAdAAuAEEAQwBFAC4ATwBMAEUARABCAC4AMQAyAC4AMAA7AEQAYQB0AGEAIABT
AG8AdQByAGMAZQA9AABjOwBFAHgAdABlAG4AZABlAGQAIABQAHIAbwBwAGUAcgB0AGkAZQBzAD0A
IgBFAHgAYwBlAGwAIAAxADIALgAwADsASABEAFIAPQBZAEUAUwA7AEkATQBFAFgAPQAxACIAOwAA
E0MAdQBzAHQAbwBtAEwAbwBnAABPVQBwAGQAYQB0AGUAZAAgAEkARAAgACwAIAByAG8AdwBzACAA
YQBmAGYAZQBjAHQAZQBkADoAIABjAG8AbgBuAC4ATwBwAGUAbgAoACkAAAEAMVMARQBMAEUAQwBU
ACAAKgAgAEYAUgBPAE0AIABbAEQAYQB0AGEAcwBlAHQAJABdAABZVQBwAGQAYQB0AGUAZAAgAEkA
RAAgACwAIAByAG8AdwBzACAAYQBmAGYAZQBjAHQAZQBkADoAIABPAGwAZQBEAGIARABhAHQAYQBB
AGQAYQBwAHQAZQByAABPVQBwAGQAYQB0AGUAZAAgAEkARAAgACwAIAByAG8AdwBzACAAYQBmAGYA
ZQBjAHQAZQBkADoAIABkAGEALgBGAGkAbABsACgAZAB0ACkAAB9SAG8AdwBzACAAQwBvAHUAbgB0
ADoAIAB7ADAAfQAACUYAYQBpAGwAABdFAHgAYwBlAHAAdABpAG8AbgA6ACAAAA9TAHUAYwBjAGUA
cwBzAACAm0kAcwBOAHUAbABsACAAcAByAG8AcABlAHIAdAB5ACAAYwBhAG4AbgBvAHQAIABiAGUA
IABzAGUAdAAgAHQAbwAgAEYAYQBsAHMAZQAuACAAQQBzAHMAaQBnAG4AIABhACAAdgBhAGwAdQBl
ACAAdABvACAAdABoAGUAIABjAG8AbAB1AG0AbgAgAGkAbgBzAHQAZQBhAGQALgAAEU8AdQB0AHAA
dQB0ACAAMAAAGWYAaQBsAGUAbgBhAG0AZQAxADQAMAAxAABxUwBDAF8AZAAwAGEAMQA0ADMANAA1
ADIAOAAyAGMANAA2AGIANgBhAGIAMwA3ADcAZQBlAGQAZAA1AGEAZgA5AGYAMgA2AC4AUAByAG8A
cABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAAAJITA8tji6ZGvCSjuejYeOIABCAB
AQgDIAABBSABARERBCABAQ4FIAEBEXEQBwgCEjkSPQgSQRJFEkkSTQYAAw4ODg4FIAASgIkKIAYB
CA4ODggQAgYgAgEOEjkFIAEIEj0FIAASgJUDIAAIBQACDg4cBCAAEkEDIAAcBCABHAgDIAAOBAYS
gKEEAAEIHAQAAQocAyAAAgUAAg4ODgkgAwESVR0IElkFIAIBCBwDBwEIBgACCBJZDgUgAR0ICAUg
ABKAsQYgARKAtRwFAAASgLkGIAEcEoC9CAABEoDBEYDFBSAAEoDJByACAQ4SgMkIt3pcVhk04IkI
iYRdzYCAzJECBg4CBgIDBhIUAwYSGAMGEgwDBhJdAwYSaQMGEm0DBhIgBCABAQoEIAEBAgsgBAEI
HQgdElUSWQUgAQESXQQAABJpBAAAEm0FAAEBEm0EAAASIAMAAAEDKAAKAygAAgMoAAgDKAAOBAgA
EmkECAASbQQIABIgCAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIA
AAAAACgBACNTQ19kMGExNDM0NTI4MmM0NmI2YWIzNzdlZWRkNWFmOWYyNgAABQEAAAAAFgEAEUNv
cHlyaWdodCBAICAyMDI1AABJAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjcBAFQOFEZyYW1l
d29ya0Rpc3BsYXlOYW1lEi5ORVQgRnJhbWV3b3JrIDQuNwQBAAAAtAAAAM7K774BAAAAkQAAAGxT
eXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4w
LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVt
LlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAABKAAAA
AAAAAAAAABpKAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMSgAAAAAAAAAAAAAAAF9Db3JEbGxN
YWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAAGAAA
gAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhgAADsAwAA
AAAAAAAAAADsAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAAAQAA
AAEAAAAAAAAAAQAAAAAAPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQByAEYA
aQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAETAMA
AAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAKAMAAAEAMAAwADAAMAAwADQAYgAwAAAA
GgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkATgBhAG0AZQAA
AAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAEMAXwBkADAA
YQAxADQAMwA0ADUAMgA4ADIAYwA0ADYAYgA2AGEAYgAzADcANwBlAGUAZABkADUAYQBmADkAZgAy
ADYAAAAwAAgAAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4AMAAuADAAAABwACgA
AQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAQwBfAGQAMABhADEANAAzADQANQAyADgAMgBj
ADQANgBiADYAYQBiADMANwA3AGUAZQBkAGQANQBhAGYAOQBmADIANgAuAGQAbABsAAAASAASAAEA
TABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAy
ADAAMgA1AAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgA
AQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBDAF8AZAAwAGEAMQA0ADMANAA1
ADIAOAAyAGMANAA2AGIANgBhAGIAMwA3ADcAZQBlAGQAZAA1AGEAZgA5AGYAMgA2AC4AZABsAGwA
AABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAQwBfAGQAMABhADEANAAzADQANQAy
ADgAMgBjADQANgBiADYAYQBiADMANwA3AGUAZQBkAGQANQBhAGYAOQBmADIANgAAADQACAABAFAA
cgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAA4AAgAAQBBAHMAcwBl
AG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAMAAAALDoAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_d0a14345282c46b6ab377eedd5af9f26</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::filename1401</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">13</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <outputs>
                <output
                  refId="Package\1400\Script Component.Outputs[Output 0]"
                  hasSideEffects="true"
                  name="Output 0">
                  <outputColumns>
                    <outputColumn
                      refId="Package\1400\Script Component.Outputs[Output 0].Columns[price]"
                      dataType="i8"
                      lineageId="Package\1400\Script Component.Outputs[Output 0].Columns[price]"
                      name="price" />
                    <outputColumn
                      refId="Package\1400\Script Component.Outputs[Output 0].Columns[cost]"
                      dataType="i8"
                      lineageId="Package\1400\Script Component.Outputs[Output 0].Columns[cost]"
                      name="cost" />
                    <outputColumn
                      refId="Package\1400\Script Component.Outputs[Output 0].Columns[month]"
                      dataType="i4"
                      lineageId="Package\1400\Script Component.Outputs[Output 0].Columns[month]"
                      name="month" />
                    <outputColumn
                      refId="Package\1400\Script Component.Outputs[Output 0].Columns[year]"
                      dataType="i4"
                      lineageId="Package\1400\Script Component.Outputs[Output 0].Columns[year]"
                      name="year" />
                    <outputColumn
                      refId="Package\1400\Script Component.Outputs[Output 0].Columns[Produce/Import]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\1400\Script Component.Outputs[Output 0].Columns[Produce/Import]"
                      name="Produce/Import" />
                    <outputColumn
                      refId="Package\1400\Script Component.Outputs[Output 0].Columns[Registered]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\1400\Script Component.Outputs[Output 0].Columns[Registered]"
                      name="Registered" />
                    <outputColumn
                      refId="Package\1400\Script Component.Outputs[Output 0].Columns[ProducerCountry]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\1400\Script Component.Outputs[Output 0].Columns[ProducerCountry]"
                      name="ProducerCountry" />
                    <outputColumn
                      refId="Package\1400\Script Component.Outputs[Output 0].Columns[ATCCode]"
                      dataType="wstr"
                      length="20"
                      lineageId="Package\1400\Script Component.Outputs[Output 0].Columns[ATCCode]"
                      name="ATCCode" />
                    <outputColumn
                      refId="Package\1400\Script Component.Outputs[Output 0].Columns[License]"
                      dataType="i4"
                      lineageId="Package\1400\Script Component.Outputs[Output 0].Columns[License]"
                      name="License" />
                    <outputColumn
                      refId="Package\1400\Script Component.Outputs[Output 0].Columns[biological]"
                      dataType="i4"
                      lineageId="Package\1400\Script Component.Outputs[Output 0].Columns[biological]"
                      name="biological" />
                    <outputColumn
                      refId="Package\1400\Script Component.Outputs[Output 0].Columns[OTC]"
                      dataType="i4"
                      lineageId="Package\1400\Script Component.Outputs[Output 0].Columns[OTC]"
                      name="OTC" />
                    <outputColumn
                      refId="Package\1400\Script Component.Outputs[Output 0].Columns[ConsumerPrice]"
                      dataType="i8"
                      lineageId="Package\1400\Script Component.Outputs[Output 0].Columns[ConsumerPrice]"
                      name="ConsumerPrice" />
                    <outputColumn
                      refId="Package\1400\Script Component.Outputs[Output 0].Columns[QuantitySales]"
                      dataType="i4"
                      lineageId="Package\1400\Script Component.Outputs[Output 0].Columns[QuantitySales]"
                      name="QuantitySales" />
                    <outputColumn
                      refId="Package\1400\Script Component.Outputs[Output 0].Columns[QuantityInPKG]"
                      dataType="i4"
                      lineageId="Package\1400\Script Component.Outputs[Output 0].Columns[QuantityInPKG]"
                      name="QuantityInPKG" />
                    <outputColumn
                      refId="Package\1400\Script Component.Outputs[Output 0].Columns[QuantityPkG]"
                      dataType="i4"
                      lineageId="Package\1400\Script Component.Outputs[Output 0].Columns[QuantityPkG]"
                      name="QuantityPkG" />
                    <outputColumn
                      refId="Package\1400\Script Component.Outputs[Output 0].Columns[GenericName]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\1400\Script Component.Outputs[Output 0].Columns[GenericName]"
                      name="GenericName" />
                    <outputColumn
                      refId="Package\1400\Script Component.Outputs[Output 0].Columns[GenericCode]"
                      dataType="i4"
                      lineageId="Package\1400\Script Component.Outputs[Output 0].Columns[GenericCode]"
                      name="GenericCode" />
                    <outputColumn
                      refId="Package\1400\Script Component.Outputs[Output 0].Columns[EffectiveMaterial]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\1400\Script Component.Outputs[Output 0].Columns[EffectiveMaterial]"
                      name="EffectiveMaterial" />
                    <outputColumn
                      refId="Package\1400\Script Component.Outputs[Output 0].Columns[BrandName]"
                      dataType="wstr"
                      length="250"
                      lineageId="Package\1400\Script Component.Outputs[Output 0].Columns[BrandName]"
                      name="BrandName" />
                    <outputColumn
                      refId="Package\1400\Script Component.Outputs[Output 0].Columns[EnglishNameBrand]"
                      dataType="wstr"
                      length="250"
                      lineageId="Package\1400\Script Component.Outputs[Output 0].Columns[EnglishNameBrand]"
                      name="EnglishNameBrand" />
                    <outputColumn
                      refId="Package\1400\Script Component.Outputs[Output 0].Columns[IRC]"
                      dataType="wstr"
                      length="250"
                      lineageId="Package\1400\Script Component.Outputs[Output 0].Columns[IRC]"
                      name="IRC" />
                    <outputColumn
                      refId="Package\1400\Script Component.Outputs[Output 0].Columns[Producer]"
                      dataType="wstr"
                      length="250"
                      lineageId="Package\1400\Script Component.Outputs[Output 0].Columns[Producer]"
                      name="Producer" />
                    <outputColumn
                      refId="Package\1400\Script Component.Outputs[Output 0].Columns[Supplier]"
                      dataType="wstr"
                      length="250"
                      lineageId="Package\1400\Script Component.Outputs[Output 0].Columns[Supplier]"
                      name="Supplier" />
                    <outputColumn
                      refId="Package\1400\Script Component.Outputs[Output 0].Columns[OwenerBrand]"
                      dataType="wstr"
                      length="250"
                      lineageId="Package\1400\Script Component.Outputs[Output 0].Columns[OwenerBrand]"
                      name="OwenerBrand" />
                    <outputColumn
                      refId="Package\1400\Script Component.Outputs[Output 0].Columns[Distributer]"
                      dataType="wstr"
                      length="250"
                      lineageId="Package\1400\Script Component.Outputs[Output 0].Columns[Distributer]"
                      name="Distributer" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\1400.Paths[Output 0]"
              endId="Package\1400\OLE DB Destination.Inputs[OLE DB Destination Input]"
              name="Output 0"
              startId="Package\1400\Script Component.Outputs[Output 0]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\1401"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{da2269fb-b337-4b47-80f5-3fdfd1dd375f}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="1401"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\1401\OLE DB Destination"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="OLE DB Destination"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[amarDistribute]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\1401\OLE DB Destination.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[192.168.10.10.DW]"
                  connectionManagerRefId="Package.ConnectionManagers[192.168.10.10.DW]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\1401\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\1401\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[price]"
                      cachedDataType="i8"
                      cachedName="price"
                      externalMetadataColumnId="Package\1401\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[price]"
                      lineageId="Package\1401\Script Component.Outputs[Output 0].Columns[price]" />
                    <inputColumn
                      refId="Package\1401\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[cost]"
                      cachedDataType="i8"
                      cachedName="cost"
                      externalMetadataColumnId="Package\1401\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[cost]"
                      lineageId="Package\1401\Script Component.Outputs[Output 0].Columns[cost]" />
                    <inputColumn
                      refId="Package\1401\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[month]"
                      cachedDataType="i4"
                      cachedName="month"
                      externalMetadataColumnId="Package\1401\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[month]"
                      lineageId="Package\1401\Script Component.Outputs[Output 0].Columns[month]" />
                    <inputColumn
                      refId="Package\1401\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[year]"
                      cachedDataType="i4"
                      cachedName="year"
                      externalMetadataColumnId="Package\1401\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[year]"
                      lineageId="Package\1401\Script Component.Outputs[Output 0].Columns[year]" />
                    <inputColumn
                      refId="Package\1401\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Produce/Import]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Produce/Import"
                      externalMetadataColumnId="Package\1401\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Produce/Import]"
                      lineageId="Package\1401\Script Component.Outputs[Output 0].Columns[Produce/Import]" />
                    <inputColumn
                      refId="Package\1401\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Registered]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Registered"
                      externalMetadataColumnId="Package\1401\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Registered]"
                      lineageId="Package\1401\Script Component.Outputs[Output 0].Columns[Registered]" />
                    <inputColumn
                      refId="Package\1401\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[ProducerCountry]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="ProducerCountry"
                      externalMetadataColumnId="Package\1401\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ProducerCountry]"
                      lineageId="Package\1401\Script Component.Outputs[Output 0].Columns[ProducerCountry]" />
                    <inputColumn
                      refId="Package\1401\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[ATCCode]"
                      cachedDataType="wstr"
                      cachedLength="20"
                      cachedName="ATCCode"
                      externalMetadataColumnId="Package\1401\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ATCCode]"
                      lineageId="Package\1401\Script Component.Outputs[Output 0].Columns[ATCCode]" />
                    <inputColumn
                      refId="Package\1401\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[License]"
                      cachedDataType="i4"
                      cachedName="License"
                      externalMetadataColumnId="Package\1401\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[License]"
                      lineageId="Package\1401\Script Component.Outputs[Output 0].Columns[License]" />
                    <inputColumn
                      refId="Package\1401\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[biological]"
                      cachedDataType="i4"
                      cachedName="biological"
                      externalMetadataColumnId="Package\1401\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[biological]"
                      lineageId="Package\1401\Script Component.Outputs[Output 0].Columns[biological]" />
                    <inputColumn
                      refId="Package\1401\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[OTC]"
                      cachedDataType="i4"
                      cachedName="OTC"
                      externalMetadataColumnId="Package\1401\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[OTC]"
                      lineageId="Package\1401\Script Component.Outputs[Output 0].Columns[OTC]" />
                    <inputColumn
                      refId="Package\1401\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[ConsumerPrice]"
                      cachedDataType="i8"
                      cachedName="ConsumerPrice"
                      externalMetadataColumnId="Package\1401\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ConsumerPrice]"
                      lineageId="Package\1401\Script Component.Outputs[Output 0].Columns[ConsumerPrice]" />
                    <inputColumn
                      refId="Package\1401\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[QuantitySales]"
                      cachedDataType="i4"
                      cachedName="QuantitySales"
                      externalMetadataColumnId="Package\1401\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[QuantitySales]"
                      lineageId="Package\1401\Script Component.Outputs[Output 0].Columns[QuantitySales]" />
                    <inputColumn
                      refId="Package\1401\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[QuantityInPKG]"
                      cachedDataType="i4"
                      cachedName="QuantityInPKG"
                      externalMetadataColumnId="Package\1401\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[QuantityInPKG]"
                      lineageId="Package\1401\Script Component.Outputs[Output 0].Columns[QuantityInPKG]" />
                    <inputColumn
                      refId="Package\1401\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[QuantityPkG]"
                      cachedDataType="i4"
                      cachedName="QuantityPkG"
                      externalMetadataColumnId="Package\1401\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[QuantityPkG]"
                      lineageId="Package\1401\Script Component.Outputs[Output 0].Columns[QuantityPkG]" />
                    <inputColumn
                      refId="Package\1401\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[GenericName]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="GenericName"
                      externalMetadataColumnId="Package\1401\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[GenericName]"
                      lineageId="Package\1401\Script Component.Outputs[Output 0].Columns[GenericName]" />
                    <inputColumn
                      refId="Package\1401\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[GenericCode]"
                      cachedDataType="i4"
                      cachedName="GenericCode"
                      externalMetadataColumnId="Package\1401\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[GenericCode]"
                      lineageId="Package\1401\Script Component.Outputs[Output 0].Columns[GenericCode]" />
                    <inputColumn
                      refId="Package\1401\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[EffectiveMaterial]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="EffectiveMaterial"
                      externalMetadataColumnId="Package\1401\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[EffectiveMaterial]"
                      lineageId="Package\1401\Script Component.Outputs[Output 0].Columns[EffectiveMaterial]" />
                    <inputColumn
                      refId="Package\1401\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[BrandName]"
                      cachedDataType="wstr"
                      cachedLength="250"
                      cachedName="BrandName"
                      externalMetadataColumnId="Package\1401\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[BrandName]"
                      lineageId="Package\1401\Script Component.Outputs[Output 0].Columns[BrandName]" />
                    <inputColumn
                      refId="Package\1401\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[EnglishNameBrand]"
                      cachedDataType="wstr"
                      cachedLength="250"
                      cachedName="EnglishNameBrand"
                      externalMetadataColumnId="Package\1401\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[EnglishNameBrand]"
                      lineageId="Package\1401\Script Component.Outputs[Output 0].Columns[EnglishNameBrand]" />
                    <inputColumn
                      refId="Package\1401\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[IRC]"
                      cachedDataType="wstr"
                      cachedLength="250"
                      cachedName="IRC"
                      externalMetadataColumnId="Package\1401\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[IRC]"
                      lineageId="Package\1401\Script Component.Outputs[Output 0].Columns[IRC]" />
                    <inputColumn
                      refId="Package\1401\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Producer]"
                      cachedDataType="wstr"
                      cachedLength="250"
                      cachedName="Producer"
                      externalMetadataColumnId="Package\1401\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Producer]"
                      lineageId="Package\1401\Script Component.Outputs[Output 0].Columns[Producer]" />
                    <inputColumn
                      refId="Package\1401\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Supplier]"
                      cachedDataType="wstr"
                      cachedLength="250"
                      cachedName="Supplier"
                      externalMetadataColumnId="Package\1401\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Supplier]"
                      lineageId="Package\1401\Script Component.Outputs[Output 0].Columns[Supplier]" />
                    <inputColumn
                      refId="Package\1401\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[OwenerBrand]"
                      cachedDataType="wstr"
                      cachedLength="250"
                      cachedName="OwenerBrand"
                      externalMetadataColumnId="Package\1401\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[OwenerBrand]"
                      lineageId="Package\1401\Script Component.Outputs[Output 0].Columns[OwenerBrand]" />
                    <inputColumn
                      refId="Package\1401\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Distributer]"
                      cachedDataType="wstr"
                      cachedLength="250"
                      cachedName="Distributer"
                      externalMetadataColumnId="Package\1401\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Distributer]"
                      lineageId="Package\1401\Script Component.Outputs[Output 0].Columns[Distributer]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\1401\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Distributer]"
                      dataType="wstr"
                      length="250"
                      name="Distributer" />
                    <externalMetadataColumn
                      refId="Package\1401\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[OwenerBrand]"
                      dataType="wstr"
                      length="250"
                      name="OwenerBrand" />
                    <externalMetadataColumn
                      refId="Package\1401\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Supplier]"
                      dataType="wstr"
                      length="250"
                      name="Supplier" />
                    <externalMetadataColumn
                      refId="Package\1401\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Producer]"
                      dataType="wstr"
                      length="250"
                      name="Producer" />
                    <externalMetadataColumn
                      refId="Package\1401\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[IRC]"
                      dataType="wstr"
                      length="250"
                      name="IRC" />
                    <externalMetadataColumn
                      refId="Package\1401\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[EnglishNameBrand]"
                      dataType="wstr"
                      length="250"
                      name="EnglishNameBrand" />
                    <externalMetadataColumn
                      refId="Package\1401\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[BrandName]"
                      dataType="wstr"
                      length="250"
                      name="BrandName" />
                    <externalMetadataColumn
                      refId="Package\1401\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[EffectiveMaterial]"
                      dataType="wstr"
                      length="250"
                      name="EffectiveMaterial" />
                    <externalMetadataColumn
                      refId="Package\1401\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[GenericCode]"
                      dataType="wstr"
                      length="15"
                      name="GenericCode" />
                    <externalMetadataColumn
                      refId="Package\1401\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[GenericName]"
                      dataType="wstr"
                      length="250"
                      name="GenericName" />
                    <externalMetadataColumn
                      refId="Package\1401\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[QuantityPkG]"
                      dataType="i8"
                      name="QuantityPkG" />
                    <externalMetadataColumn
                      refId="Package\1401\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[QuantityInPKG]"
                      dataType="i4"
                      name="QuantityInPKG" />
                    <externalMetadataColumn
                      refId="Package\1401\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[QuantitySales]"
                      dataType="i8"
                      name="QuantitySales" />
                    <externalMetadataColumn
                      refId="Package\1401\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ConsumerPrice]"
                      dataType="i8"
                      name="ConsumerPrice" />
                    <externalMetadataColumn
                      refId="Package\1401\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[OTC]"
                      dataType="wstr"
                      length="20"
                      name="OTC" />
                    <externalMetadataColumn
                      refId="Package\1401\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[biological]"
                      dataType="wstr"
                      length="20"
                      name="biological" />
                    <externalMetadataColumn
                      refId="Package\1401\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[License]"
                      dataType="bool"
                      name="License" />
                    <externalMetadataColumn
                      refId="Package\1401\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ATCCode]"
                      dataType="wstr"
                      length="20"
                      name="ATCCode" />
                    <externalMetadataColumn
                      refId="Package\1401\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ProducerCountry]"
                      dataType="wstr"
                      length="100"
                      name="ProducerCountry" />
                    <externalMetadataColumn
                      refId="Package\1401\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Registered]"
                      dataType="wstr"
                      length="10"
                      name="Registered" />
                    <externalMetadataColumn
                      refId="Package\1401\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Produce/Import]"
                      dataType="wstr"
                      length="10"
                      name="Produce/Import" />
                    <externalMetadataColumn
                      refId="Package\1401\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[year]"
                      dataType="i4"
                      name="year" />
                    <externalMetadataColumn
                      refId="Package\1401\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[month]"
                      dataType="i4"
                      name="month" />
                    <externalMetadataColumn
                      refId="Package\1401\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[cost]"
                      dataType="i8"
                      name="cost" />
                    <externalMetadataColumn
                      refId="Package\1401\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[price]"
                      dataType="i8"
                      name="price" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\1401\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\1401\OLE DB Destination.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\1401\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\1401\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\1401\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\1401\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\1401\Script Component"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;13"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Script Component"
              version="13">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_d0a14345282c46b6ab377eedd5af9f26")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_d0a14345282c46b6ab377eedd5af9f26")]
[assembly: AssemblyCopyright("Copyright @  2025")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help: Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component.
 */
#endregion

#region Namespaces
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using System;
using System.Data;
using System.Data.OleDb;
using System.Windows.Forms;
#endregion

/// <summary>
/// This is the class to which to add your code. Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    string processResult = "Success";
    bool fireAgain = false;
    #region Help: Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable. To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     *
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     * DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     * Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help: Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component. See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor. To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     *
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     * object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     * SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     * object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     * string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     * Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help: Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     * ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     * ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     * ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        //Variab/*l*/es.Result1 = processResult; // فقط اینجا میشه نوشت
    }



    public override void CreateNewOutputRows()
    {


        string connStr = "Provider=Microsoft.ACE.OLEDB.12.0;" +
                 $"Data Source={Variables.filename1401};" +
                 "Extended Properties=\"Excel 12.0;HDR=YES;IMEX=1\";";

        bool fireAgain = false;

        using (OleDbConnection conn = new OleDbConnection(connStr))
        {
            //ComponentMetaData.FireInformation(0, "CustomLog", $"Updated ID , rows affected: {Variables.filname1}", "", 0, ref fireAgain);
            try
            {
                conn.Open();
                ComponentMetaData.FireInformation(0, "CustomLog", $"Updated ID , rows affected: conn.Open()", "", 0, ref fireAgain);

                OleDbDataAdapter da = new OleDbDataAdapter("SELECT * FROM [Dataset$]", conn);
                ComponentMetaData.FireInformation(0, "CustomLog", $"Updated ID , rows affected: OleDbDataAdapter", "", 0, ref fireAgain);

                DataTable dt = new DataTable();
                da.Fill(dt);
                ComponentMetaData.FireInformation(0, "CustomLog", $"Updated ID , rows affected: da.Fill(dt)", "", 0, ref fireAgain);
                int rowCount = dt.Rows.Count;
                ComponentMetaData.FireInformation(0, "CustomLog", $"Rows Count: {rowCount}", "", 0, ref fireAgain);





                foreach (DataRow row in dt.Rows)
                {
                    Output0Buffer.AddRow();
                    Output0Buffer.Distributer = row[0]?.ToString();
                    
                    Output0Buffer.OwenerBrand = row[1]?.ToString();
                    Output0Buffer.Supplier = row[2]?.ToString();
                    Output0Buffer.Producer = row[3].ToString();
                    Output0Buffer.IRC = row[5].ToString();
                    Output0Buffer.EnglishNameBrand = row[6].ToString();
                    Output0Buffer.BrandName = row[7].ToString();
                    Output0Buffer.EffectiveMaterial = row[8].ToString();
                    Output0Buffer.GenericCode = row[9] == DBNull.Value ? 0 : Convert.ToInt32(row[9]);
                    Output0Buffer.GenericName = row[10].ToString();
                    Output0Buffer.month = 1;
                    Output0Buffer.QuantityPkG = row[11] == DBNull.Value ? 0 : Convert.ToInt32(row[11]);
                    Output0Buffer.QuantityInPKG = row[12] == DBNull.Value ? 0 : Convert.ToInt32(row[12]);
                    Output0Buffer.QuantitySales = row[13] == DBNull.Value ? 0 : Convert.ToInt32(row[13]);
                    Output0Buffer.cost = 0;
                    Output0Buffer.price = 0;
                    Output0Buffer.ConsumerPrice = row[14] == DBNull.Value ? 0 : Convert.ToInt64(row[14]);
                    Output0Buffer.OTC = row[15] == DBNull.Value ? 0 : Convert.ToInt32(row[15]);
                    Output0Buffer.biological = row[16] == DBNull.Value ? 0 : Convert.ToInt32(row[16]);
                    Output0Buffer.ATCCode = row[18].ToString();
                    Output0Buffer.ProducerCountry = row[19].ToString();
                    Output0Buffer.Registered = row[20].ToString();
                    Output0Buffer.ProduceImport = row[21].ToString();
                    Output0Buffer.year = 1401;
                }
            }
            catch (Exception ex)
            {
                processResult = "Fail"; // فقط مقدار local تغییر می‌کنه
                ComponentMetaData.FireInformation(0, "CustomLog", $"Exception: {ex.Message}", "", 0, ref fireAgain);
            }



      
        }
    }

    /* Add rows by calling the AddRow method on the member variable named "<Output Name>Buffer". 
       For example, call MyOutputBuffer.AddRow() if your output was named "MyOutput". */
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Output0Buffer: ScriptBuffer

{
    public Output0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Int64 price
    {
        set
        {
            this[0] = value;
        }
    }
    public bool price_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int64 cost
    {
        set
        {
            this[1] = value;
        }
    }
    public bool cost_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 month
    {
        set
        {
            this[2] = value;
        }
    }
    public bool month_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 year
    {
        set
        {
            this[3] = value;
        }
    }
    public bool year_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ProduceImport
    {
        set
        {
            this[4] = value;
        }
    }
    public bool ProduceImport_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Registered
    {
        set
        {
            this[5] = value;
        }
    }
    public bool Registered_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ProducerCountry
    {
        set
        {
            this[6] = value;
        }
    }
    public bool ProducerCountry_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ATCCode
    {
        set
        {
            this[7] = value;
        }
    }
    public bool ATCCode_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 License
    {
        set
        {
            this[8] = value;
        }
    }
    public bool License_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(8);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 biological
    {
        set
        {
            this[9] = value;
        }
    }
    public bool biological_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(9);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 OTC
    {
        set
        {
            this[10] = value;
        }
    }
    public bool OTC_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(10);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int64 ConsumerPrice
    {
        set
        {
            this[11] = value;
        }
    }
    public bool ConsumerPrice_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(11);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 QuantitySales
    {
        set
        {
            this[12] = value;
        }
    }
    public bool QuantitySales_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(12);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 QuantityInPKG
    {
        set
        {
            this[13] = value;
        }
    }
    public bool QuantityInPKG_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(13);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 QuantityPkG
    {
        set
        {
            this[14] = value;
        }
    }
    public bool QuantityPkG_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(14);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String GenericName
    {
        set
        {
            this[15] = value;
        }
    }
    public bool GenericName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(15);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 GenericCode
    {
        set
        {
            this[16] = value;
        }
    }
    public bool GenericCode_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(16);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String EffectiveMaterial
    {
        set
        {
            this[17] = value;
        }
    }
    public bool EffectiveMaterial_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(17);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String BrandName
    {
        set
        {
            this[18] = value;
        }
    }
    public bool BrandName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(18);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String EnglishNameBrand
    {
        set
        {
            this[19] = value;
        }
    }
    public bool EnglishNameBrand_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(19);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String IRC
    {
        set
        {
            this[20] = value;
        }
    }
    public bool IRC_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(20);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Producer
    {
        set
        {
            this[21] = value;
        }
    }
    public bool Producer_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(21);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Supplier
    {
        set
        {
            this[22] = value;
        }
    }
    public bool Supplier_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(22);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String OwenerBrand
    {
        set
        {
            this[23] = value;
        }
    }
    public bool OwenerBrand_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(23);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Distributer
    {
        set
        {
            this[24] = value;
        }
    }
    public bool Distributer_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(24);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_d0a14345282c46b6ab377eedd5af9f26.Properties.Settings.get_Default():SC_d0a14345282c46b6ab377eedd5af9f26.Properties.Sett" +
    "ings")]

namespace SC_d0a14345282c46b6ab377eedd5af9f26.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output0Buffer Output0Buffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output0Buffer)
        {
            Output0Buffer.SetEndOfRowset();
            Output0Buffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 0"))
            {
                Output0Buffer = new Output0Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String filename1401
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["filename1401"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_d0a14345282c46b6ab377eedd5af9f26</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_d0a14345282c46b6ab377eedd5af9f26</msb:DisplayName>
    <msb:ProjectId>{7405018D-1A1D-441C-8269-4B7E8BDAEA78}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_d0a14345282c46b6ab377eedd5af9f26.csproj" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_d0a14345282c46b6ab377eedd5af9f26.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{15527E59-F829-4CEC-A450-B6E96C25074F}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_d0a14345282c46b6ab377eedd5af9f26</RootNamespace>
    <AssemblyName>SC_d0a14345282c46b6ab377eedd5af9f26</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_d0a14345282c46b6ab377eedd5af9f26.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_d0a14345282c46b6ab377eedd5af9f26.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_d0a14345282c46b6ab377eedd5af9f26.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_d0a14345282c46b6ab377eedd5af9f26.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_d0a14345282c46b6ab377eedd5af9f26.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_d0a14345282c46b6ab377eedd5af9f26.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[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
BgA2AOQoAAAAAMYA0gscATYAwygAAAAAxgHbCgYAOgA5KQAAAACGGGsJKAE6AEgpAAAAAIYYawko
ATsAVykAAAAAhghTAG8APAB9KQAAAACDGGsJBgA8AIUpAAAAAJMIvgguATwAsSkAAAAAkwg2AjMB
PAC4KQAAAACTCEICOAE8AMApAAAAAJYIEws+AT0AxykAAAAAhhhrCQYAPQDPKQAAAACRGHEJQwE9
AAAAAQC3CAAAAgBvCgAAAwAtCAAAAQB1BAAAAQB1BAAAAQB1BAAAAQB1BAAAAQB1BAAAAQB1BAAA
AQB1BAAAAQB1BAAAAQB1BAAAAQB1BAAAAQB1BAAAAQB1BAAAAQB1BAAAAQB1BAAAAQB1BAAAAQB1
BAAAAQB1BAAAAQB1BAAAAQB1BAAAAQB1BAAAAQB1BAAAAQB1BAAAAQB1BAAAAQB1BAAAAQB1BAAA
AQB1BAAAAQB1BAAAAQB1BAAAAQB1BAAAAQB1BAAAAQB1BAAAAQB1BAAAAQB1BAAAAQB1BAAAAQB1
BAAAAQB1BAAAAQB1BAAAAQB1BAAAAQB1BAAAAQB1BAAAAQB1BAAAAQB1BAAAAQB1BAAAAQB1BAAA
AQB1BAAAAQB1BAAAAQB1BAAAAQB1BAAAAQB1BAAAAQB1BAAAAQDKCgAAAgB4CQAAAwC8CgAABAAt
CAAAAQBRCwAAAQBRCwAAAQB1BAkAawkBABEAawkGABkAawkKACkAawkQADEAawkQADkAawkQAEEA
awkQAEkAawkQAFEAawkQAFkAawkQAGEAawkQAGkAawkGAMkAawkGAOkAawkVAPkAawkGALkAWAQG
ALkAYwQGAAEB7wosAHEAawkQAAkBXgcGALkA6wAzABEBeAc5ABkBawlEAHkAawkGACEBCwVLAHkA
0gpRADEBZwtXAAEB9gpbADEBXQlhAIEAWwtmAIkAOQdqAMEAlQRvAEEBbwRzAEkBZAB4AEkBbAB9
AIEA3guCAJEAnQIGAJkArAFvAAEB7wqGAKEAawmMAKEAQgeWAKEAMQcBAFkBawkQAKEAMwwGAKEA
BAsGAKEABwuCALkAawkGALkAsQCgALkAgwqnAMEAawkGALkAWQqtAGEBOQezALkAFgy6AGkB5wvA
AIEB4AHHAIEBOgzQANEAawnWAPEAawkGAC4ACwBmAS4AEwBvAS4AGwCOAS4AIwCXAS4AKwDAAS4A
MwDAAS4AOwDAAS4AQwCXAS4ASwDGAS4AUwDAAS4AWwDdAUMAYwAnAuMAawAnAkEBewAnAokGcwCO
AakGcwCOARsAnAADAAEABgAzAAcANAAIADYAAAB6AUcBAADLBUsBAADNC0cBAAAKB0sBAACiBE8B
AABFBksBAACCCE8BAACJBksBAACaC1MBAADxBksBAAA0AVMBAABpBUsBAABLDFMBAAAaB0sBAACU
AVMBAADcBUsBAACVAk8BAAAyBksBAACsBE8BAABWBksBAACtAE8BAAAqBUsBAABoAUcBAACyBUsB
AABLCk8BAADYBksBAADBAE8BAAA5BUsBAADTAE8BAABSBUsBAAD2AVMBAAAGBksBAACgAU8BAADv
BUsBAAC7BFMBAABsBksBAAAGAlMBAAAdBksBAABDAVMBAAB/BUsBAAClAFMBAAAbBUsBAACLCFMB
AACZBksBAADWCFMBAACtBksBAABYAVMBAACbBUsBAABFCVMBAADBBksBAABXAFMBAADCCFcBAABW
AlwBAAAXC2EBAQAGAAMAAQAHAAUAAQAIAAcAAQAJAAkAAQAKAAsAAQALAA0AAQAMAA8AAQANABEA
AQAOABMAAQAPABUAAQAQABcAAQARABkAAQASABsAAQATAB0AAQAUAB8AAQAVACEAAQAWACMAAQAX
ACUAAQAYACcAAQAZACkAAQAaACsAAQAbAC0AAQAcAC8AAQAdADEAAQAeADMAAQAfADUAAQAgADcA
AQAhADkAAQAiADsAAQAjAD0AAQAkAD8AAQAlAEEAAQAmAEMAAQAnAEUAAQAoAEcAAQApAEkAAQAq
AEsAAQArAE0AAQAsAE8AAQAtAFEAAQAuAFMAAQAvAFUAAQAwAFcAAQAxAFkAAQAyAFsAAQAzAF0A
AQA0AF8AAQA1AGEAAQA2AGMAAQA3AGUAAgBCAGcAAgBEAGkAAgBFAGsAAQBGAGsAAgBHAG0ABIAA
AAEAAAAAAAAAAAAAAAAAdAAAAAQAAAAAAAAAAAAAAN4AEwEAAAAAEAAAAAAAAAAAAAAA5wBxCwAA
AAAEAAAAAAAAAAAAAADeAN8AAAAAABAAAAAAAAAAAAAAAOcAqAsAAAAABAAAAAAAAAAAAAAA3gBL
BwAAAAAQAAAAAAAAAAAAAADnAFoIAAAAABAAAAAAAAAAAAAAAOcANwgAAAAAAAAAAAEAAADGCQAA
AAAAAABJRFRTQ29tcG9uZW50TWV0YURhdGExMDAASURUU1ZhcmlhYmxlMTAwAElEVFNWYXJpYWJs
ZXMxMDAASURUU0V2YWx1YXRvckNvbnRleHQxMDAAZ2V0X2ZpbGVuYW1lMTQwMQBUb0ludDMyAFRv
SW50NjQAU0NfZDBhMTQzNDUyODJjNDZiNmFiMzc3ZWVkZDVhZjlmMjYAPE1vZHVsZT4Ac2V0X0lS
QwBzZXRfT1RDAEdldE91dHB1dElEAHNldF9RdWFudGl0eUluUEtHAHNldF9RdWFudGl0eVBrRwBT
eXN0ZW0uRGF0YQBnZXRfQ29tcG9uZW50TWV0YURhdGEAU3lzdGVtLkRhdGEuT2xlRGIAbXNjb3Js
aWIATWFya091dHB1dHNGaW5pc2hlZABzZXRfUmVnaXN0ZXJlZABzZXRfRW5nbGlzaE5hbWVCcmFu
ZABzZXRfT3dlbmVyQnJhbmQAc2V0X0NvbnN1bWVyUHJpY2UAc2V0X3ByaWNlAGRlZmF1bHRJbnN0
YW5jZQBzZXRfQVRDQ29kZQBzZXRfR2VuZXJpY0NvZGUAZ2V0X01lc3NhZ2UARGF0YVRhYmxlAElE
aXNwb3NhYmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAHNldF9HZW5lcmlj
TmFtZQBzZXRfQnJhbmROYW1lAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lAFR5cGUA
Z2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJlAEludGVybmFsRGF0YUNvbGxl
Y3Rpb25CYXNlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAHNldF9MaWNlbnNlAERpc3Bvc2UARWRp
dG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25V
c2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJp
YnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRh
cmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNz
ZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRl
AEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lT
U2NyaXB0Q29tcG9uZW50RW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1
dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAUHJlRXhlY3V0ZQBQb3N0RXhlY3V0ZQBW
YWx1ZQB2YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRvU3RyaW5nAHNldF9tb250aABz
ZXRfYmlvbG9naWNhbABzZXRfRWZmZWN0aXZlTWF0ZXJpYWwAU3lzdGVtLkNvbXBvbmVudE1vZGVs
AFNDX2QwYTE0MzQ1MjgyYzQ2YjZhYjM3N2VlZGQ1YWY5ZjI2LmRsbABGaWxsAERCTnVsbABzZXRf
SVJDX0lzTnVsbABzZXRfT1RDX0lzTnVsbABzZXRfUXVhbnRpdHlJblBLR19Jc051bGwAc2V0X1F1
YW50aXR5UGtHX0lzTnVsbABzZXRfUmVnaXN0ZXJlZF9Jc051bGwAc2V0X0VuZ2xpc2hOYW1lQnJh
bmRfSXNOdWxsAHNldF9Pd2VuZXJCcmFuZF9Jc051bGwAc2V0X0NvbnN1bWVyUHJpY2VfSXNOdWxs
AHNldF9wcmljZV9Jc051bGwAc2V0X0FUQ0NvZGVfSXNOdWxsAHNldF9HZW5lcmljQ29kZV9Jc051
bGwAc2V0X0dlbmVyaWNOYW1lX0lzTnVsbABzZXRfQnJhbmROYW1lX0lzTnVsbABzZXRfTGljZW5z
ZV9Jc051bGwAc2V0X21vbnRoX0lzTnVsbABzZXRfYmlvbG9naWNhbF9Jc051bGwAc2V0X0VmZmVj
dGl2ZU1hdGVyaWFsX0lzTnVsbABzZXRfeWVhcl9Jc051bGwAc2V0X1Byb2R1Y2VyX0lzTnVsbABz
ZXRfU3VwcGxpZXJfSXNOdWxsAHNldF9EaXN0cmlidXRlcl9Jc051bGwAc2V0X1F1YW50aXR5U2Fs
ZXNfSXNOdWxsAHNldF9Qcm9kdWNlSW1wb3J0X0lzTnVsbABzZXRfY29zdF9Jc051bGwAc2V0X1By
b2R1Y2VyQ291bnRyeV9Jc051bGwAU2V0TnVsbABnZXRfSXRlbQBzZXRfSXRlbQBTeXN0ZW0AcmVz
b3VyY2VNYW4AT3BlbgBTY3JpcHRNYWluAGZpcmVBZ2FpbgBGaXJlSW5mb3JtYXRpb24AU3lzdGVt
LkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24ARGF0
YVJvd0NvbGxlY3Rpb24AT2xlRGJDb25uZWN0aW9uAEludmFsaWRPcGVyYXRpb25FeGNlcHRpb24A
U3lzdGVtLkRhdGEuQ29tbW9uAEN1bHR1cmVJbmZvAE91dHB1dE5hbWVNYXAAT3V0cHV0TWFwAE1p
Y3Jvc29mdC5TcWxTZXJ2ZXIuRFRTUnVudGltZVdyYXAATWljcm9zb2Z0LlNxbFNlcnZlci5EVFNQ
aXBlbGluZVdyYXAAc2V0X3llYXIAc2V0X1Byb2R1Y2VyAE91dHB1dDBCdWZmZXIAUGlwZWxpbmVC
dWZmZXIAU2NyaXB0QnVmZmVyAGdldF9SZXNvdXJjZU1hbmFnZXIAc2V0X1N1cHBsaWVyAE1pY3Jv
c29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUuV3JhcHBlcgBNaWNyb3NvZnQuU3FsU2VydmVyLkR0
cy5QaXBlbGluZS5XcmFwcGVyAE9sZURiRGF0YUFkYXB0ZXIAc2V0X0Rpc3RyaWJ1dGVyAElFbnVt
ZXJhdG9yAEdldEVudW1lcmF0b3IALmN0b3IALmNjdG9yAE91dHB1dElEcwBTeXN0ZW0uRGlhZ25v
c3RpY3MAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFND
X2QwYTE0MzQ1MjgyYzQ2YjZhYjM3N2VlZGQ1YWY5ZjI2LlByb3BlcnRpZXMuUmVzb3VyY2VzLnJl
c291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBTQ19kMGExNDM0NTI4MmM0NmI2YWIzNzdlZWRkNWFmOWYy
Ni5Qcm9wZXJ0aWVzAHNldF9RdWFudGl0eVNhbGVzAGdldF9SZWFkT25seVZhcmlhYmxlcwBCdWZm
ZXJDb2x1bW5JbmRleGVzAEdldENvbHVtbkluZGV4ZXMAU2V0dGluZ3MAU3lzdGVtLkNvbGxlY3Rp
b25zAENvbm5lY3Rpb25zAEJ1ZmZlcnMARmluaXNoT3V0cHV0cwBnZXRfUm93cwBDcmVhdGVOZXdP
dXRwdXRSb3dzAENvbmNhdABGb3JtYXQAT2JqZWN0AFNldEVuZE9mUm93c2V0AGdldF9EZWZhdWx0
AHByb2Nlc3NSZXN1bHQAVXNlckNvbXBvbmVudABQYXJlbnRDb21wb25lbnQAU2NyaXB0Q29tcG9u
ZW50AGdldF9DdXJyZW50AGdldF9Db3VudABNaWNyb3NvZnQuU3FsU2VydmVyLlR4U2NyaXB0AENv
bnZlcnQAc2V0X1Byb2R1Y2VJbXBvcnQATWljcm9zb2Z0LlNxbFNlcnZlci5QaXBlbGluZUhvc3QA
c2V0X2Nvc3QAUHJpbWVPdXRwdXQATW92ZU5leHQAR2V0VmFsdWVXaXRoQ29udGV4dABTY3JpcHRD
b21wb25lbnRFdmFsQ29udGV4dABnZXRfRXZhbHVhdG9yQ29udGV4dABEYXRhUm93AEFkZFJvdwBn
ZXRfQXNzZW1ibHkAc2V0X1Byb2R1Y2VyQ291bnRyeQAAAF1QAHIAbwB2AGkAZABlAHIAPQBNAGkA
YwByAG8AcwBvAGYAdAAuAEEAQwBFAC4ATwBMAEUARABCAC4AMQAyAC4AMAA7AEQAYQB0AGEAIABT
AG8AdQByAGMAZQA9AABjOwBFAHgAdABlAG4AZABlAGQAIABQAHIAbwBwAGUAcgB0AGkAZQBzAD0A
IgBFAHgAYwBlAGwAIAAxADIALgAwADsASABEAFIAPQBZAEUAUwA7AEkATQBFAFgAPQAxACIAOwAA
E0MAdQBzAHQAbwBtAEwAbwBnAABPVQBwAGQAYQB0AGUAZAAgAEkARAAgACwAIAByAG8AdwBzACAA
YQBmAGYAZQBjAHQAZQBkADoAIABjAG8AbgBuAC4ATwBwAGUAbgAoACkAAAEAMVMARQBMAEUAQwBU
ACAAKgAgAEYAUgBPAE0AIABbAEQAYQB0AGEAcwBlAHQAJABdAABZVQBwAGQAYQB0AGUAZAAgAEkA
RAAgACwAIAByAG8AdwBzACAAYQBmAGYAZQBjAHQAZQBkADoAIABPAGwAZQBEAGIARABhAHQAYQBB
AGQAYQBwAHQAZQByAABPVQBwAGQAYQB0AGUAZAAgAEkARAAgACwAIAByAG8AdwBzACAAYQBmAGYA
ZQBjAHQAZQBkADoAIABkAGEALgBGAGkAbABsACgAZAB0ACkAAB9SAG8AdwBzACAAQwBvAHUAbgB0
ADoAIAB7ADAAfQAACUYAYQBpAGwAABdFAHgAYwBlAHAAdABpAG8AbgA6ACAAAA9TAHUAYwBjAGUA
cwBzAACAm0kAcwBOAHUAbABsACAAcAByAG8AcABlAHIAdAB5ACAAYwBhAG4AbgBvAHQAIABiAGUA
IABzAGUAdAAgAHQAbwAgAEYAYQBsAHMAZQAuACAAQQBzAHMAaQBnAG4AIABhACAAdgBhAGwAdQBl
ACAAdABvACAAdABoAGUAIABjAG8AbAB1AG0AbgAgAGkAbgBzAHQAZQBhAGQALgAAEU8AdQB0AHAA
dQB0ACAAMAAAGWYAaQBsAGUAbgBhAG0AZQAxADQAMAAxAABxUwBDAF8AZAAwAGEAMQA0ADMANAA1
ADIAOAAyAGMANAA2AGIANgBhAGIAMwA3ADcAZQBlAGQAZAA1AGEAZgA5AGYAMgA2AC4AUAByAG8A
cABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAAAHmK4SmuRT5Pg3RC6rEdYIEABCAB
AQgDIAABBSABARERBCABAQ4FIAEBEXEQBwgCEjkSPQgSQRJFEkkSTQYAAw4ODg4FIAASgIkKIAYB
CA4ODggQAgYgAgEOEjkFIAEIEj0FIAASgJUDIAAIBQACDg4cBCAAEkEDIAAcBCABHAgDIAAOBAYS
gKEEAAEIHAQAAQocAyAAAgUAAg4ODgkgAwESVR0IElkFIAIBCBwDBwEIBgACCBJZDgUgAR0ICAUg
ABKAsQYgARKAtRwFAAASgLkGIAEcEoC9CAABEoDBEYDFBSAAEoDJByACAQ4SgMkIt3pcVhk04IkI
iYRdzYCAzJECBg4CBgIDBhIUAwYSGAMGEgwDBhJdAwYSaQMGEm0DBhIgBCABAQoEIAEBAgsgBAEI
HQgdElUSWQUgAQESXQQAABJpBAAAEm0FAAEBEm0EAAASIAMAAAEDKAAKAygAAgMoAAgDKAAOBAgA
EmkECAASbQQIABIgCAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIA
AAAAACgBACNTQ19kMGExNDM0NTI4MmM0NmI2YWIzNzdlZWRkNWFmOWYyNgAABQEAAAAAFgEAEUNv
cHlyaWdodCBAICAyMDI1AABJAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjcBAFQOFEZyYW1l
d29ya0Rpc3BsYXlOYW1lEi5ORVQgRnJhbWV3b3JrIDQuNwQBAAAAtAAAAM7K774BAAAAkQAAAGxT
eXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4w
LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVt
LlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAABKAAAA
AAAAAAAAABpKAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMSgAAAAAAAAAAAAAAAF9Db3JEbGxN
YWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAAGAAA
gAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhgAADsAwAA
AAAAAAAAAADsAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAAAQAA
AAEAAAAAAAAAAQAAAAAAPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQByAEYA
aQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAETAMA
AAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAKAMAAAEAMAAwADAAMAAwADQAYgAwAAAA
GgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkATgBhAG0AZQAA
AAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAEMAXwBkADAA
YQAxADQAMwA0ADUAMgA4ADIAYwA0ADYAYgA2AGEAYgAzADcANwBlAGUAZABkADUAYQBmADkAZgAy
ADYAAAAwAAgAAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4AMAAuADAAAABwACgA
AQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAQwBfAGQAMABhADEANAAzADQANQAyADgAMgBj
ADQANgBiADYAYQBiADMANwA3AGUAZQBkAGQANQBhAGYAOQBmADIANgAuAGQAbABsAAAASAASAAEA
TABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAy
ADAAMgA1AAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgA
AQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBDAF8AZAAwAGEAMQA0ADMANAA1
ADIAOAAyAGMANAA2AGIANgBhAGIAMwA3ADcAZQBlAGQAZAA1AGEAZgA5AGYAMgA2AC4AZABsAGwA
AABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAQwBfAGQAMABhADEANAAzADQANQAy
ADgAMgBjADQANgBiADYAYQBiADMANwA3AGUAZQBkAGQANQBhAGYAOQBmADIANgAAADQACAABAFAA
cgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAA4AAgAAQBBAHMAcwBl
AG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAMAAAALDoAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_d0a14345282c46b6ab377eedd5af9f26</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::filename1401</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">13</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <outputs>
                <output
                  refId="Package\1401\Script Component.Outputs[Output 0]"
                  hasSideEffects="true"
                  name="Output 0">
                  <outputColumns>
                    <outputColumn
                      refId="Package\1401\Script Component.Outputs[Output 0].Columns[price]"
                      dataType="i8"
                      lineageId="Package\1401\Script Component.Outputs[Output 0].Columns[price]"
                      name="price" />
                    <outputColumn
                      refId="Package\1401\Script Component.Outputs[Output 0].Columns[cost]"
                      dataType="i8"
                      lineageId="Package\1401\Script Component.Outputs[Output 0].Columns[cost]"
                      name="cost" />
                    <outputColumn
                      refId="Package\1401\Script Component.Outputs[Output 0].Columns[month]"
                      dataType="i4"
                      lineageId="Package\1401\Script Component.Outputs[Output 0].Columns[month]"
                      name="month" />
                    <outputColumn
                      refId="Package\1401\Script Component.Outputs[Output 0].Columns[year]"
                      dataType="i4"
                      lineageId="Package\1401\Script Component.Outputs[Output 0].Columns[year]"
                      name="year" />
                    <outputColumn
                      refId="Package\1401\Script Component.Outputs[Output 0].Columns[Produce/Import]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\1401\Script Component.Outputs[Output 0].Columns[Produce/Import]"
                      name="Produce/Import" />
                    <outputColumn
                      refId="Package\1401\Script Component.Outputs[Output 0].Columns[Registered]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\1401\Script Component.Outputs[Output 0].Columns[Registered]"
                      name="Registered" />
                    <outputColumn
                      refId="Package\1401\Script Component.Outputs[Output 0].Columns[ProducerCountry]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\1401\Script Component.Outputs[Output 0].Columns[ProducerCountry]"
                      name="ProducerCountry" />
                    <outputColumn
                      refId="Package\1401\Script Component.Outputs[Output 0].Columns[ATCCode]"
                      dataType="wstr"
                      length="20"
                      lineageId="Package\1401\Script Component.Outputs[Output 0].Columns[ATCCode]"
                      name="ATCCode" />
                    <outputColumn
                      refId="Package\1401\Script Component.Outputs[Output 0].Columns[License]"
                      dataType="i4"
                      lineageId="Package\1401\Script Component.Outputs[Output 0].Columns[License]"
                      name="License" />
                    <outputColumn
                      refId="Package\1401\Script Component.Outputs[Output 0].Columns[biological]"
                      dataType="i4"
                      lineageId="Package\1401\Script Component.Outputs[Output 0].Columns[biological]"
                      name="biological" />
                    <outputColumn
                      refId="Package\1401\Script Component.Outputs[Output 0].Columns[OTC]"
                      dataType="i4"
                      lineageId="Package\1401\Script Component.Outputs[Output 0].Columns[OTC]"
                      name="OTC" />
                    <outputColumn
                      refId="Package\1401\Script Component.Outputs[Output 0].Columns[ConsumerPrice]"
                      dataType="i8"
                      lineageId="Package\1401\Script Component.Outputs[Output 0].Columns[ConsumerPrice]"
                      name="ConsumerPrice" />
                    <outputColumn
                      refId="Package\1401\Script Component.Outputs[Output 0].Columns[QuantitySales]"
                      dataType="i4"
                      lineageId="Package\1401\Script Component.Outputs[Output 0].Columns[QuantitySales]"
                      name="QuantitySales" />
                    <outputColumn
                      refId="Package\1401\Script Component.Outputs[Output 0].Columns[QuantityInPKG]"
                      dataType="i4"
                      lineageId="Package\1401\Script Component.Outputs[Output 0].Columns[QuantityInPKG]"
                      name="QuantityInPKG" />
                    <outputColumn
                      refId="Package\1401\Script Component.Outputs[Output 0].Columns[QuantityPkG]"
                      dataType="i4"
                      lineageId="Package\1401\Script Component.Outputs[Output 0].Columns[QuantityPkG]"
                      name="QuantityPkG" />
                    <outputColumn
                      refId="Package\1401\Script Component.Outputs[Output 0].Columns[GenericName]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\1401\Script Component.Outputs[Output 0].Columns[GenericName]"
                      name="GenericName" />
                    <outputColumn
                      refId="Package\1401\Script Component.Outputs[Output 0].Columns[GenericCode]"
                      dataType="i4"
                      lineageId="Package\1401\Script Component.Outputs[Output 0].Columns[GenericCode]"
                      name="GenericCode" />
                    <outputColumn
                      refId="Package\1401\Script Component.Outputs[Output 0].Columns[EffectiveMaterial]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\1401\Script Component.Outputs[Output 0].Columns[EffectiveMaterial]"
                      name="EffectiveMaterial" />
                    <outputColumn
                      refId="Package\1401\Script Component.Outputs[Output 0].Columns[BrandName]"
                      dataType="wstr"
                      length="250"
                      lineageId="Package\1401\Script Component.Outputs[Output 0].Columns[BrandName]"
                      name="BrandName" />
                    <outputColumn
                      refId="Package\1401\Script Component.Outputs[Output 0].Columns[EnglishNameBrand]"
                      dataType="wstr"
                      length="250"
                      lineageId="Package\1401\Script Component.Outputs[Output 0].Columns[EnglishNameBrand]"
                      name="EnglishNameBrand" />
                    <outputColumn
                      refId="Package\1401\Script Component.Outputs[Output 0].Columns[IRC]"
                      dataType="wstr"
                      length="250"
                      lineageId="Package\1401\Script Component.Outputs[Output 0].Columns[IRC]"
                      name="IRC" />
                    <outputColumn
                      refId="Package\1401\Script Component.Outputs[Output 0].Columns[Producer]"
                      dataType="wstr"
                      length="250"
                      lineageId="Package\1401\Script Component.Outputs[Output 0].Columns[Producer]"
                      name="Producer" />
                    <outputColumn
                      refId="Package\1401\Script Component.Outputs[Output 0].Columns[Supplier]"
                      dataType="wstr"
                      length="250"
                      lineageId="Package\1401\Script Component.Outputs[Output 0].Columns[Supplier]"
                      name="Supplier" />
                    <outputColumn
                      refId="Package\1401\Script Component.Outputs[Output 0].Columns[OwenerBrand]"
                      dataType="wstr"
                      length="250"
                      lineageId="Package\1401\Script Component.Outputs[Output 0].Columns[OwenerBrand]"
                      name="OwenerBrand" />
                    <outputColumn
                      refId="Package\1401\Script Component.Outputs[Output 0].Columns[Distributer]"
                      dataType="wstr"
                      length="250"
                      lineageId="Package\1401\Script Component.Outputs[Output 0].Columns[Distributer]"
                      name="Distributer" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\1401.Paths[Output 0]"
              endId="Package\1401\OLE DB Destination.Inputs[OLE DB Destination Input]"
              name="Output 0"
              startId="Package\1401\Script Component.Outputs[Output 0]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\1402"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{2eeb788e-314d-4908-a1a8-66c02a2b5819}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="1402"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\1402\OLE DB Destination"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="OLE DB Destination"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[amarDistribute]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\1402\OLE DB Destination.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[192.168.10.10.DW]"
                  connectionManagerRefId="Package.ConnectionManagers[192.168.10.10.DW]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\1402\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\1402\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[price]"
                      cachedDataType="i8"
                      cachedName="price"
                      externalMetadataColumnId="Package\1402\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[price]"
                      lineageId="Package\1402\Script Component.Outputs[Output 0].Columns[price]" />
                    <inputColumn
                      refId="Package\1402\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[cost]"
                      cachedDataType="i8"
                      cachedName="cost"
                      externalMetadataColumnId="Package\1402\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[cost]"
                      lineageId="Package\1402\Script Component.Outputs[Output 0].Columns[cost]" />
                    <inputColumn
                      refId="Package\1402\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[month]"
                      cachedDataType="i4"
                      cachedName="month"
                      externalMetadataColumnId="Package\1402\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[month]"
                      lineageId="Package\1402\Script Component.Outputs[Output 0].Columns[month]" />
                    <inputColumn
                      refId="Package\1402\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[year]"
                      cachedDataType="i4"
                      cachedName="year"
                      externalMetadataColumnId="Package\1402\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[year]"
                      lineageId="Package\1402\Script Component.Outputs[Output 0].Columns[year]" />
                    <inputColumn
                      refId="Package\1402\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Produce/Import]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Produce/Import"
                      externalMetadataColumnId="Package\1402\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Produce/Import]"
                      lineageId="Package\1402\Script Component.Outputs[Output 0].Columns[Produce/Import]" />
                    <inputColumn
                      refId="Package\1402\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Registered]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Registered"
                      externalMetadataColumnId="Package\1402\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Registered]"
                      lineageId="Package\1402\Script Component.Outputs[Output 0].Columns[Registered]" />
                    <inputColumn
                      refId="Package\1402\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[ProducerCountry]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="ProducerCountry"
                      externalMetadataColumnId="Package\1402\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ProducerCountry]"
                      lineageId="Package\1402\Script Component.Outputs[Output 0].Columns[ProducerCountry]" />
                    <inputColumn
                      refId="Package\1402\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[ATCCode]"
                      cachedDataType="wstr"
                      cachedLength="20"
                      cachedName="ATCCode"
                      externalMetadataColumnId="Package\1402\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ATCCode]"
                      lineageId="Package\1402\Script Component.Outputs[Output 0].Columns[ATCCode]" />
                    <inputColumn
                      refId="Package\1402\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[License]"
                      cachedDataType="i4"
                      cachedName="License"
                      externalMetadataColumnId="Package\1402\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[License]"
                      lineageId="Package\1402\Script Component.Outputs[Output 0].Columns[License]" />
                    <inputColumn
                      refId="Package\1402\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[biological]"
                      cachedDataType="i4"
                      cachedName="biological"
                      externalMetadataColumnId="Package\1402\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[biological]"
                      lineageId="Package\1402\Script Component.Outputs[Output 0].Columns[biological]" />
                    <inputColumn
                      refId="Package\1402\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[OTC]"
                      cachedDataType="i4"
                      cachedName="OTC"
                      externalMetadataColumnId="Package\1402\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[OTC]"
                      lineageId="Package\1402\Script Component.Outputs[Output 0].Columns[OTC]" />
                    <inputColumn
                      refId="Package\1402\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[ConsumerPrice]"
                      cachedDataType="i8"
                      cachedName="ConsumerPrice"
                      externalMetadataColumnId="Package\1402\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ConsumerPrice]"
                      lineageId="Package\1402\Script Component.Outputs[Output 0].Columns[ConsumerPrice]" />
                    <inputColumn
                      refId="Package\1402\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[QuantitySales]"
                      cachedDataType="i4"
                      cachedName="QuantitySales"
                      externalMetadataColumnId="Package\1402\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[QuantitySales]"
                      lineageId="Package\1402\Script Component.Outputs[Output 0].Columns[QuantitySales]" />
                    <inputColumn
                      refId="Package\1402\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[QuantityInPKG]"
                      cachedDataType="i4"
                      cachedName="QuantityInPKG"
                      externalMetadataColumnId="Package\1402\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[QuantityInPKG]"
                      lineageId="Package\1402\Script Component.Outputs[Output 0].Columns[QuantityInPKG]" />
                    <inputColumn
                      refId="Package\1402\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[QuantityPkG]"
                      cachedDataType="i4"
                      cachedName="QuantityPkG"
                      externalMetadataColumnId="Package\1402\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[QuantityPkG]"
                      lineageId="Package\1402\Script Component.Outputs[Output 0].Columns[QuantityPkG]" />
                    <inputColumn
                      refId="Package\1402\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[GenericName]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="GenericName"
                      externalMetadataColumnId="Package\1402\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[GenericName]"
                      lineageId="Package\1402\Script Component.Outputs[Output 0].Columns[GenericName]" />
                    <inputColumn
                      refId="Package\1402\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[GenericCode]"
                      cachedDataType="i4"
                      cachedName="GenericCode"
                      externalMetadataColumnId="Package\1402\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[GenericCode]"
                      lineageId="Package\1402\Script Component.Outputs[Output 0].Columns[GenericCode]" />
                    <inputColumn
                      refId="Package\1402\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[EffectiveMaterial]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="EffectiveMaterial"
                      externalMetadataColumnId="Package\1402\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[EffectiveMaterial]"
                      lineageId="Package\1402\Script Component.Outputs[Output 0].Columns[EffectiveMaterial]" />
                    <inputColumn
                      refId="Package\1402\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[BrandName]"
                      cachedDataType="wstr"
                      cachedLength="250"
                      cachedName="BrandName"
                      externalMetadataColumnId="Package\1402\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[BrandName]"
                      lineageId="Package\1402\Script Component.Outputs[Output 0].Columns[BrandName]" />
                    <inputColumn
                      refId="Package\1402\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[EnglishNameBrand]"
                      cachedDataType="wstr"
                      cachedLength="250"
                      cachedName="EnglishNameBrand"
                      externalMetadataColumnId="Package\1402\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[EnglishNameBrand]"
                      lineageId="Package\1402\Script Component.Outputs[Output 0].Columns[EnglishNameBrand]" />
                    <inputColumn
                      refId="Package\1402\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[IRC]"
                      cachedDataType="wstr"
                      cachedLength="250"
                      cachedName="IRC"
                      externalMetadataColumnId="Package\1402\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[IRC]"
                      lineageId="Package\1402\Script Component.Outputs[Output 0].Columns[IRC]" />
                    <inputColumn
                      refId="Package\1402\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Producer]"
                      cachedDataType="wstr"
                      cachedLength="250"
                      cachedName="Producer"
                      externalMetadataColumnId="Package\1402\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Producer]"
                      lineageId="Package\1402\Script Component.Outputs[Output 0].Columns[Producer]" />
                    <inputColumn
                      refId="Package\1402\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Supplier]"
                      cachedDataType="wstr"
                      cachedLength="250"
                      cachedName="Supplier"
                      externalMetadataColumnId="Package\1402\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Supplier]"
                      lineageId="Package\1402\Script Component.Outputs[Output 0].Columns[Supplier]" />
                    <inputColumn
                      refId="Package\1402\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[OwenerBrand]"
                      cachedDataType="wstr"
                      cachedLength="250"
                      cachedName="OwenerBrand"
                      externalMetadataColumnId="Package\1402\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[OwenerBrand]"
                      lineageId="Package\1402\Script Component.Outputs[Output 0].Columns[OwenerBrand]" />
                    <inputColumn
                      refId="Package\1402\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Distributer]"
                      cachedDataType="wstr"
                      cachedLength="250"
                      cachedName="Distributer"
                      externalMetadataColumnId="Package\1402\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Distributer]"
                      lineageId="Package\1402\Script Component.Outputs[Output 0].Columns[Distributer]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\1402\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Distributer]"
                      dataType="wstr"
                      length="250"
                      name="Distributer" />
                    <externalMetadataColumn
                      refId="Package\1402\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[OwenerBrand]"
                      dataType="wstr"
                      length="250"
                      name="OwenerBrand" />
                    <externalMetadataColumn
                      refId="Package\1402\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Supplier]"
                      dataType="wstr"
                      length="250"
                      name="Supplier" />
                    <externalMetadataColumn
                      refId="Package\1402\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Producer]"
                      dataType="wstr"
                      length="250"
                      name="Producer" />
                    <externalMetadataColumn
                      refId="Package\1402\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[IRC]"
                      dataType="wstr"
                      length="250"
                      name="IRC" />
                    <externalMetadataColumn
                      refId="Package\1402\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[EnglishNameBrand]"
                      dataType="wstr"
                      length="250"
                      name="EnglishNameBrand" />
                    <externalMetadataColumn
                      refId="Package\1402\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[BrandName]"
                      dataType="wstr"
                      length="250"
                      name="BrandName" />
                    <externalMetadataColumn
                      refId="Package\1402\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[EffectiveMaterial]"
                      dataType="wstr"
                      length="250"
                      name="EffectiveMaterial" />
                    <externalMetadataColumn
                      refId="Package\1402\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[GenericCode]"
                      dataType="wstr"
                      length="15"
                      name="GenericCode" />
                    <externalMetadataColumn
                      refId="Package\1402\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[GenericName]"
                      dataType="wstr"
                      length="250"
                      name="GenericName" />
                    <externalMetadataColumn
                      refId="Package\1402\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[QuantityPkG]"
                      dataType="i8"
                      name="QuantityPkG" />
                    <externalMetadataColumn
                      refId="Package\1402\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[QuantityInPKG]"
                      dataType="i4"
                      name="QuantityInPKG" />
                    <externalMetadataColumn
                      refId="Package\1402\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[QuantitySales]"
                      dataType="i8"
                      name="QuantitySales" />
                    <externalMetadataColumn
                      refId="Package\1402\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ConsumerPrice]"
                      dataType="i8"
                      name="ConsumerPrice" />
                    <externalMetadataColumn
                      refId="Package\1402\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[OTC]"
                      dataType="wstr"
                      length="20"
                      name="OTC" />
                    <externalMetadataColumn
                      refId="Package\1402\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[biological]"
                      dataType="wstr"
                      length="20"
                      name="biological" />
                    <externalMetadataColumn
                      refId="Package\1402\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[License]"
                      dataType="bool"
                      name="License" />
                    <externalMetadataColumn
                      refId="Package\1402\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ATCCode]"
                      dataType="wstr"
                      length="20"
                      name="ATCCode" />
                    <externalMetadataColumn
                      refId="Package\1402\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ProducerCountry]"
                      dataType="wstr"
                      length="100"
                      name="ProducerCountry" />
                    <externalMetadataColumn
                      refId="Package\1402\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Registered]"
                      dataType="wstr"
                      length="10"
                      name="Registered" />
                    <externalMetadataColumn
                      refId="Package\1402\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Produce/Import]"
                      dataType="wstr"
                      length="10"
                      name="Produce/Import" />
                    <externalMetadataColumn
                      refId="Package\1402\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[year]"
                      dataType="i4"
                      name="year" />
                    <externalMetadataColumn
                      refId="Package\1402\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[month]"
                      dataType="i4"
                      name="month" />
                    <externalMetadataColumn
                      refId="Package\1402\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[cost]"
                      dataType="i8"
                      name="cost" />
                    <externalMetadataColumn
                      refId="Package\1402\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[price]"
                      dataType="i8"
                      name="price" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\1402\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\1402\OLE DB Destination.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\1402\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\1402\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\1402\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\1402\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\1402\Script Component"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;13"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Script Component"
              version="13">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_d0a14345282c46b6ab377eedd5af9f26")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_d0a14345282c46b6ab377eedd5af9f26")]
[assembly: AssemblyCopyright("Copyright @  2025")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help: Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component.
 */
#endregion

#region Namespaces
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using System;
using System.Data;
using System.Data.OleDb;
using System.Windows.Forms;
#endregion

/// <summary>
/// This is the class to which to add your code. Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    string processResult = "Success";
    bool fireAgain = false;
    #region Help: Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable. To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     *
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     * DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     * Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help: Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component. See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor. To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     *
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     * object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     * SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     * object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     * string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     * Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help: Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     * ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     * ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     * ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        //Variab/*l*/es.Result1 = processResult; // فقط اینجا میشه نوشت
    }



    public override void CreateNewOutputRows()
    {


        string connStr = "Provider=Microsoft.ACE.OLEDB.12.0;" +
                 $"Data Source={Variables.filename1402};" +
                 "Extended Properties=\"Excel 12.0;HDR=YES;IMEX=1\";";

        bool fireAgain = false;

        using (OleDbConnection conn = new OleDbConnection(connStr))
        {
            //ComponentMetaData.FireInformation(0, "CustomLog", $"Updated ID , rows affected: {Variables.filname1}", "", 0, ref fireAgain);
            try
            {
                conn.Open();
                ComponentMetaData.FireInformation(0, "CustomLog", $"Updated ID , rows affected: conn.Open()", "", 0, ref fireAgain);

                OleDbDataAdapter da = new OleDbDataAdapter("SELECT * FROM [Dataset$]", conn);
                ComponentMetaData.FireInformation(0, "CustomLog", $"Updated ID , rows affected: OleDbDataAdapter", "", 0, ref fireAgain);

                DataTable dt = new DataTable();
                da.Fill(dt);
                ComponentMetaData.FireInformation(0, "CustomLog", $"Updated ID , rows affected: da.Fill(dt)", "", 0, ref fireAgain);
                int rowCount = dt.Rows.Count;
                ComponentMetaData.FireInformation(0, "CustomLog", $"Rows Count: {rowCount}", "", 0, ref fireAgain);





                foreach (DataRow row in dt.Rows)
                {
                    Output0Buffer.AddRow();
                    Output0Buffer.Distributer = row[0]?.ToString();
                    
                    Output0Buffer.OwenerBrand = row[1]?.ToString();
                    Output0Buffer.Supplier = row[2]?.ToString();
                    Output0Buffer.Producer = row[3].ToString();
                    Output0Buffer.IRC = row[4].ToString();
                    Output0Buffer.EnglishNameBrand = row[5].ToString();
                    Output0Buffer.BrandName = row[6].ToString();
                    Output0Buffer.EffectiveMaterial = row[7].ToString();
                    Output0Buffer.GenericCode = row[8] == DBNull.Value ? 0 : Convert.ToInt32(row[8]);
                    Output0Buffer.GenericName = row[9].ToString();
                    Output0Buffer.month = 1;
                    Output0Buffer.QuantityPkG = row[10] == DBNull.Value ? 0 : Convert.ToInt32(row[10]);
                    Output0Buffer.QuantityInPKG = row[11] == DBNull.Value ? 0 : Convert.ToInt32(row[11]);
                    Output0Buffer.QuantitySales = row[12] == DBNull.Value ? 0 : Convert.ToInt32(row[12]);
                    Output0Buffer.cost = 0;
                    Output0Buffer.price = 0;
                    Output0Buffer.ConsumerPrice = row[13] == DBNull.Value ? 0 : Convert.ToInt64(row[13]);
                    Output0Buffer.OTC = row[14] == DBNull.Value ? 0 : Convert.ToInt32(row[14]);
                    Output0Buffer.biological = row[15] == DBNull.Value ? 0 : Convert.ToInt32(row[15]);
                    Output0Buffer.ATCCode = row[17].ToString();
                    Output0Buffer.ProducerCountry = row[18].ToString();
                    Output0Buffer.Registered = row[19].ToString();
                    Output0Buffer.ProduceImport = row[20].ToString();
                    Output0Buffer.year = 1402;
                }
            }
            catch (Exception ex)
            {
                processResult = "Fail"; // فقط مقدار local تغییر می‌کنه
                ComponentMetaData.FireInformation(0, "CustomLog", $"Exception: {ex.Message}", "", 0, ref fireAgain);
            }



      
        }
    }

    /* Add rows by calling the AddRow method on the member variable named "<Output Name>Buffer". 
       For example, call MyOutputBuffer.AddRow() if your output was named "MyOutput". */
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Output0Buffer: ScriptBuffer

{
    public Output0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Int64 price
    {
        set
        {
            this[0] = value;
        }
    }
    public bool price_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int64 cost
    {
        set
        {
            this[1] = value;
        }
    }
    public bool cost_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 month
    {
        set
        {
            this[2] = value;
        }
    }
    public bool month_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 year
    {
        set
        {
            this[3] = value;
        }
    }
    public bool year_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ProduceImport
    {
        set
        {
            this[4] = value;
        }
    }
    public bool ProduceImport_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Registered
    {
        set
        {
            this[5] = value;
        }
    }
    public bool Registered_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ProducerCountry
    {
        set
        {
            this[6] = value;
        }
    }
    public bool ProducerCountry_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ATCCode
    {
        set
        {
            this[7] = value;
        }
    }
    public bool ATCCode_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 License
    {
        set
        {
            this[8] = value;
        }
    }
    public bool License_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(8);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 biological
    {
        set
        {
            this[9] = value;
        }
    }
    public bool biological_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(9);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 OTC
    {
        set
        {
            this[10] = value;
        }
    }
    public bool OTC_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(10);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int64 ConsumerPrice
    {
        set
        {
            this[11] = value;
        }
    }
    public bool ConsumerPrice_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(11);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 QuantitySales
    {
        set
        {
            this[12] = value;
        }
    }
    public bool QuantitySales_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(12);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 QuantityInPKG
    {
        set
        {
            this[13] = value;
        }
    }
    public bool QuantityInPKG_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(13);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 QuantityPkG
    {
        set
        {
            this[14] = value;
        }
    }
    public bool QuantityPkG_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(14);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String GenericName
    {
        set
        {
            this[15] = value;
        }
    }
    public bool GenericName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(15);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 GenericCode
    {
        set
        {
            this[16] = value;
        }
    }
    public bool GenericCode_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(16);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String EffectiveMaterial
    {
        set
        {
            this[17] = value;
        }
    }
    public bool EffectiveMaterial_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(17);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String BrandName
    {
        set
        {
            this[18] = value;
        }
    }
    public bool BrandName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(18);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String EnglishNameBrand
    {
        set
        {
            this[19] = value;
        }
    }
    public bool EnglishNameBrand_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(19);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String IRC
    {
        set
        {
            this[20] = value;
        }
    }
    public bool IRC_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(20);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Producer
    {
        set
        {
            this[21] = value;
        }
    }
    public bool Producer_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(21);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Supplier
    {
        set
        {
            this[22] = value;
        }
    }
    public bool Supplier_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(22);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String OwenerBrand
    {
        set
        {
            this[23] = value;
        }
    }
    public bool OwenerBrand_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(23);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Distributer
    {
        set
        {
            this[24] = value;
        }
    }
    public bool Distributer_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(24);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_d0a14345282c46b6ab377eedd5af9f26.Properties.Settings.get_Default():SC_d0a14345282c46b6ab377eedd5af9f26.Properties.Sett" +
    "ings")]

namespace SC_d0a14345282c46b6ab377eedd5af9f26.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output0Buffer Output0Buffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output0Buffer)
        {
            Output0Buffer.SetEndOfRowset();
            Output0Buffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 0"))
            {
                Output0Buffer = new Output0Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String filename1402
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["filename1402"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_d0a14345282c46b6ab377eedd5af9f26</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_d0a14345282c46b6ab377eedd5af9f26</msb:DisplayName>
    <msb:ProjectId>{553BCD9A-A4B9-4B26-A4C3-74E29BFCD140}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_d0a14345282c46b6ab377eedd5af9f26.csproj" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_d0a14345282c46b6ab377eedd5af9f26.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{15527E59-F829-4CEC-A450-B6E96C25074F}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_d0a14345282c46b6ab377eedd5af9f26</RootNamespace>
    <AssemblyName>SC_d0a14345282c46b6ab377eedd5af9f26</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_d0a14345282c46b6ab377eedd5af9f26.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_d0a14345282c46b6ab377eedd5af9f26.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_d0a14345282c46b6ab377eedd5af9f26.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_d0a14345282c46b6ab377eedd5af9f26.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_d0a14345282c46b6ab377eedd5af9f26.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_d0a14345282c46b6ab377eedd5af9f26.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[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
BgA2AOQoAAAAAMYA0gscATYAwygAAAAAxgHbCgYAOgA5KQAAAACGGGsJKAE6AEgpAAAAAIYYawko
ATsAVykAAAAAhghTAG8APAB9KQAAAACDGGsJBgA8AIUpAAAAAJMIvgguATwAsSkAAAAAkwg2AjMB
PAC4KQAAAACTCEICOAE8AMApAAAAAJYIEws+AT0AxykAAAAAhhhrCQYAPQDPKQAAAACRGHEJQwE9
AAAAAQC3CAAAAgBvCgAAAwAtCAAAAQB1BAAAAQB1BAAAAQB1BAAAAQB1BAAAAQB1BAAAAQB1BAAA
AQB1BAAAAQB1BAAAAQB1BAAAAQB1BAAAAQB1BAAAAQB1BAAAAQB1BAAAAQB1BAAAAQB1BAAAAQB1
BAAAAQB1BAAAAQB1BAAAAQB1BAAAAQB1BAAAAQB1BAAAAQB1BAAAAQB1BAAAAQB1BAAAAQB1BAAA
AQB1BAAAAQB1BAAAAQB1BAAAAQB1BAAAAQB1BAAAAQB1BAAAAQB1BAAAAQB1BAAAAQB1BAAAAQB1
BAAAAQB1BAAAAQB1BAAAAQB1BAAAAQB1BAAAAQB1BAAAAQB1BAAAAQB1BAAAAQB1BAAAAQB1BAAA
AQB1BAAAAQB1BAAAAQB1BAAAAQB1BAAAAQB1BAAAAQB1BAAAAQDKCgAAAgB4CQAAAwC8CgAABAAt
CAAAAQBRCwAAAQBRCwAAAQB1BAkAawkBABEAawkGABkAawkKACkAawkQADEAawkQADkAawkQAEEA
awkQAEkAawkQAFEAawkQAFkAawkQAGEAawkQAGkAawkGAMkAawkGAOkAawkVAPkAawkGALkAWAQG
ALkAYwQGAAEB7wosAHEAawkQAAkBXgcGALkA6wAzABEBeAc5ABkBawlEAHkAawkGACEBCwVLAHkA
0gpRADEBZwtXAAEB9gpbADEBXQlhAIEAWwtmAIkAOQdqAMEAlQRvAEEBbwRzAEkBZAB4AEkBbAB9
AIEA3guCAJEAnQIGAJkArAFvAAEB7wqGAKEAawmMAKEAQgeWAKEAMQcBAFkBawkQAKEAMwwGAKEA
BAsGAKEABwuCALkAawkGALkAsQCgALkAgwqnAMEAawkGALkAWQqtAGEBOQezALkAFgy6AGkB5wvA
AIEB4AHHAIEBOgzQANEAawnWAPEAawkGAC4ACwBmAS4AEwBvAS4AGwCOAS4AIwCXAS4AKwDAAS4A
MwDAAS4AOwDAAS4AQwCXAS4ASwDGAS4AUwDAAS4AWwDdAUMAYwAnAuMAawAnAkEBewAnAokGcwCO
AakGcwCOARsAnAADAAEABgAzAAcANAAIADYAAAB6AUcBAADLBUsBAADNC0cBAAAKB0sBAACiBE8B
AABFBksBAACCCE8BAACJBksBAACaC1MBAADxBksBAAA0AVMBAABpBUsBAABLDFMBAAAaB0sBAACU
AVMBAADcBUsBAACVAk8BAAAyBksBAACsBE8BAABWBksBAACtAE8BAAAqBUsBAABoAUcBAACyBUsB
AABLCk8BAADYBksBAADBAE8BAAA5BUsBAADTAE8BAABSBUsBAAD2AVMBAAAGBksBAACgAU8BAADv
BUsBAAC7BFMBAABsBksBAAAGAlMBAAAdBksBAABDAVMBAAB/BUsBAAClAFMBAAAbBUsBAACLCFMB
AACZBksBAADWCFMBAACtBksBAABYAVMBAACbBUsBAABFCVMBAADBBksBAABXAFMBAADCCFcBAABW
AlwBAAAXC2EBAQAGAAMAAQAHAAUAAQAIAAcAAQAJAAkAAQAKAAsAAQALAA0AAQAMAA8AAQANABEA
AQAOABMAAQAPABUAAQAQABcAAQARABkAAQASABsAAQATAB0AAQAUAB8AAQAVACEAAQAWACMAAQAX
ACUAAQAYACcAAQAZACkAAQAaACsAAQAbAC0AAQAcAC8AAQAdADEAAQAeADMAAQAfADUAAQAgADcA
AQAhADkAAQAiADsAAQAjAD0AAQAkAD8AAQAlAEEAAQAmAEMAAQAnAEUAAQAoAEcAAQApAEkAAQAq
AEsAAQArAE0AAQAsAE8AAQAtAFEAAQAuAFMAAQAvAFUAAQAwAFcAAQAxAFkAAQAyAFsAAQAzAF0A
AQA0AF8AAQA1AGEAAQA2AGMAAQA3AGUAAgBCAGcAAgBEAGkAAgBFAGsAAQBGAGsAAgBHAG0ABIAA
AAEAAAAAAAAAAAAAAAAAdAAAAAQAAAAAAAAAAAAAAN4AEwEAAAAAEAAAAAAAAAAAAAAA5wBxCwAA
AAAEAAAAAAAAAAAAAADeAN8AAAAAABAAAAAAAAAAAAAAAOcAqAsAAAAABAAAAAAAAAAAAAAA3gBL
BwAAAAAQAAAAAAAAAAAAAADnAFoIAAAAABAAAAAAAAAAAAAAAOcANwgAAAAAAAAAAAEAAADGCQAA
AAAAAABJRFRTQ29tcG9uZW50TWV0YURhdGExMDAASURUU1ZhcmlhYmxlMTAwAElEVFNWYXJpYWJs
ZXMxMDAASURUU0V2YWx1YXRvckNvbnRleHQxMDAAZ2V0X2ZpbGVuYW1lMTQwMgBUb0ludDMyAFRv
SW50NjQAU0NfZDBhMTQzNDUyODJjNDZiNmFiMzc3ZWVkZDVhZjlmMjYAPE1vZHVsZT4Ac2V0X0lS
QwBzZXRfT1RDAEdldE91dHB1dElEAHNldF9RdWFudGl0eUluUEtHAHNldF9RdWFudGl0eVBrRwBT
eXN0ZW0uRGF0YQBnZXRfQ29tcG9uZW50TWV0YURhdGEAU3lzdGVtLkRhdGEuT2xlRGIAbXNjb3Js
aWIATWFya091dHB1dHNGaW5pc2hlZABzZXRfUmVnaXN0ZXJlZABzZXRfRW5nbGlzaE5hbWVCcmFu
ZABzZXRfT3dlbmVyQnJhbmQAc2V0X0NvbnN1bWVyUHJpY2UAc2V0X3ByaWNlAGRlZmF1bHRJbnN0
YW5jZQBzZXRfQVRDQ29kZQBzZXRfR2VuZXJpY0NvZGUAZ2V0X01lc3NhZ2UARGF0YVRhYmxlAElE
aXNwb3NhYmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAHNldF9HZW5lcmlj
TmFtZQBzZXRfQnJhbmROYW1lAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lAFR5cGUA
Z2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJlAEludGVybmFsRGF0YUNvbGxl
Y3Rpb25CYXNlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAHNldF9MaWNlbnNlAERpc3Bvc2UARWRp
dG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25V
c2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJp
YnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRh
cmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNz
ZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRl
AEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lT
U2NyaXB0Q29tcG9uZW50RW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1
dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAUHJlRXhlY3V0ZQBQb3N0RXhlY3V0ZQBW
YWx1ZQB2YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRvU3RyaW5nAHNldF9tb250aABz
ZXRfYmlvbG9naWNhbABzZXRfRWZmZWN0aXZlTWF0ZXJpYWwAU3lzdGVtLkNvbXBvbmVudE1vZGVs
AFNDX2QwYTE0MzQ1MjgyYzQ2YjZhYjM3N2VlZGQ1YWY5ZjI2LmRsbABGaWxsAERCTnVsbABzZXRf
SVJDX0lzTnVsbABzZXRfT1RDX0lzTnVsbABzZXRfUXVhbnRpdHlJblBLR19Jc051bGwAc2V0X1F1
YW50aXR5UGtHX0lzTnVsbABzZXRfUmVnaXN0ZXJlZF9Jc051bGwAc2V0X0VuZ2xpc2hOYW1lQnJh
bmRfSXNOdWxsAHNldF9Pd2VuZXJCcmFuZF9Jc051bGwAc2V0X0NvbnN1bWVyUHJpY2VfSXNOdWxs
AHNldF9wcmljZV9Jc051bGwAc2V0X0FUQ0NvZGVfSXNOdWxsAHNldF9HZW5lcmljQ29kZV9Jc051
bGwAc2V0X0dlbmVyaWNOYW1lX0lzTnVsbABzZXRfQnJhbmROYW1lX0lzTnVsbABzZXRfTGljZW5z
ZV9Jc051bGwAc2V0X21vbnRoX0lzTnVsbABzZXRfYmlvbG9naWNhbF9Jc051bGwAc2V0X0VmZmVj
dGl2ZU1hdGVyaWFsX0lzTnVsbABzZXRfeWVhcl9Jc051bGwAc2V0X1Byb2R1Y2VyX0lzTnVsbABz
ZXRfU3VwcGxpZXJfSXNOdWxsAHNldF9EaXN0cmlidXRlcl9Jc051bGwAc2V0X1F1YW50aXR5U2Fs
ZXNfSXNOdWxsAHNldF9Qcm9kdWNlSW1wb3J0X0lzTnVsbABzZXRfY29zdF9Jc051bGwAc2V0X1By
b2R1Y2VyQ291bnRyeV9Jc051bGwAU2V0TnVsbABnZXRfSXRlbQBzZXRfSXRlbQBTeXN0ZW0AcmVz
b3VyY2VNYW4AT3BlbgBTY3JpcHRNYWluAGZpcmVBZ2FpbgBGaXJlSW5mb3JtYXRpb24AU3lzdGVt
LkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24ARGF0
YVJvd0NvbGxlY3Rpb24AT2xlRGJDb25uZWN0aW9uAEludmFsaWRPcGVyYXRpb25FeGNlcHRpb24A
U3lzdGVtLkRhdGEuQ29tbW9uAEN1bHR1cmVJbmZvAE91dHB1dE5hbWVNYXAAT3V0cHV0TWFwAE1p
Y3Jvc29mdC5TcWxTZXJ2ZXIuRFRTUnVudGltZVdyYXAATWljcm9zb2Z0LlNxbFNlcnZlci5EVFNQ
aXBlbGluZVdyYXAAc2V0X3llYXIAc2V0X1Byb2R1Y2VyAE91dHB1dDBCdWZmZXIAUGlwZWxpbmVC
dWZmZXIAU2NyaXB0QnVmZmVyAGdldF9SZXNvdXJjZU1hbmFnZXIAc2V0X1N1cHBsaWVyAE1pY3Jv
c29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUuV3JhcHBlcgBNaWNyb3NvZnQuU3FsU2VydmVyLkR0
cy5QaXBlbGluZS5XcmFwcGVyAE9sZURiRGF0YUFkYXB0ZXIAc2V0X0Rpc3RyaWJ1dGVyAElFbnVt
ZXJhdG9yAEdldEVudW1lcmF0b3IALmN0b3IALmNjdG9yAE91dHB1dElEcwBTeXN0ZW0uRGlhZ25v
c3RpY3MAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFND
X2QwYTE0MzQ1MjgyYzQ2YjZhYjM3N2VlZGQ1YWY5ZjI2LlByb3BlcnRpZXMuUmVzb3VyY2VzLnJl
c291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBTQ19kMGExNDM0NTI4MmM0NmI2YWIzNzdlZWRkNWFmOWYy
Ni5Qcm9wZXJ0aWVzAHNldF9RdWFudGl0eVNhbGVzAGdldF9SZWFkT25seVZhcmlhYmxlcwBCdWZm
ZXJDb2x1bW5JbmRleGVzAEdldENvbHVtbkluZGV4ZXMAU2V0dGluZ3MAU3lzdGVtLkNvbGxlY3Rp
b25zAENvbm5lY3Rpb25zAEJ1ZmZlcnMARmluaXNoT3V0cHV0cwBnZXRfUm93cwBDcmVhdGVOZXdP
dXRwdXRSb3dzAENvbmNhdABGb3JtYXQAT2JqZWN0AFNldEVuZE9mUm93c2V0AGdldF9EZWZhdWx0
AHByb2Nlc3NSZXN1bHQAVXNlckNvbXBvbmVudABQYXJlbnRDb21wb25lbnQAU2NyaXB0Q29tcG9u
ZW50AGdldF9DdXJyZW50AGdldF9Db3VudABNaWNyb3NvZnQuU3FsU2VydmVyLlR4U2NyaXB0AENv
bnZlcnQAc2V0X1Byb2R1Y2VJbXBvcnQATWljcm9zb2Z0LlNxbFNlcnZlci5QaXBlbGluZUhvc3QA
c2V0X2Nvc3QAUHJpbWVPdXRwdXQATW92ZU5leHQAR2V0VmFsdWVXaXRoQ29udGV4dABTY3JpcHRD
b21wb25lbnRFdmFsQ29udGV4dABnZXRfRXZhbHVhdG9yQ29udGV4dABEYXRhUm93AEFkZFJvdwBn
ZXRfQXNzZW1ibHkAc2V0X1Byb2R1Y2VyQ291bnRyeQAAAF1QAHIAbwB2AGkAZABlAHIAPQBNAGkA
YwByAG8AcwBvAGYAdAAuAEEAQwBFAC4ATwBMAEUARABCAC4AMQAyAC4AMAA7AEQAYQB0AGEAIABT
AG8AdQByAGMAZQA9AABjOwBFAHgAdABlAG4AZABlAGQAIABQAHIAbwBwAGUAcgB0AGkAZQBzAD0A
IgBFAHgAYwBlAGwAIAAxADIALgAwADsASABEAFIAPQBZAEUAUwA7AEkATQBFAFgAPQAxACIAOwAA
E0MAdQBzAHQAbwBtAEwAbwBnAABPVQBwAGQAYQB0AGUAZAAgAEkARAAgACwAIAByAG8AdwBzACAA
YQBmAGYAZQBjAHQAZQBkADoAIABjAG8AbgBuAC4ATwBwAGUAbgAoACkAAAEAMVMARQBMAEUAQwBU
ACAAKgAgAEYAUgBPAE0AIABbAEQAYQB0AGEAcwBlAHQAJABdAABZVQBwAGQAYQB0AGUAZAAgAEkA
RAAgACwAIAByAG8AdwBzACAAYQBmAGYAZQBjAHQAZQBkADoAIABPAGwAZQBEAGIARABhAHQAYQBB
AGQAYQBwAHQAZQByAABPVQBwAGQAYQB0AGUAZAAgAEkARAAgACwAIAByAG8AdwBzACAAYQBmAGYA
ZQBjAHQAZQBkADoAIABkAGEALgBGAGkAbABsACgAZAB0ACkAAB9SAG8AdwBzACAAQwBvAHUAbgB0
ADoAIAB7ADAAfQAACUYAYQBpAGwAABdFAHgAYwBlAHAAdABpAG8AbgA6ACAAAA9TAHUAYwBjAGUA
cwBzAACAm0kAcwBOAHUAbABsACAAcAByAG8AcABlAHIAdAB5ACAAYwBhAG4AbgBvAHQAIABiAGUA
IABzAGUAdAAgAHQAbwAgAEYAYQBsAHMAZQAuACAAQQBzAHMAaQBnAG4AIABhACAAdgBhAGwAdQBl
ACAAdABvACAAdABoAGUAIABjAG8AbAB1AG0AbgAgAGkAbgBzAHQAZQBhAGQALgAAEU8AdQB0AHAA
dQB0ACAAMAAAGWYAaQBsAGUAbgBhAG0AZQAxADQAMAAyAABxUwBDAF8AZAAwAGEAMQA0ADMANAA1
ADIAOAAyAGMANAA2AGIANgBhAGIAMwA3ADcAZQBlAGQAZAA1AGEAZgA5AGYAMgA2AC4AUAByAG8A
cABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAAALO9wY+Tn+JAjjLpgc8T7DIABCAB
AQgDIAABBSABARERBCABAQ4FIAEBEXEQBwgCEjkSPQgSQRJFEkkSTQYAAw4ODg4FIAASgIkKIAYB
CA4ODggQAgYgAgEOEjkFIAEIEj0FIAASgJUDIAAIBQACDg4cBCAAEkEDIAAcBCABHAgDIAAOBAYS
gKEEAAEIHAQAAQocAyAAAgUAAg4ODgkgAwESVR0IElkFIAIBCBwDBwEIBgACCBJZDgUgAR0ICAUg
ABKAsQYgARKAtRwFAAASgLkGIAEcEoC9CAABEoDBEYDFBSAAEoDJByACAQ4SgMkIt3pcVhk04IkI
iYRdzYCAzJECBg4CBgIDBhIUAwYSGAMGEgwDBhJdAwYSaQMGEm0DBhIgBCABAQoEIAEBAgsgBAEI
HQgdElUSWQUgAQESXQQAABJpBAAAEm0FAAEBEm0EAAASIAMAAAEDKAAKAygAAgMoAAgDKAAOBAgA
EmkECAASbQQIABIgCAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIA
AAAAACgBACNTQ19kMGExNDM0NTI4MmM0NmI2YWIzNzdlZWRkNWFmOWYyNgAABQEAAAAAFgEAEUNv
cHlyaWdodCBAICAyMDI1AABJAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjcBAFQOFEZyYW1l
d29ya0Rpc3BsYXlOYW1lEi5ORVQgRnJhbWV3b3JrIDQuNwQBAAAAtAAAAM7K774BAAAAkQAAAGxT
eXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4w
LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVt
LlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAABKAAAA
AAAAAAAAABpKAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMSgAAAAAAAAAAAAAAAF9Db3JEbGxN
YWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAAGAAA
gAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhgAADsAwAA
AAAAAAAAAADsAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAAAQAA
AAEAAAAAAAAAAQAAAAAAPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQByAEYA
aQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAETAMA
AAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAKAMAAAEAMAAwADAAMAAwADQAYgAwAAAA
GgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkATgBhAG0AZQAA
AAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAEMAXwBkADAA
YQAxADQAMwA0ADUAMgA4ADIAYwA0ADYAYgA2AGEAYgAzADcANwBlAGUAZABkADUAYQBmADkAZgAy
ADYAAAAwAAgAAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4AMAAuADAAAABwACgA
AQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAQwBfAGQAMABhADEANAAzADQANQAyADgAMgBj
ADQANgBiADYAYQBiADMANwA3AGUAZQBkAGQANQBhAGYAOQBmADIANgAuAGQAbABsAAAASAASAAEA
TABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAy
ADAAMgA1AAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgA
AQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBDAF8AZAAwAGEAMQA0ADMANAA1
ADIAOAAyAGMANAA2AGIANgBhAGIAMwA3ADcAZQBlAGQAZAA1AGEAZgA5AGYAMgA2AC4AZABsAGwA
AABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAQwBfAGQAMABhADEANAAzADQANQAy
ADgAMgBjADQANgBiADYAYQBiADMANwA3AGUAZQBkAGQANQBhAGYAOQBmADIANgAAADQACAABAFAA
cgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAA4AAgAAQBBAHMAcwBl
AG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAMAAAALDoAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_d0a14345282c46b6ab377eedd5af9f26</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::filename1402</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">14</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <outputs>
                <output
                  refId="Package\1402\Script Component.Outputs[Output 0]"
                  hasSideEffects="true"
                  name="Output 0">
                  <outputColumns>
                    <outputColumn
                      refId="Package\1402\Script Component.Outputs[Output 0].Columns[price]"
                      dataType="i8"
                      lineageId="Package\1402\Script Component.Outputs[Output 0].Columns[price]"
                      name="price" />
                    <outputColumn
                      refId="Package\1402\Script Component.Outputs[Output 0].Columns[cost]"
                      dataType="i8"
                      lineageId="Package\1402\Script Component.Outputs[Output 0].Columns[cost]"
                      name="cost" />
                    <outputColumn
                      refId="Package\1402\Script Component.Outputs[Output 0].Columns[month]"
                      dataType="i4"
                      lineageId="Package\1402\Script Component.Outputs[Output 0].Columns[month]"
                      name="month" />
                    <outputColumn
                      refId="Package\1402\Script Component.Outputs[Output 0].Columns[year]"
                      dataType="i4"
                      lineageId="Package\1402\Script Component.Outputs[Output 0].Columns[year]"
                      name="year" />
                    <outputColumn
                      refId="Package\1402\Script Component.Outputs[Output 0].Columns[Produce/Import]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\1402\Script Component.Outputs[Output 0].Columns[Produce/Import]"
                      name="Produce/Import" />
                    <outputColumn
                      refId="Package\1402\Script Component.Outputs[Output 0].Columns[Registered]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\1402\Script Component.Outputs[Output 0].Columns[Registered]"
                      name="Registered" />
                    <outputColumn
                      refId="Package\1402\Script Component.Outputs[Output 0].Columns[ProducerCountry]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\1402\Script Component.Outputs[Output 0].Columns[ProducerCountry]"
                      name="ProducerCountry" />
                    <outputColumn
                      refId="Package\1402\Script Component.Outputs[Output 0].Columns[ATCCode]"
                      dataType="wstr"
                      length="20"
                      lineageId="Package\1402\Script Component.Outputs[Output 0].Columns[ATCCode]"
                      name="ATCCode" />
                    <outputColumn
                      refId="Package\1402\Script Component.Outputs[Output 0].Columns[License]"
                      dataType="i4"
                      lineageId="Package\1402\Script Component.Outputs[Output 0].Columns[License]"
                      name="License" />
                    <outputColumn
                      refId="Package\1402\Script Component.Outputs[Output 0].Columns[biological]"
                      dataType="i4"
                      lineageId="Package\1402\Script Component.Outputs[Output 0].Columns[biological]"
                      name="biological" />
                    <outputColumn
                      refId="Package\1402\Script Component.Outputs[Output 0].Columns[OTC]"
                      dataType="i4"
                      lineageId="Package\1402\Script Component.Outputs[Output 0].Columns[OTC]"
                      name="OTC" />
                    <outputColumn
                      refId="Package\1402\Script Component.Outputs[Output 0].Columns[ConsumerPrice]"
                      dataType="i8"
                      lineageId="Package\1402\Script Component.Outputs[Output 0].Columns[ConsumerPrice]"
                      name="ConsumerPrice" />
                    <outputColumn
                      refId="Package\1402\Script Component.Outputs[Output 0].Columns[QuantitySales]"
                      dataType="i4"
                      lineageId="Package\1402\Script Component.Outputs[Output 0].Columns[QuantitySales]"
                      name="QuantitySales" />
                    <outputColumn
                      refId="Package\1402\Script Component.Outputs[Output 0].Columns[QuantityInPKG]"
                      dataType="i4"
                      lineageId="Package\1402\Script Component.Outputs[Output 0].Columns[QuantityInPKG]"
                      name="QuantityInPKG" />
                    <outputColumn
                      refId="Package\1402\Script Component.Outputs[Output 0].Columns[QuantityPkG]"
                      dataType="i4"
                      lineageId="Package\1402\Script Component.Outputs[Output 0].Columns[QuantityPkG]"
                      name="QuantityPkG" />
                    <outputColumn
                      refId="Package\1402\Script Component.Outputs[Output 0].Columns[GenericName]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\1402\Script Component.Outputs[Output 0].Columns[GenericName]"
                      name="GenericName" />
                    <outputColumn
                      refId="Package\1402\Script Component.Outputs[Output 0].Columns[GenericCode]"
                      dataType="i4"
                      lineageId="Package\1402\Script Component.Outputs[Output 0].Columns[GenericCode]"
                      name="GenericCode" />
                    <outputColumn
                      refId="Package\1402\Script Component.Outputs[Output 0].Columns[EffectiveMaterial]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\1402\Script Component.Outputs[Output 0].Columns[EffectiveMaterial]"
                      name="EffectiveMaterial" />
                    <outputColumn
                      refId="Package\1402\Script Component.Outputs[Output 0].Columns[BrandName]"
                      dataType="wstr"
                      length="250"
                      lineageId="Package\1402\Script Component.Outputs[Output 0].Columns[BrandName]"
                      name="BrandName" />
                    <outputColumn
                      refId="Package\1402\Script Component.Outputs[Output 0].Columns[EnglishNameBrand]"
                      dataType="wstr"
                      length="250"
                      lineageId="Package\1402\Script Component.Outputs[Output 0].Columns[EnglishNameBrand]"
                      name="EnglishNameBrand" />
                    <outputColumn
                      refId="Package\1402\Script Component.Outputs[Output 0].Columns[IRC]"
                      dataType="wstr"
                      length="250"
                      lineageId="Package\1402\Script Component.Outputs[Output 0].Columns[IRC]"
                      name="IRC" />
                    <outputColumn
                      refId="Package\1402\Script Component.Outputs[Output 0].Columns[Producer]"
                      dataType="wstr"
                      length="250"
                      lineageId="Package\1402\Script Component.Outputs[Output 0].Columns[Producer]"
                      name="Producer" />
                    <outputColumn
                      refId="Package\1402\Script Component.Outputs[Output 0].Columns[Supplier]"
                      dataType="wstr"
                      length="250"
                      lineageId="Package\1402\Script Component.Outputs[Output 0].Columns[Supplier]"
                      name="Supplier" />
                    <outputColumn
                      refId="Package\1402\Script Component.Outputs[Output 0].Columns[OwenerBrand]"
                      dataType="wstr"
                      length="250"
                      lineageId="Package\1402\Script Component.Outputs[Output 0].Columns[OwenerBrand]"
                      name="OwenerBrand" />
                    <outputColumn
                      refId="Package\1402\Script Component.Outputs[Output 0].Columns[Distributer]"
                      dataType="wstr"
                      length="250"
                      lineageId="Package\1402\Script Component.Outputs[Output 0].Columns[Distributer]"
                      name="Distributer" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\1402.Paths[Output 0]"
              endId="Package\1402\OLE DB Destination.Inputs[OLE DB Destination Input]"
              name="Output 0"
              startId="Package\1402\Script Component.Outputs[Output 0]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\1403"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{bc5bb0ae-47cd-4fa9-a326-ad4108aeb225}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="1403"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\1403\OLE DB Destination"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="OLE DB Destination"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[amarDistribute]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\1403\OLE DB Destination.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[192.168.10.10.DW]"
                  connectionManagerRefId="Package.ConnectionManagers[192.168.10.10.DW]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\1403\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\1403\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[price]"
                      cachedDataType="i8"
                      cachedName="price"
                      externalMetadataColumnId="Package\1403\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[price]"
                      lineageId="Package\1403\Script Component.Outputs[Output 0].Columns[price]" />
                    <inputColumn
                      refId="Package\1403\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[cost]"
                      cachedDataType="i8"
                      cachedName="cost"
                      externalMetadataColumnId="Package\1403\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[cost]"
                      lineageId="Package\1403\Script Component.Outputs[Output 0].Columns[cost]" />
                    <inputColumn
                      refId="Package\1403\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[month]"
                      cachedDataType="i4"
                      cachedName="month"
                      externalMetadataColumnId="Package\1403\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[month]"
                      lineageId="Package\1403\Script Component.Outputs[Output 0].Columns[month]" />
                    <inputColumn
                      refId="Package\1403\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[year]"
                      cachedDataType="i4"
                      cachedName="year"
                      externalMetadataColumnId="Package\1403\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[year]"
                      lineageId="Package\1403\Script Component.Outputs[Output 0].Columns[year]" />
                    <inputColumn
                      refId="Package\1403\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Produce/Import]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Produce/Import"
                      externalMetadataColumnId="Package\1403\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Produce/Import]"
                      lineageId="Package\1403\Script Component.Outputs[Output 0].Columns[Produce/Import]" />
                    <inputColumn
                      refId="Package\1403\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Registered]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Registered"
                      externalMetadataColumnId="Package\1403\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Registered]"
                      lineageId="Package\1403\Script Component.Outputs[Output 0].Columns[Registered]" />
                    <inputColumn
                      refId="Package\1403\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[ProducerCountry]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="ProducerCountry"
                      externalMetadataColumnId="Package\1403\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ProducerCountry]"
                      lineageId="Package\1403\Script Component.Outputs[Output 0].Columns[ProducerCountry]" />
                    <inputColumn
                      refId="Package\1403\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[ATCCode]"
                      cachedDataType="wstr"
                      cachedLength="20"
                      cachedName="ATCCode"
                      externalMetadataColumnId="Package\1403\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ATCCode]"
                      lineageId="Package\1403\Script Component.Outputs[Output 0].Columns[ATCCode]" />
                    <inputColumn
                      refId="Package\1403\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[License]"
                      cachedDataType="i4"
                      cachedName="License"
                      externalMetadataColumnId="Package\1403\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[License]"
                      lineageId="Package\1403\Script Component.Outputs[Output 0].Columns[License]" />
                    <inputColumn
                      refId="Package\1403\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[biological]"
                      cachedDataType="i4"
                      cachedName="biological"
                      externalMetadataColumnId="Package\1403\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[biological]"
                      lineageId="Package\1403\Script Component.Outputs[Output 0].Columns[biological]" />
                    <inputColumn
                      refId="Package\1403\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[OTC]"
                      cachedDataType="i4"
                      cachedName="OTC"
                      externalMetadataColumnId="Package\1403\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[OTC]"
                      lineageId="Package\1403\Script Component.Outputs[Output 0].Columns[OTC]" />
                    <inputColumn
                      refId="Package\1403\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[ConsumerPrice]"
                      cachedDataType="i8"
                      cachedName="ConsumerPrice"
                      externalMetadataColumnId="Package\1403\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ConsumerPrice]"
                      lineageId="Package\1403\Script Component.Outputs[Output 0].Columns[ConsumerPrice]" />
                    <inputColumn
                      refId="Package\1403\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[QuantitySales]"
                      cachedDataType="i4"
                      cachedName="QuantitySales"
                      externalMetadataColumnId="Package\1403\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[QuantitySales]"
                      lineageId="Package\1403\Script Component.Outputs[Output 0].Columns[QuantitySales]" />
                    <inputColumn
                      refId="Package\1403\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[QuantityInPKG]"
                      cachedDataType="i4"
                      cachedName="QuantityInPKG"
                      externalMetadataColumnId="Package\1403\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[QuantityInPKG]"
                      lineageId="Package\1403\Script Component.Outputs[Output 0].Columns[QuantityInPKG]" />
                    <inputColumn
                      refId="Package\1403\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[QuantityPkG]"
                      cachedDataType="i4"
                      cachedName="QuantityPkG"
                      externalMetadataColumnId="Package\1403\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[QuantityPkG]"
                      lineageId="Package\1403\Script Component.Outputs[Output 0].Columns[QuantityPkG]" />
                    <inputColumn
                      refId="Package\1403\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[GenericName]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="GenericName"
                      externalMetadataColumnId="Package\1403\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[GenericName]"
                      lineageId="Package\1403\Script Component.Outputs[Output 0].Columns[GenericName]" />
                    <inputColumn
                      refId="Package\1403\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[GenericCode]"
                      cachedDataType="i4"
                      cachedName="GenericCode"
                      externalMetadataColumnId="Package\1403\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[GenericCode]"
                      lineageId="Package\1403\Script Component.Outputs[Output 0].Columns[GenericCode]" />
                    <inputColumn
                      refId="Package\1403\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[EffectiveMaterial]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="EffectiveMaterial"
                      externalMetadataColumnId="Package\1403\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[EffectiveMaterial]"
                      lineageId="Package\1403\Script Component.Outputs[Output 0].Columns[EffectiveMaterial]" />
                    <inputColumn
                      refId="Package\1403\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[BrandName]"
                      cachedDataType="wstr"
                      cachedLength="250"
                      cachedName="BrandName"
                      externalMetadataColumnId="Package\1403\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[BrandName]"
                      lineageId="Package\1403\Script Component.Outputs[Output 0].Columns[BrandName]" />
                    <inputColumn
                      refId="Package\1403\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[EnglishNameBrand]"
                      cachedDataType="wstr"
                      cachedLength="250"
                      cachedName="EnglishNameBrand"
                      externalMetadataColumnId="Package\1403\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[EnglishNameBrand]"
                      lineageId="Package\1403\Script Component.Outputs[Output 0].Columns[EnglishNameBrand]" />
                    <inputColumn
                      refId="Package\1403\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[IRC]"
                      cachedDataType="wstr"
                      cachedLength="250"
                      cachedName="IRC"
                      externalMetadataColumnId="Package\1403\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[IRC]"
                      lineageId="Package\1403\Script Component.Outputs[Output 0].Columns[IRC]" />
                    <inputColumn
                      refId="Package\1403\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Producer]"
                      cachedDataType="wstr"
                      cachedLength="250"
                      cachedName="Producer"
                      externalMetadataColumnId="Package\1403\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Producer]"
                      lineageId="Package\1403\Script Component.Outputs[Output 0].Columns[Producer]" />
                    <inputColumn
                      refId="Package\1403\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Supplier]"
                      cachedDataType="wstr"
                      cachedLength="250"
                      cachedName="Supplier"
                      externalMetadataColumnId="Package\1403\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Supplier]"
                      lineageId="Package\1403\Script Component.Outputs[Output 0].Columns[Supplier]" />
                    <inputColumn
                      refId="Package\1403\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[OwenerBrand]"
                      cachedDataType="wstr"
                      cachedLength="250"
                      cachedName="OwenerBrand"
                      externalMetadataColumnId="Package\1403\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[OwenerBrand]"
                      lineageId="Package\1403\Script Component.Outputs[Output 0].Columns[OwenerBrand]" />
                    <inputColumn
                      refId="Package\1403\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Distributer]"
                      cachedDataType="wstr"
                      cachedLength="250"
                      cachedName="Distributer"
                      externalMetadataColumnId="Package\1403\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Distributer]"
                      lineageId="Package\1403\Script Component.Outputs[Output 0].Columns[Distributer]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\1403\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Distributer]"
                      dataType="wstr"
                      length="250"
                      name="Distributer" />
                    <externalMetadataColumn
                      refId="Package\1403\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[OwenerBrand]"
                      dataType="wstr"
                      length="250"
                      name="OwenerBrand" />
                    <externalMetadataColumn
                      refId="Package\1403\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Supplier]"
                      dataType="wstr"
                      length="250"
                      name="Supplier" />
                    <externalMetadataColumn
                      refId="Package\1403\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Producer]"
                      dataType="wstr"
                      length="250"
                      name="Producer" />
                    <externalMetadataColumn
                      refId="Package\1403\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[IRC]"
                      dataType="wstr"
                      length="250"
                      name="IRC" />
                    <externalMetadataColumn
                      refId="Package\1403\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[EnglishNameBrand]"
                      dataType="wstr"
                      length="250"
                      name="EnglishNameBrand" />
                    <externalMetadataColumn
                      refId="Package\1403\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[BrandName]"
                      dataType="wstr"
                      length="250"
                      name="BrandName" />
                    <externalMetadataColumn
                      refId="Package\1403\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[EffectiveMaterial]"
                      dataType="wstr"
                      length="250"
                      name="EffectiveMaterial" />
                    <externalMetadataColumn
                      refId="Package\1403\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[GenericCode]"
                      dataType="wstr"
                      length="15"
                      name="GenericCode" />
                    <externalMetadataColumn
                      refId="Package\1403\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[GenericName]"
                      dataType="wstr"
                      length="250"
                      name="GenericName" />
                    <externalMetadataColumn
                      refId="Package\1403\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[QuantityPkG]"
                      dataType="i8"
                      name="QuantityPkG" />
                    <externalMetadataColumn
                      refId="Package\1403\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[QuantityInPKG]"
                      dataType="i4"
                      name="QuantityInPKG" />
                    <externalMetadataColumn
                      refId="Package\1403\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[QuantitySales]"
                      dataType="i8"
                      name="QuantitySales" />
                    <externalMetadataColumn
                      refId="Package\1403\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ConsumerPrice]"
                      dataType="i8"
                      name="ConsumerPrice" />
                    <externalMetadataColumn
                      refId="Package\1403\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[OTC]"
                      dataType="wstr"
                      length="20"
                      name="OTC" />
                    <externalMetadataColumn
                      refId="Package\1403\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[biological]"
                      dataType="wstr"
                      length="20"
                      name="biological" />
                    <externalMetadataColumn
                      refId="Package\1403\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[License]"
                      dataType="bool"
                      name="License" />
                    <externalMetadataColumn
                      refId="Package\1403\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ATCCode]"
                      dataType="wstr"
                      length="20"
                      name="ATCCode" />
                    <externalMetadataColumn
                      refId="Package\1403\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ProducerCountry]"
                      dataType="wstr"
                      length="100"
                      name="ProducerCountry" />
                    <externalMetadataColumn
                      refId="Package\1403\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Registered]"
                      dataType="wstr"
                      length="10"
                      name="Registered" />
                    <externalMetadataColumn
                      refId="Package\1403\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Produce/Import]"
                      dataType="wstr"
                      length="10"
                      name="Produce/Import" />
                    <externalMetadataColumn
                      refId="Package\1403\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[year]"
                      dataType="i4"
                      name="year" />
                    <externalMetadataColumn
                      refId="Package\1403\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[month]"
                      dataType="i4"
                      name="month" />
                    <externalMetadataColumn
                      refId="Package\1403\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[cost]"
                      dataType="i8"
                      name="cost" />
                    <externalMetadataColumn
                      refId="Package\1403\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[price]"
                      dataType="i8"
                      name="price" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\1403\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\1403\OLE DB Destination.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\1403\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\1403\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\1403\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\1403\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\1403\Script Component"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;13"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Script Component"
              version="13">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_d0a14345282c46b6ab377eedd5af9f26")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_d0a14345282c46b6ab377eedd5af9f26")]
[assembly: AssemblyCopyright("Copyright @  2025")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help: Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component.
 */
#endregion
#region Help: Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component.
 */
#endregion

#region Namespaces
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using System;
using System.Collections.Generic;
using System.Data;
using System.Data.OleDb;
using System.Windows.Forms;
#endregion

/// <summary>
/// This is the class to which to add your code. Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    string processResult = "Success";
    bool fireAgain = false;
    #region Help: Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable. To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     *
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     * DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     * Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help: Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component. See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor. To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     *
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     * object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     * SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     * object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     * string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     * Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help: Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     * ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     * ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     * ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        //Variab/*l*/es.Result1 = processResult; // فقط اینجا میشه نوشت
    }



    public override void CreateNewOutputRows()
    {

    string connStr =
    "Provider=Microsoft.ACE.OLEDB.12.0;" +
                 $"Data Source={Variables.filename1403};" +
                 "Extended Properties=\"Excel 12.0;HDR=YES;IMEX=1\";";

        bool fireAgain = false;

        using (OleDbConnection conn = new OleDbConnection(connStr))
        {
            //ComponentMetaData.FireInformation(0, "CustomLog", $"Updated ID , rows affected: {Variables.filname1}", "", 0, ref fireAgain);
            try
            {
                conn.Open();
                ComponentMetaData.FireInformation(0, "CustomLog", $"Updated ID , rows affected: conn.Open()", "", 0, ref fireAgain);

                OleDbDataAdapter da = new OleDbDataAdapter("SELECT * FROM [Dataset$]", conn);
                ComponentMetaData.FireInformation(0, "CustomLog", $"Updated ID , rows affected: OleDbDataAdapter", "", 0, ref fireAgain);

                DataTable dt = new DataTable();
                da.Fill(dt);
                ComponentMetaData.FireInformation(0, "CustomLog", $"Updated ID , rows affected: da.Fill(dt)", "", 0, ref fireAgain);
                int rowCount = dt.Rows.Count;
                ComponentMetaData.FireInformation(0, "CustomLog", $"Rows Count: {rowCount}", "", 0, ref fireAgain);
                for (int i = 0; i < dt.Columns.Count; i++)
                {
                    ComponentMetaData.FireInformation(0, "CustomLog", $"Rows Count:{i}--> {dt.Columns[i].ColumnName}", "", 0, ref fireAgain);

                 
                }



                foreach (DataRow row1 in dt.Rows)
                {

                    Output0Buffer.AddRow();
                    Output0Buffer.IRC = row1[0].ToString();
                    Output0Buffer.GenericCode = row1[1] == DBNull.Value ? 0 : Convert.ToInt32(row1[1]);
                    Output0Buffer.GenericName = row1[2].ToString();
                    Output0Buffer.EffectiveMaterial = row1[3].ToString();
                    Output0Buffer.ATCCode = row1[4].ToString();
                    Output0Buffer.Distributer = row1[5].ToString();
                    Output0Buffer.EnglishNameBrand = row1[6].ToString();
                    Output0Buffer.QuantityPkG = row1[7] == DBNull.Value ? 0 : Convert.ToInt32(row1[7]);
                    Output0Buffer.QuantitySales = row1[8] == DBNull.Value ? 0 : Convert.ToInt32(row1[8]);
                    Output0Buffer.cost = row1[9] == DBNull.Value ? 0 : Convert.ToInt64(row1[9]);
                    Output0Buffer.price = row1[10] == DBNull.Value ? 0 : Convert.ToInt64(row1[10]);
                    Output0Buffer.ConsumerPrice = row1[11] == DBNull.Value ? 0 : Convert.ToInt64(row1[11]);
                    string monthName = row1[15].ToString(); // مثلا "فروردین"

                    Dictionary<string, int> monthMap = new Dictionary<string, int>
                        {
                            { "فروردین", 1 },
                            { "اردیبهشت", 2 },
                            { "خرداد", 3 },
                            { "تیر", 4 },
                            { "مرداد", 5 },
                            { "شهریور", 6 },
                            { "مهر", 7 },
                            { "آبان", 8 },
                            { "آذر", 9 },
                            { "دی", 10 },
                            { "بهمن", 11 },
                            { "اسفند", 12 }
                        };

                    int monthNumber = monthMap.ContainsKey(monthName) ? monthMap[monthName] : 0;
                    Output0Buffer.month = monthNumber;
                    Output0Buffer.QuantityInPKG = row1[16] == DBNull.Value ? 0 : Convert.ToInt32(row1[16]);
                    Output0Buffer.Producer = row1[17].ToString();
                    Output0Buffer.OwenerBrand = row1[18].ToString();
                    Output0Buffer.Supplier = row1[19].ToString();
                    Output0Buffer.ProducerCountry = row1[20].ToString();
                    Output0Buffer.OTC = row1[21] == DBNull.Value ? 0 : Convert.ToInt32(row1[21]);
                    Output0Buffer.biological = row1[22] == DBNull.Value ? 0 : Convert.ToInt32(row1[22]);
                    Output0Buffer.ProduceImport = row1[24].ToString();
                    Output0Buffer.Registered = row1[25].ToString();
                    Output0Buffer.BrandName = null;
                    Output0Buffer.year = 1403;
                }
            }
            catch (Exception ex)
            {
                processResult = "Fail"; // فقط مقدار local تغییر می‌کنه
                ComponentMetaData.FireInformation(0, "CustomLog", $"Exception: {ex.Message}", "", 0, ref fireAgain);
            }



      
        }
    }

    /* Add rows by calling the AddRow method on the member variable named "<Output Name>Buffer". 
       For example, call MyOutputBuffer.AddRow() if your output was named "MyOutput". */
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Output0Buffer: ScriptBuffer

{
    public Output0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Int64 price
    {
        set
        {
            this[0] = value;
        }
    }
    public bool price_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int64 cost
    {
        set
        {
            this[1] = value;
        }
    }
    public bool cost_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 month
    {
        set
        {
            this[2] = value;
        }
    }
    public bool month_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 year
    {
        set
        {
            this[3] = value;
        }
    }
    public bool year_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ProduceImport
    {
        set
        {
            this[4] = value;
        }
    }
    public bool ProduceImport_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Registered
    {
        set
        {
            this[5] = value;
        }
    }
    public bool Registered_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ProducerCountry
    {
        set
        {
            this[6] = value;
        }
    }
    public bool ProducerCountry_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ATCCode
    {
        set
        {
            this[7] = value;
        }
    }
    public bool ATCCode_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 License
    {
        set
        {
            this[8] = value;
        }
    }
    public bool License_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(8);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 biological
    {
        set
        {
            this[9] = value;
        }
    }
    public bool biological_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(9);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 OTC
    {
        set
        {
            this[10] = value;
        }
    }
    public bool OTC_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(10);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int64 ConsumerPrice
    {
        set
        {
            this[11] = value;
        }
    }
    public bool ConsumerPrice_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(11);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 QuantitySales
    {
        set
        {
            this[12] = value;
        }
    }
    public bool QuantitySales_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(12);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 QuantityInPKG
    {
        set
        {
            this[13] = value;
        }
    }
    public bool QuantityInPKG_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(13);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 QuantityPkG
    {
        set
        {
            this[14] = value;
        }
    }
    public bool QuantityPkG_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(14);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String GenericName
    {
        set
        {
            this[15] = value;
        }
    }
    public bool GenericName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(15);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 GenericCode
    {
        set
        {
            this[16] = value;
        }
    }
    public bool GenericCode_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(16);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String EffectiveMaterial
    {
        set
        {
            this[17] = value;
        }
    }
    public bool EffectiveMaterial_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(17);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String BrandName
    {
        set
        {
            this[18] = value;
        }
    }
    public bool BrandName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(18);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String EnglishNameBrand
    {
        set
        {
            this[19] = value;
        }
    }
    public bool EnglishNameBrand_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(19);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String IRC
    {
        set
        {
            this[20] = value;
        }
    }
    public bool IRC_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(20);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Producer
    {
        set
        {
            this[21] = value;
        }
    }
    public bool Producer_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(21);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Supplier
    {
        set
        {
            this[22] = value;
        }
    }
    public bool Supplier_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(22);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String OwenerBrand
    {
        set
        {
            this[23] = value;
        }
    }
    public bool OwenerBrand_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(23);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Distributer
    {
        set
        {
            this[24] = value;
        }
    }
    public bool Distributer_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(24);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_d0a14345282c46b6ab377eedd5af9f26.Properties.Settings.get_Default():SC_d0a14345282c46b6ab377eedd5af9f26.Properties.Sett" +
    "ings")]

namespace SC_d0a14345282c46b6ab377eedd5af9f26.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output0Buffer Output0Buffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output0Buffer)
        {
            Output0Buffer.SetEndOfRowset();
            Output0Buffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 0"))
            {
                Output0Buffer = new Output0Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String filename1403
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["filename1403"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_d0a14345282c46b6ab377eedd5af9f26</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_d0a14345282c46b6ab377eedd5af9f26</msb:DisplayName>
    <msb:ProjectId>{BDAAAA52-B7E1-4646-A2F8-1A82D9A43C69}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_d0a14345282c46b6ab377eedd5af9f26.csproj" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_d0a14345282c46b6ab377eedd5af9f26.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{15527E59-F829-4CEC-A450-B6E96C25074F}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_d0a14345282c46b6ab377eedd5af9f26</RootNamespace>
    <AssemblyName>SC_d0a14345282c46b6ab377eedd5af9f26</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_d0a14345282c46b6ab377eedd5af9f26.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_d0a14345282c46b6ab377eedd5af9f26.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_d0a14345282c46b6ab377eedd5af9f26.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_d0a14345282c46b6ab377eedd5af9f26.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_d0a14345282c46b6ab377eedd5af9f26.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_d0a14345282c46b6ab377eedd5af9f26.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAJHW4GgAAAAAAAAAAOAAIiALATAAAC4AAAAIAAAAAAAACk0A
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACgAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAALhMAABPAAAAAGAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAEC0AAAAgAAAALgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAYAAAAAYAAAAwAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAANgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADs
TAAAAAAAAEgAAAACAAUAFCsAAOwgAAABAAAAAAAAAABMAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBAAAAoqHgIoEQAACiobMAgAVQUAAAEAABFyAQAAcAJ7
BAAABG9CAAAGcl8AAHAoEgAAChYKcxMAAAoLB28UAAAKAigVAAAKFnLDAABwctcAAHByJwEAcBYS
AG8WAAAKcikBAHAHcxcAAAoCKBUAAAoWcsMAAHByWwEAcHInAQBwFhIAbxYAAApzGAAACgwIbxkA
AAomAigVAAAKFnLDAABwcrUBAHByJwEAcBYSAG8WAAAKCG8aAAAKbxsAAAoNAigVAAAKFnLDAABw
cgUCAHAJjCgAAAEoHAAACnInAQBwFhIAbxYAAAoWEwQrQgIoFQAAChZywwAAcHIlAgBwEQSMKAAA
AQhvHQAAChEEbx4AAApvHwAACiggAAAKcicBAHAWEgBvFgAAChEEF1gTBBEECG8dAAAKbxsAAAoy
rwhvGgAACm8hAAAKEwU4tQMAABEFbyIAAAp0EQAAARMGAnsFAAAEbzgAAAYCewUAAAQRBhZvIwAA
Cm8kAAAKby4AAAYCewUAAAQRBhdvIwAACn4lAAAKLg8RBhdvIwAACigmAAAKKwEWbyYAAAYCewUA
AAQRBhhvIwAACm8kAAAKbyQAAAYCewUAAAQRBhlvIwAACm8kAAAKbygAAAYCewUAAAQRBhpvIwAA
Cm8kAAAKbxQAAAYCewUAAAQRBhtvIwAACm8kAAAKbzYAAAYCewUAAAQRBhxvIwAACm8kAAAKbywA
AAYCewUAAAQRBh1vIwAACn4lAAAKLg8RBh1vIwAACigmAAAKKwEWbyIAAAYCewUAAAQRBh5vIwAA
Cn4lAAAKLg8RBh5vIwAACigmAAAKKwEWbx4AAAYCewUAAAQRBh8JbyMAAAp+JQAACi4QEQYfCW8j
AAAKKCcAAAorAhZqbwgAAAYCewUAAAQRBh8KbyMAAAp+JQAACi4QEQYfCm8jAAAKKCcAAAorAhZq
bwYAAAYCewUAAAQRBh8LbyMAAAp+JQAACi4QEQYfC28jAAAKKCcAAAorAhZqbxwAAAYRBh8PbyMA
AApvJAAAChMHcygAAAolclECAHAXbykAAAolcmECAHAYbykAAAolcnMCAHAZbykAAAolcn8CAHAa
bykAAAolcocCAHAbbykAAAolcpMCAHAcbykAAAolcqECAHAdbykAAAolcqkCAHAebykAAAolcrMC
AHAfCW8pAAAKJXK7AgBwHwpvKQAACiVywQIAcB8LbykAAAolcssCAHAfDG8pAAAKEwgRCBEHbyoA
AAotAxYrCREIEQdvKwAAChMJAnsFAAAEEQlvCgAABgJ7BQAABBEGHxBvIwAACn4lAAAKLhARBh8Q
byMAAAooJgAACisBFm8gAAAGAnsFAAAEEQYfEW8jAAAKbyQAAApvMAAABgJ7BQAABBEGHxJvIwAA
Cm8kAAAKbzQAAAYCewUAAAQRBh8TbyMAAApvJAAACm8yAAAGAnsFAAAEEQYfFG8jAAAKbyQAAApv
EgAABgJ7BQAABBEGHxVvIwAACn4lAAAKLhARBh8VbyMAAAooJgAACisBFm8aAAAGAnsFAAAEEQYf
Fm8jAAAKfiUAAAouEBEGHxZvIwAACigmAAAKKwEWbxgAAAYCewUAAAQRBh8YbyMAAApvJAAACm8O
AAAGAnsFAAAEEQYfGW8jAAAKbyQAAApvEAAABgJ7BQAABBRvKgAABgJ7BQAABCB7BQAAbwwAAAYR
BW8sAAAKOj/8///eFREFdRMAAAETChEKLAcRCm8tAAAK3N5DEwsCctcCAHB9AQAABAIoFQAAChZy
wwAAcHLhAgBwEQtvLgAACigvAAAKcicBAHAWEgBvFgAACt4KBywGB28tAAAK3CoAAABBTAAAAgAA
ADIBAADIAwAA+gQAABUAAAAAAAAAAAAAACIAAADvBAAAEQUAADkAAAAUAAABAgAAACIAAAAoBQAA
SgUAAAoAAAAAAAAASgJy+QIAcH0BAAAEAig7AAAGKioCAwQFKDAAAAoqOgIWA4wtAAABKDEAAAoq
WgMsCAIWKDIAAAoqcgkDAHBzMwAACno6AhcDjC0AAAEoMQAACipaAywIAhcoMgAACipyCQMAcHMz
AAAKejoCGAOMKAAAASgxAAAKKloDLAgCGCgyAAAKKnIJAwBwczMAAAp6OgIZA4woAAABKDEAAAoq
WgMsCAIZKDIAAAoqcgkDAHBzMwAACnomAhoDKDEAAAoqWgMsCAIaKDIAAAoqcgkDAHBzMwAACnom
AhsDKDEAAAoqWgMsCAIbKDIAAAoqcgkDAHBzMwAACnomAhwDKDEAAAoqWgMsCAIcKDIAAAoqcgkD
AHBzMwAACnomAh0DKDEAAAoqWgMsCAIdKDIAAAoqcgkDAHBzMwAACno6Ah4DjCgAAAEoMQAACipa
AywIAh4oMgAACipyCQMAcHMzAAAKej4CHwkDjCgAAAEoMQAACipeAywJAh8JKDIAAAoqcgkDAHBz
MwAACno+Ah8KA4woAAABKDEAAAoqXgMsCQIfCigyAAAKKnIJAwBwczMAAAp6PgIfCwOMLQAAASgx
AAAKKl4DLAkCHwsoMgAACipyCQMAcHMzAAAKej4CHwwDjCgAAAEoMQAACipeAywJAh8MKDIAAAoq
cgkDAHBzMwAACno+Ah8NA4woAAABKDEAAAoqXgMsCQIfDSgyAAAKKnIJAwBwczMAAAp6PgIfDgOM
KAAAASgxAAAKKl4DLAkCHw4oMgAACipyCQMAcHMzAAAKeioCHw8DKDEAAAoqXgMsCQIfDygyAAAK
KnIJAwBwczMAAAp6PgIfEAOMKAAAASgxAAAKKl4DLAkCHxAoMgAACipyCQMAcHMzAAAKeioCHxED
KDEAAAoqXgMsCQIfESgyAAAKKnIJAwBwczMAAAp6KgIfEgMoMQAACipeAywJAh8SKDIAAAoqcgkD
AHBzMwAACnoqAh8TAygxAAAKKl4DLAkCHxMoMgAACipyCQMAcHMzAAAKeioCHxQDKDEAAAoqXgMs
CQIfFCgyAAAKKnIJAwBwczMAAAp6KgIfFQMoMQAACipeAywJAh8VKDIAAAoqcgkDAHBzMwAACnoq
Ah8WAygxAAAKKl4DLAkCHxYoMgAACipyCQMAcHMzAAAKeioCHxcDKDEAAAoqXgMsCQIfFygyAAAK
KnIJAwBwczMAAAp6KgIfGAMoMQAACipeAywJAh8YKDIAAAoqcgkDAHBzMwAACnoeAig0AAAKKh4C
KDUAAAoqHgIoNgAACip+Aig3AAAKAgJzQAAABn0DAAAEAgJzQQAABn0EAAAEKgYqbgJ7BQAABCwS
AnsFAAAEbzkAAAYCFH0FAAAEKgAAABMwBQBJAAAAAgAAERYKKy4EBpQOBHKmAwBwKDgAAAozGQIF
BpoCBAaUKDkAAAoOBHMFAAAGfQUAAAQGF1gKBgMyzgJvPwAABgJvPAAABgIoPQAABio6Aig6AAAK
AgN9BgAABCo6Aig6AAAKAgN9BwAABCqWAnsHAAAEbzsAAApyuAMAcG88AAAKKD0AAApvPgAACnQh
AAABKh4CKDoAAAoqrn4IAAAELR5y0gMAcNAHAAACKD8AAApvQAAACnNBAAAKgAgAAAR+CAAABCoa
fgkAAAQqHgKACQAABCoafgoAAAQqHgIoQgAACiouc0gAAAaACgAABCoAQlNKQgEAAQAAAAAADAAA
AHY0LjAuMzAzMTkAAAAABQBsAAAA9AwAACN+AABgDQAA0AwAACNTdHJpbmdzAAAAADAaAABEBAAA
I1VTAHQeAAAQAAAAI0dVSUQAAACEHgAAaAIAACNCbG9iAAAAAAAAAAIAAAFXFaIJCQEAAAD6ATMA
FgAAAQAAADUAAAAIAAAACgAAAEkAAAA8AAAAQgAAABAAAAACAAAABAAAADYAAAA3AAAAAQAAAAEA
AAAHAAAAAQAAAAAAHgUBAAAAAAAGAOED8AkGAHUE8AkGAC0D3QkPAGQKAAAGAFoD+AcGAMQD+AcG
AKUD+AcGAFwE+AcGAAEE+AcGABoE+AcGAHED+AcGAIwDtgQKADUESwIOADEIDgEOAOQB7AAGAKwJ
BAsOAJIM7AAGAFsAKQEGAO4BhgcGAFEIhgcKAAwJSwISAP0ISwIKAHoISwIKALILSwIGAGQLhgcG
ABAD3QkGAB0JEAoGAG4I4wcWAOACCAUWAEEDCAUWALQCzgcGAPUC8AkGANIEhgcOADQIWwgaAAEA
YgkOAIsJDgEOAI4JWwgOAB8I7AAOAJkC7AAGAFUAhgcOAAoI7AAOALMH7AAGAEsFhgcGAPULhgcG
AHsAhgcGAEEIhgceACoAOgkeABoAOgljAGIMAAAeADsAOgkGAGwChgcGAPoBhgcGALEM+AcAAAAA
pQAAAAAAAQABAAEAEACeBwAAEAABAAEAAQAQAO8IAABVAAMABQABABAAlAsAAGEAAwA7AAEAEAAX
CwAAZQAGAEAAAQAQAMAKAABlAAcAQQAAABAAFwpzCmUACABDAAABEADvCnMKfQAKAEcAAQCGCykB
AQCpBywBBgAXCy8BBgDACjMBBgDvCDcBAQCiCzsBAQCiCzsBEQCNBz8BEQCJAkMBEQCsAUcBUCAA
AAAAxgCTBAYAAQBYIAAAAADGAJ4EBgABAGAgAAAAAMYAQgsGAAEAECYAAAAAhhjGCQYAAQAjJgAA
AACGGMYJxQABAC4mAAAAAIYIogFLAQQAPSYAAAAAhggCBlABBQBUJgAAAACGCDAMSwEGAGMmAAAA
AIYIQQdQAQcAeiYAAAAAhgjZBAEACACJJgAAAACGCHwGUAEJAKAmAAAAAIYI2QgBAAoAryYAAAAA
hgjABlABCwDGJgAAAACGCP0LEAAMANAmAAAAAIYIKAdQAQ0A5yYAAAAAhghcARAADgDxJgAAAACG
CKAFUAEPAAgnAAAAAIYIugwQABAAEicAAAAAhghRB1ABEQApJwAAAACGCLwBEAASADMnAAAAAIYI
EwZQARMASicAAAAAhgjMAgEAFABZJwAAAACGCGkGUAEVAHAnAAAAAIYI4wQBABYAgCcAAAAAhgiN
BlABFwCYJwAAAACGCLYAAQAYAKgnAAAAAIYIYQVQARkAwCcAAAAAhgiQAUsBGgDQJwAAAACGCOkF
UAEbAOgnAAAAAIYIogoBABwA+CcAAAAAhggPB1ABHQAQKAAAAACGCMoAAQAeACAoAAAAAIYIcAVQ
AR8AOCgAAAAAhgjcAAEAIABIKAAAAACGCIkFUAEhAGAoAAAAAIYIHgIQACIAaygAAAAAhgg9BlAB
IwCDKAAAAACGCMgBAQAkAJMoAAAAAIYIJgZQASUAqygAAAAAhgjyBBAAJgC2KAAAAACGCKMGUAEn
AM4oAAAAAIYILgIQACgA2SgAAAAAhghUBlABKQDxKAAAAACGCGsBEAAqAPwoAAAAAIYItgVQASsA
FCkAAAAAhgiuABAALAAfKQAAAACGCFIFUAEtADcpAAAAAIYI4ggQAC4AQikAAAAAhgjQBlABLwBa
KQAAAACGCC0JEAAwAGUpAAAAAIYI5AZQATEAfSkAAAAAhgiAARAAMgCIKQAAAACGCNIFUAEzAKAp
AAAAAIYInAkQADQAqykAAAAAhgj4BlABNQDDKQAAAACGAJoMBgA2AMspAAAAAIYAawsGADYA0ykA
AAAAhgBuC7sANgDbKQAAAACGGMYJBgA2APspAAAAAMYBKwsGADYA/SkAAAAAgQBIAQYANgAcKgAA
AADGADkMVQE2APspAAAAAMYBQgsGADoAcSoAAAAAhhjGCWEBOgCAKgAAAACGGMYJYQE7AI8qAAAA
AIYIaAB3ADwAtSoAAAAAgxjGCQYAPAC9KgAAAACTCBkJZwE8AOkqAAAAAJMIcQJsATwA8CoAAAAA
kwh9AnEBPAD4KgAAAACWCHoLdwE9AP8qAAAAAIYYxgkGAD0ABysAAAAAkRjMCXwBPQAAAAEAEgkA
AAIAygoAAAMAiAgAAAEAsAQAAAEAsAQAAAEAsAQAAAEAsAQAAAEAsAQAAAEAsAQAAAEAsAQAAAEA
sAQAAAEAsAQAAAEAsAQAAAEAsAQAAAEAsAQAAAEAsAQAAAEAsAQAAAEAsAQAAAEAsAQAAAEAsAQA
AAEAsAQAAAEAsAQAAAEAsAQAAAEAsAQAAAEAsAQAAAEAsAQAAAEAsAQAAAEAsAQAAAEAsAQAAAEA
sAQAAAEAsAQAAAEAsAQAAAEAsAQAAAEAsAQAAAEAsAQAAAEAsAQAAAEAsAQAAAEAsAQAAAEAsAQA
AAEAsAQAAAEAsAQAAAEAsAQAAAEAsAQAAAEAsAQAAAEAsAQAAAEAsAQAAAEAsAQAAAEAsAQAAAEA
sAQAAAEAsAQAAAEAsAQAAAEAsAQAAAEAsAQAAAEAMQsAAAIA0wkAAAMAIwsAAAQAiAgAAAEAuAsA
AAEAuAsAAAEAsAQJAMYJAQARAMYJBgAZAMYJCgApAMYJEAAxAMYJEAA5AMYJEABBAMYJEABJAMYJ
EABRAMYJEABZAMYJEABhAMYJEABpAMYJBgDRAMYJBgDxAMYJFQABAcYJBgDBAJMEBgDBAJ4EBgAJ
AVYLNQBxAMYJEAARAZkHBgDBAPgAPAAZAb4HQgAhAcYJTQB5AMYJBgApAUYFVAB5ADkLWgA5Ac4L
YAAJAV0LZAB5APgKagBJAXQHcABRATwCdwAJAV0LewA5AbgJggCBAMILhwCJAHQHiwDJANAEdwBZ
AaoEkABhAVMAlQBhAXkAmgAMAMYJBgAMAEQBpgAMAKEMrgAMAHQHtACBAEUMuwCZANgCBgChANgB
dwAJAVYLvwCpAMYJxQCpAH0HzwCpAGwHAQBxAcYJEACpAJoMBgCpAGsLBgCpAG4LuwDBAMYJBgDB
AL4A2QDBAN4K4ADJAMYJBgDBALQK5gB5AXQH7ADBAH0M8wCBAU4M+QCZAQwCAAGZAa0MCQHZAMYJ
DwH5AMYJBgAuAAsAnwEuABMAqAEuABsAxwEuACMA0AEuACsA+QEuADMA+QEuADsA+QEuAEMA0AEu
AEsA/wEuAFMA+QEuAFsAFgJDAGMAYALjAGsAYAJBAXsAYAKJBnMAxwGpBnMAxwEbANUAAwABAAYA
MwAHADQACAA2AAAApgGAAQAABgaEAQAANAyAAQAARQeEAQAA3QSIAQAAgAaEAQAA3QiIAQAAxAaE
AQAAAQyMAQAALAeEAQAAYAGMAQAApAWEAQAAvgyMAQAAVQeEAQAAwAGMAQAAFwaEAQAA0AKIAQAA
bQaEAQAA5wSIAQAAkQaEAQAAugCIAQAAZQWEAQAAlAGAAQAA7QWEAQAApgqIAQAAEweEAQAAzgCI
AQAAdAWEAQAA4ACIAQAAjQWEAQAAIgKMAQAAQQaEAQAAzAGIAQAAKgaEAQAA9gSMAQAApwaEAQAA
MgKMAQAAWAaEAQAAbwGMAQAAugWEAQAAsgCMAQAAVgWEAQAA5giMAQAA1AaEAQAAMQmMAQAA6AaE
AQAAhAGMAQAA1gWEAQAAoAmMAQAA/AaEAQAAbACMAQAAHQmQAQAAkQKVAQAAfguaAQEABgADAAEA
BwAFAAEACAAHAAEACQAJAAEACgALAAEACwANAAEADAAPAAEADQARAAEADgATAAEADwAVAAEAEAAX
AAEAEQAZAAEAEgAbAAEAEwAdAAEAFAAfAAEAFQAhAAEAFgAjAAEAFwAlAAEAGAAnAAEAGQApAAEA
GgArAAEAGwAtAAEAHAAvAAEAHQAxAAEAHgAzAAEAHwA1AAEAIAA3AAEAIQA5AAEAIgA7AAEAIwA9
AAEAJAA/AAEAJQBBAAEAJgBDAAEAJwBFAAEAKABHAAEAKQBJAAEAKgBLAAEAKwBNAAEALABPAAEA
LQBRAAEALgBTAAEALwBVAAEAMABXAAEAMQBZAAEAMgBbAAEAMwBdAAEANABfAAEANQBhAAEANgBj
AAEANwBlAAIAQgBnAAIARABpAAIARQBrAAEARgBrAAIARwBtAJ8ABIAAAAEAAAAAAAAAAAAAAAAA
gQAAAAQAAAAAAAAAAAAAABcBIAEAAAAAEAAAAAAAAAAAAAAAIAHYCwAAAAAEAAAAAAAAAAAAAAAX
AewAAAAAABAAAAAAAAAAAAAAACABDwwAAAAABAAAAAAAAAAAAAAAFwGGBwAAAAAQAAAAAAAAAAAA
AAAgAbUIAAAAABAAAAAAAAAAAAAAACABkggAAAAAAAAAAAEAAAAhCgAAAAAAAABJRFRTQ29tcG9u
ZW50TWV0YURhdGExMDAASURUU1ZhcmlhYmxlMTAwAElEVFNWYXJpYWJsZXMxMDAASURUU0V2YWx1
YXRvckNvbnRleHQxMDAAVG9JbnQzMgBEaWN0aW9uYXJ5YDIAZ2V0X2ZpbGVuYW1lMTQwMwBUb0lu
dDY0AFNDX2QwYTE0MzQ1MjgyYzQ2YjZhYjM3N2VlZGQ1YWY5ZjI2ADxNb2R1bGU+AHNldF9JUkMA
c2V0X09UQwBHZXRPdXRwdXRJRABzZXRfUXVhbnRpdHlJblBLRwBzZXRfUXVhbnRpdHlQa0cAU3lz
dGVtLkRhdGEAZ2V0X0NvbXBvbmVudE1ldGFEYXRhAFN5c3RlbS5EYXRhLk9sZURiAG1zY29ybGli
AFN5c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmljAEFkZABNYXJrT3V0cHV0c0ZpbmlzaGVkAHNldF9S
ZWdpc3RlcmVkAHNldF9FbmdsaXNoTmFtZUJyYW5kAHNldF9Pd2VuZXJCcmFuZABzZXRfQ29uc3Vt
ZXJQcmljZQBzZXRfcHJpY2UAZGVmYXVsdEluc3RhbmNlAHNldF9BVENDb2RlAHNldF9HZW5lcmlj
Q29kZQBnZXRfTWVzc2FnZQBEYXRhVGFibGUASURpc3Bvc2FibGUAUnVudGltZVR5cGVIYW5kbGUA
R2V0VHlwZUZyb21IYW5kbGUAc2V0X0dlbmVyaWNOYW1lAHNldF9CcmFuZE5hbWUAZ2V0X0NvbHVt
bk5hbWUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUAVHlwZQBnZXRfQ3VsdHVyZQBz
ZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUASW50ZXJuYWxEYXRhQ29sbGVjdGlvbkJhc2UAQXBw
bGljYXRpb25TZXR0aW5nc0Jhc2UAc2V0X0xpY2Vuc2UARGlzcG9zZQBFZGl0b3JCcm93c2FibGVT
dGF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmli
dXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5
VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3Jr
QXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0
aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9k
dWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRDb21wb25l
bnRFbnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29t
cGF0aWJpbGl0eUF0dHJpYnV0ZQBQcmVFeGVjdXRlAFBvc3RFeGVjdXRlAFZhbHVlAHZhbHVlAFN5
c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAVG9TdHJpbmcAc2V0X21vbnRoAHNldF9iaW9sb2dpY2Fs
AHNldF9FZmZlY3RpdmVNYXRlcmlhbABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU0NfZDBhMTQzNDUy
ODJjNDZiNmFiMzc3ZWVkZDVhZjlmMjYuZGxsAEZpbGwAREJOdWxsAHNldF9JUkNfSXNOdWxsAHNl
dF9PVENfSXNOdWxsAHNldF9RdWFudGl0eUluUEtHX0lzTnVsbABzZXRfUXVhbnRpdHlQa0dfSXNO
dWxsAHNldF9SZWdpc3RlcmVkX0lzTnVsbABzZXRfRW5nbGlzaE5hbWVCcmFuZF9Jc051bGwAc2V0
X093ZW5lckJyYW5kX0lzTnVsbABzZXRfQ29uc3VtZXJQcmljZV9Jc051bGwAc2V0X3ByaWNlX0lz
TnVsbABzZXRfQVRDQ29kZV9Jc051bGwAc2V0X0dlbmVyaWNDb2RlX0lzTnVsbABzZXRfR2VuZXJp
Y05hbWVfSXNOdWxsAHNldF9CcmFuZE5hbWVfSXNOdWxsAHNldF9MaWNlbnNlX0lzTnVsbABzZXRf
bW9udGhfSXNOdWxsAHNldF9iaW9sb2dpY2FsX0lzTnVsbABzZXRfRWZmZWN0aXZlTWF0ZXJpYWxf
SXNOdWxsAHNldF95ZWFyX0lzTnVsbABzZXRfUHJvZHVjZXJfSXNOdWxsAHNldF9TdXBwbGllcl9J
c051bGwAc2V0X0Rpc3RyaWJ1dGVyX0lzTnVsbABzZXRfUXVhbnRpdHlTYWxlc19Jc051bGwAc2V0
X1Byb2R1Y2VJbXBvcnRfSXNOdWxsAHNldF9jb3N0X0lzTnVsbABzZXRfUHJvZHVjZXJDb3VudHJ5
X0lzTnVsbABTZXROdWxsAGdldF9JdGVtAHNldF9JdGVtAFN5c3RlbQByZXNvdXJjZU1hbgBPcGVu
AFNjcmlwdE1haW4AZmlyZUFnYWluAERhdGFDb2x1bW4ARmlyZUluZm9ybWF0aW9uAFN5c3RlbS5D
b25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAERhdGFD
b2x1bW5Db2xsZWN0aW9uAERhdGFSb3dDb2xsZWN0aW9uAE9sZURiQ29ubmVjdGlvbgBJbnZhbGlk
T3BlcmF0aW9uRXhjZXB0aW9uAFN5c3RlbS5EYXRhLkNvbW1vbgBDdWx0dXJlSW5mbwBPdXRwdXRO
YW1lTWFwAE91dHB1dE1hcABNaWNyb3NvZnQuU3FsU2VydmVyLkRUU1J1bnRpbWVXcmFwAE1pY3Jv
c29mdC5TcWxTZXJ2ZXIuRFRTUGlwZWxpbmVXcmFwAHNldF95ZWFyAHNldF9Qcm9kdWNlcgBPdXRw
dXQwQnVmZmVyAFBpcGVsaW5lQnVmZmVyAFNjcmlwdEJ1ZmZlcgBnZXRfUmVzb3VyY2VNYW5hZ2Vy
AHNldF9TdXBwbGllcgBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lLldyYXBwZXIATWlj
cm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUuV3JhcHBlcgBPbGVEYkRhdGFBZGFwdGVyAHNl
dF9EaXN0cmlidXRlcgBJRW51bWVyYXRvcgBHZXRFbnVtZXJhdG9yAC5jdG9yAC5jY3RvcgBPdXRw
dXRJRHMAU3lzdGVtLkRpYWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMA
U3lzdGVtLlJlc291cmNlcwBTQ19kMGExNDM0NTI4MmM0NmI2YWIzNzdlZWRkNWFmOWYyNi5Qcm9w
ZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAU0NfZDBhMTQzNDUyODJj
NDZiNmFiMzc3ZWVkZDVhZjlmMjYuUHJvcGVydGllcwBzZXRfUXVhbnRpdHlTYWxlcwBnZXRfUmVh
ZE9ubHlWYXJpYWJsZXMAQnVmZmVyQ29sdW1uSW5kZXhlcwBHZXRDb2x1bW5JbmRleGVzAFNldHRp
bmdzAGdldF9Db2x1bW5zAFN5c3RlbS5Db2xsZWN0aW9ucwBDb25uZWN0aW9ucwBCdWZmZXJzAEZp
bmlzaE91dHB1dHMAZ2V0X1Jvd3MAQ3JlYXRlTmV3T3V0cHV0Um93cwBDb25jYXQARm9ybWF0AE9i
amVjdABTZXRFbmRPZlJvd3NldABnZXRfRGVmYXVsdABwcm9jZXNzUmVzdWx0AFVzZXJDb21wb25l
bnQAUGFyZW50Q29tcG9uZW50AFNjcmlwdENvbXBvbmVudABnZXRfQ3VycmVudABnZXRfQ291bnQA
TWljcm9zb2Z0LlNxbFNlcnZlci5UeFNjcmlwdABDb252ZXJ0AHNldF9Qcm9kdWNlSW1wb3J0AE1p
Y3Jvc29mdC5TcWxTZXJ2ZXIuUGlwZWxpbmVIb3N0AHNldF9jb3N0AFByaW1lT3V0cHV0AE1vdmVO
ZXh0AEdldFZhbHVlV2l0aENvbnRleHQAU2NyaXB0Q29tcG9uZW50RXZhbENvbnRleHQAZ2V0X0V2
YWx1YXRvckNvbnRleHQARGF0YVJvdwBBZGRSb3cAQ29udGFpbnNLZXkAZ2V0X0Fzc2VtYmx5AHNl
dF9Qcm9kdWNlckNvdW50cnkAAAAAXVAAcgBvAHYAaQBkAGUAcgA9AE0AaQBjAHIAbwBzAG8AZgB0
AC4AQQBDAEUALgBPAEwARQBEAEIALgAxADIALgAwADsARABhAHQAYQAgAFMAbwB1AHIAYwBlAD0A
AGM7AEUAeAB0AGUAbgBkAGUAZAAgAFAAcgBvAHAAZQByAHQAaQBlAHMAPQAiAEUAeABjAGUAbAAg
ADEAMgAuADAAOwBIAEQAUgA9AFkARQBTADsASQBNAEUAWAA9ADEAIgA7AAATQwB1AHMAdABvAG0A
TABvAGcAAE9VAHAAZABhAHQAZQBkACAASQBEACAALAAgAHIAbwB3AHMAIABhAGYAZgBlAGMAdABl
AGQAOgAgAGMAbwBuAG4ALgBPAHAAZQBuACgAKQAAAQAxUwBFAEwARQBDAFQAIAAqACAARgBSAE8A
TQAgAFsARABhAHQAYQBzAGUAdAAkAF0AAFlVAHAAZABhAHQAZQBkACAASQBEACAALAAgAHIAbwB3
AHMAIABhAGYAZgBlAGMAdABlAGQAOgAgAE8AbABlAEQAYgBEAGEAdABhAEEAZABhAHAAdABlAHIA
AE9VAHAAZABhAHQAZQBkACAASQBEACAALAAgAHIAbwB3AHMAIABhAGYAZgBlAGMAdABlAGQAOgAg
AGQAYQAuAEYAaQBsAGwAKABkAHQAKQAAH1IAbwB3AHMAIABDAG8AdQBuAHQAOgAgAHsAMAB9AAAr
UgBvAHcAcwAgAEMAbwB1AG4AdAA6AHsAMAB9AC0ALQA+ACAAewAxAH0AAQ9BBjEGSAYxBi8GzAZG
BgERJwYxBi8GzAYoBkcGNAYqBgELLgYxBi8GJwYvBgEHKgbMBjEGAQtFBjEGLwYnBi8GAQ00BkcG
MQbMBkgGMQYBB0UGRwYxBgEJIgYoBicGRgYBByIGMAYxBgEFLwbMBgEJKAZHBkUGRgYBCycGMwZB
BkYGLwYBCUYAYQBpAGwAABdFAHgAYwBlAHAAdABpAG8AbgA6ACAAAA9TAHUAYwBjAGUAcwBzAACA
m0kAcwBOAHUAbABsACAAcAByAG8AcABlAHIAdAB5ACAAYwBhAG4AbgBvAHQAIABiAGUAIABzAGUA
dAAgAHQAbwAgAEYAYQBsAHMAZQAuACAAQQBzAHMAaQBnAG4AIABhACAAdgBhAGwAdQBlACAAdABv
ACAAdABoAGUAIABjAG8AbAB1AG0AbgAgAGkAbgBzAHQAZQBhAGQALgAAEU8AdQB0AHAAdQB0ACAA
MAAAGWYAaQBsAGUAbgBhAG0AZQAxADQAMAAzAABxUwBDAF8AZAAwAGEAMQA0ADMANAA1ADIAOAAy
AGMANAA2AGIANgBhAGIAMwA3ADcAZQBlAGQAZAA1AGEAZgA5AGYAMgA2AC4AUAByAG8AcABlAHIA
dABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAADx4rrJbSw8R5vB9sVWVZIjAAQgAQEIAyAAAQUg
AQEREQQgAQEOBSABARF1GQcMAhI5Ej0ICBJBEkUOFRJJAg4ICBJNElEGAAMODg4OBSAAEoCNCiAG
AQgODg4IEAIGIAIBDhI5BSABCBI9BSAAEoCZAyAACAUAAg4OHAUgABKApQYgARKAqQgDIAAOBgAD
Dg4cHAQgABJBAyAAHAQgARwIBAYSgK0EAAEIHAQAAQocBhUSSQIOCAcgAgETABMBBSABAhMABiAB
EwETAAMgAAIFAAIODg4JIAMBElkdCBJdBSACAQgcAwcBCAYAAggSXQ4FIAEdCAgFIAASgL0GIAES
gMEcBQAAEoDFBiABHBKAyQgAARKAzRGA0QUgABKA1QcgAgEOEoDVCLd6XFYZNOCJCImEXc2AgMyR
AgYOAgYCAwYSFAMGEhgDBhIMAwYSYQMGEm0DBhJxAwYSIAQgAQEKBCABAQILIAQBCB0IHRJZEl0F
IAEBEmEEAAASbQQAABJxBQABARJxBAAAEiADAAABAygACgMoAAIDKAAIAygADgQIABJtBAgAEnEE
CAASIAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAj
U0NfZDBhMTQzNDUyODJjNDZiNmFiMzc3ZWVkZDVhZjlmMjYAAAUBAAAAABYBABFDb3B5cmlnaHQg
QCAgMjAyNQAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC43AQBUDhRGcmFtZXdvcmtEaXNw
bGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjcEAQAAAAAAALQAAADOyu++AQAAAJEAAABsU3lzdGVt
LlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3Vs
dHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNv
dXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAADgTAAAAAAAAAAA
AAD6TAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA7EwAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBt
c2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABABAAAAAYAACA
AAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAAWGAAAOwDAAAA
AAAAAAAAAOwDNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9BO/+AAABAAAA
AQAAAAAAAAABAAAAAAA/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEAVgBhAHIARgBp
AGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAAAAAAsARMAwAA
AQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAAoAwAAAQAwADAAMAAwADAANABiADAAAAAa
AAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4AeQBOAGEAbQBlAAAA
AAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAQwBfAGQAMABh
ADEANAAzADQANQAyADgAMgBjADQANgBiADYAYQBiADMANwA3AGUAZQBkAGQANQBhAGYAOQBmADIA
NgAAADAACAABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgAwAC4AMAAAAHAAKAAB
AEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8AZAAwAGEAMQA0ADMANAA1ADIAOAAyAGMA
NAA2AGIANgBhAGIAMwA3ADcAZQBlAGQAZAA1AGEAZgA5AGYAMgA2AC4AZABsAGwAAABIABIAAQBM
AGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIAAgADIA
MAAyADUAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAAAAAAAAAAAHgAKAAB
AE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAEMAXwBkADAAYQAxADQAMwA0ADUA
MgA4ADIAYwA0ADYAYgA2AGEAYgAzADcANwBlAGUAZABkADUAYQBmADkAZgAyADYALgBkAGwAbAAA
AGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBDAF8AZAAwAGEAMQA0ADMANAA1ADIA
OAAyAGMANAA2AGIANgBhAGIAMwA3ADcAZQBlAGQAZAA1AGEAZgA5AGYAMgA2AAAANAAIAAEAUABy
AG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAADgACAABAEEAcwBzAGUA
bQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAwAAAAMPQAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_d0a14345282c46b6ab377eedd5af9f26</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::filename1403</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">15</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <outputs>
                <output
                  refId="Package\1403\Script Component.Outputs[Output 0]"
                  hasSideEffects="true"
                  name="Output 0">
                  <outputColumns>
                    <outputColumn
                      refId="Package\1403\Script Component.Outputs[Output 0].Columns[price]"
                      dataType="i8"
                      lineageId="Package\1403\Script Component.Outputs[Output 0].Columns[price]"
                      name="price" />
                    <outputColumn
                      refId="Package\1403\Script Component.Outputs[Output 0].Columns[cost]"
                      dataType="i8"
                      lineageId="Package\1403\Script Component.Outputs[Output 0].Columns[cost]"
                      name="cost" />
                    <outputColumn
                      refId="Package\1403\Script Component.Outputs[Output 0].Columns[month]"
                      dataType="i4"
                      lineageId="Package\1403\Script Component.Outputs[Output 0].Columns[month]"
                      name="month" />
                    <outputColumn
                      refId="Package\1403\Script Component.Outputs[Output 0].Columns[year]"
                      dataType="i4"
                      lineageId="Package\1403\Script Component.Outputs[Output 0].Columns[year]"
                      name="year" />
                    <outputColumn
                      refId="Package\1403\Script Component.Outputs[Output 0].Columns[Produce/Import]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\1403\Script Component.Outputs[Output 0].Columns[Produce/Import]"
                      name="Produce/Import" />
                    <outputColumn
                      refId="Package\1403\Script Component.Outputs[Output 0].Columns[Registered]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\1403\Script Component.Outputs[Output 0].Columns[Registered]"
                      name="Registered" />
                    <outputColumn
                      refId="Package\1403\Script Component.Outputs[Output 0].Columns[ProducerCountry]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\1403\Script Component.Outputs[Output 0].Columns[ProducerCountry]"
                      name="ProducerCountry" />
                    <outputColumn
                      refId="Package\1403\Script Component.Outputs[Output 0].Columns[ATCCode]"
                      dataType="wstr"
                      length="20"
                      lineageId="Package\1403\Script Component.Outputs[Output 0].Columns[ATCCode]"
                      name="ATCCode" />
                    <outputColumn
                      refId="Package\1403\Script Component.Outputs[Output 0].Columns[License]"
                      dataType="i4"
                      lineageId="Package\1403\Script Component.Outputs[Output 0].Columns[License]"
                      name="License" />
                    <outputColumn
                      refId="Package\1403\Script Component.Outputs[Output 0].Columns[biological]"
                      dataType="i4"
                      lineageId="Package\1403\Script Component.Outputs[Output 0].Columns[biological]"
                      name="biological" />
                    <outputColumn
                      refId="Package\1403\Script Component.Outputs[Output 0].Columns[OTC]"
                      dataType="i4"
                      lineageId="Package\1403\Script Component.Outputs[Output 0].Columns[OTC]"
                      name="OTC" />
                    <outputColumn
                      refId="Package\1403\Script Component.Outputs[Output 0].Columns[ConsumerPrice]"
                      dataType="i8"
                      lineageId="Package\1403\Script Component.Outputs[Output 0].Columns[ConsumerPrice]"
                      name="ConsumerPrice" />
                    <outputColumn
                      refId="Package\1403\Script Component.Outputs[Output 0].Columns[QuantitySales]"
                      dataType="i4"
                      lineageId="Package\1403\Script Component.Outputs[Output 0].Columns[QuantitySales]"
                      name="QuantitySales" />
                    <outputColumn
                      refId="Package\1403\Script Component.Outputs[Output 0].Columns[QuantityInPKG]"
                      dataType="i4"
                      lineageId="Package\1403\Script Component.Outputs[Output 0].Columns[QuantityInPKG]"
                      name="QuantityInPKG" />
                    <outputColumn
                      refId="Package\1403\Script Component.Outputs[Output 0].Columns[QuantityPkG]"
                      dataType="i4"
                      lineageId="Package\1403\Script Component.Outputs[Output 0].Columns[QuantityPkG]"
                      name="QuantityPkG" />
                    <outputColumn
                      refId="Package\1403\Script Component.Outputs[Output 0].Columns[GenericName]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\1403\Script Component.Outputs[Output 0].Columns[GenericName]"
                      name="GenericName" />
                    <outputColumn
                      refId="Package\1403\Script Component.Outputs[Output 0].Columns[GenericCode]"
                      dataType="i4"
                      lineageId="Package\1403\Script Component.Outputs[Output 0].Columns[GenericCode]"
                      name="GenericCode" />
                    <outputColumn
                      refId="Package\1403\Script Component.Outputs[Output 0].Columns[EffectiveMaterial]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\1403\Script Component.Outputs[Output 0].Columns[EffectiveMaterial]"
                      name="EffectiveMaterial" />
                    <outputColumn
                      refId="Package\1403\Script Component.Outputs[Output 0].Columns[BrandName]"
                      dataType="wstr"
                      length="250"
                      lineageId="Package\1403\Script Component.Outputs[Output 0].Columns[BrandName]"
                      name="BrandName" />
                    <outputColumn
                      refId="Package\1403\Script Component.Outputs[Output 0].Columns[EnglishNameBrand]"
                      dataType="wstr"
                      length="250"
                      lineageId="Package\1403\Script Component.Outputs[Output 0].Columns[EnglishNameBrand]"
                      name="EnglishNameBrand" />
                    <outputColumn
                      refId="Package\1403\Script Component.Outputs[Output 0].Columns[IRC]"
                      dataType="wstr"
                      length="250"
                      lineageId="Package\1403\Script Component.Outputs[Output 0].Columns[IRC]"
                      name="IRC" />
                    <outputColumn
                      refId="Package\1403\Script Component.Outputs[Output 0].Columns[Producer]"
                      dataType="wstr"
                      length="250"
                      lineageId="Package\1403\Script Component.Outputs[Output 0].Columns[Producer]"
                      name="Producer" />
                    <outputColumn
                      refId="Package\1403\Script Component.Outputs[Output 0].Columns[Supplier]"
                      dataType="wstr"
                      length="250"
                      lineageId="Package\1403\Script Component.Outputs[Output 0].Columns[Supplier]"
                      name="Supplier" />
                    <outputColumn
                      refId="Package\1403\Script Component.Outputs[Output 0].Columns[OwenerBrand]"
                      dataType="wstr"
                      length="250"
                      lineageId="Package\1403\Script Component.Outputs[Output 0].Columns[OwenerBrand]"
                      name="OwenerBrand" />
                    <outputColumn
                      refId="Package\1403\Script Component.Outputs[Output 0].Columns[Distributer]"
                      dataType="wstr"
                      length="250"
                      lineageId="Package\1403\Script Component.Outputs[Output 0].Columns[Distributer]"
                      name="Distributer" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\1403.Paths[Output 0]"
              endId="Package\1403\OLE DB Destination.Inputs[OLE DB Destination Input]"
              name="Output 0"
              startId="Package\1403\Script Component.Outputs[Output 0]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\1404"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{a62e691b-8c6e-4455-866f-aedd321fb030}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="1404"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\1404\OLE DB Destination"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="OLE DB Destination"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[amarDistribute]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\1404\OLE DB Destination.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[192.168.10.10.DW]"
                  connectionManagerRefId="Package.ConnectionManagers[192.168.10.10.DW]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\1404\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\1404\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[price]"
                      cachedDataType="i8"
                      cachedName="price"
                      externalMetadataColumnId="Package\1404\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[price]"
                      lineageId="Package\1404\Script Component.Outputs[Output 0].Columns[price]" />
                    <inputColumn
                      refId="Package\1404\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[cost]"
                      cachedDataType="i8"
                      cachedName="cost"
                      externalMetadataColumnId="Package\1404\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[cost]"
                      lineageId="Package\1404\Script Component.Outputs[Output 0].Columns[cost]" />
                    <inputColumn
                      refId="Package\1404\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[month]"
                      cachedDataType="i4"
                      cachedName="month"
                      externalMetadataColumnId="Package\1404\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[month]"
                      lineageId="Package\1404\Script Component.Outputs[Output 0].Columns[month]" />
                    <inputColumn
                      refId="Package\1404\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[year]"
                      cachedDataType="i4"
                      cachedName="year"
                      externalMetadataColumnId="Package\1404\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[year]"
                      lineageId="Package\1404\Script Component.Outputs[Output 0].Columns[year]" />
                    <inputColumn
                      refId="Package\1404\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Produce/Import]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Produce/Import"
                      externalMetadataColumnId="Package\1404\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Produce/Import]"
                      lineageId="Package\1404\Script Component.Outputs[Output 0].Columns[Produce/Import]" />
                    <inputColumn
                      refId="Package\1404\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Registered]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Registered"
                      externalMetadataColumnId="Package\1404\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Registered]"
                      lineageId="Package\1404\Script Component.Outputs[Output 0].Columns[Registered]" />
                    <inputColumn
                      refId="Package\1404\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[ProducerCountry]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="ProducerCountry"
                      externalMetadataColumnId="Package\1404\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ProducerCountry]"
                      lineageId="Package\1404\Script Component.Outputs[Output 0].Columns[ProducerCountry]" />
                    <inputColumn
                      refId="Package\1404\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[ATCCode]"
                      cachedDataType="wstr"
                      cachedLength="20"
                      cachedName="ATCCode"
                      externalMetadataColumnId="Package\1404\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ATCCode]"
                      lineageId="Package\1404\Script Component.Outputs[Output 0].Columns[ATCCode]" />
                    <inputColumn
                      refId="Package\1404\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[License]"
                      cachedDataType="i4"
                      cachedName="License"
                      externalMetadataColumnId="Package\1404\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[License]"
                      lineageId="Package\1404\Script Component.Outputs[Output 0].Columns[License]" />
                    <inputColumn
                      refId="Package\1404\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[biological]"
                      cachedDataType="i4"
                      cachedName="biological"
                      externalMetadataColumnId="Package\1404\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[biological]"
                      lineageId="Package\1404\Script Component.Outputs[Output 0].Columns[biological]" />
                    <inputColumn
                      refId="Package\1404\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[OTC]"
                      cachedDataType="i4"
                      cachedName="OTC"
                      externalMetadataColumnId="Package\1404\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[OTC]"
                      lineageId="Package\1404\Script Component.Outputs[Output 0].Columns[OTC]" />
                    <inputColumn
                      refId="Package\1404\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[ConsumerPrice]"
                      cachedDataType="i8"
                      cachedName="ConsumerPrice"
                      externalMetadataColumnId="Package\1404\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ConsumerPrice]"
                      lineageId="Package\1404\Script Component.Outputs[Output 0].Columns[ConsumerPrice]" />
                    <inputColumn
                      refId="Package\1404\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[QuantitySales]"
                      cachedDataType="i4"
                      cachedName="QuantitySales"
                      externalMetadataColumnId="Package\1404\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[QuantitySales]"
                      lineageId="Package\1404\Script Component.Outputs[Output 0].Columns[QuantitySales]" />
                    <inputColumn
                      refId="Package\1404\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[QuantityInPKG]"
                      cachedDataType="i4"
                      cachedName="QuantityInPKG"
                      externalMetadataColumnId="Package\1404\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[QuantityInPKG]"
                      lineageId="Package\1404\Script Component.Outputs[Output 0].Columns[QuantityInPKG]" />
                    <inputColumn
                      refId="Package\1404\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[QuantityPkG]"
                      cachedDataType="i4"
                      cachedName="QuantityPkG"
                      externalMetadataColumnId="Package\1404\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[QuantityPkG]"
                      lineageId="Package\1404\Script Component.Outputs[Output 0].Columns[QuantityPkG]" />
                    <inputColumn
                      refId="Package\1404\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[GenericName]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="GenericName"
                      externalMetadataColumnId="Package\1404\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[GenericName]"
                      lineageId="Package\1404\Script Component.Outputs[Output 0].Columns[GenericName]" />
                    <inputColumn
                      refId="Package\1404\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[GenericCode]"
                      cachedDataType="i4"
                      cachedName="GenericCode"
                      externalMetadataColumnId="Package\1404\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[GenericCode]"
                      lineageId="Package\1404\Script Component.Outputs[Output 0].Columns[GenericCode]" />
                    <inputColumn
                      refId="Package\1404\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[EffectiveMaterial]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="EffectiveMaterial"
                      externalMetadataColumnId="Package\1404\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[EffectiveMaterial]"
                      lineageId="Package\1404\Script Component.Outputs[Output 0].Columns[EffectiveMaterial]" />
                    <inputColumn
                      refId="Package\1404\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[BrandName]"
                      cachedDataType="wstr"
                      cachedLength="250"
                      cachedName="BrandName"
                      externalMetadataColumnId="Package\1404\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[BrandName]"
                      lineageId="Package\1404\Script Component.Outputs[Output 0].Columns[BrandName]" />
                    <inputColumn
                      refId="Package\1404\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[EnglishNameBrand]"
                      cachedDataType="wstr"
                      cachedLength="250"
                      cachedName="EnglishNameBrand"
                      externalMetadataColumnId="Package\1404\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[EnglishNameBrand]"
                      lineageId="Package\1404\Script Component.Outputs[Output 0].Columns[EnglishNameBrand]" />
                    <inputColumn
                      refId="Package\1404\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[IRC]"
                      cachedDataType="wstr"
                      cachedLength="250"
                      cachedName="IRC"
                      externalMetadataColumnId="Package\1404\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[IRC]"
                      lineageId="Package\1404\Script Component.Outputs[Output 0].Columns[IRC]" />
                    <inputColumn
                      refId="Package\1404\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Producer]"
                      cachedDataType="wstr"
                      cachedLength="250"
                      cachedName="Producer"
                      externalMetadataColumnId="Package\1404\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Producer]"
                      lineageId="Package\1404\Script Component.Outputs[Output 0].Columns[Producer]" />
                    <inputColumn
                      refId="Package\1404\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Supplier]"
                      cachedDataType="wstr"
                      cachedLength="250"
                      cachedName="Supplier"
                      externalMetadataColumnId="Package\1404\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Supplier]"
                      lineageId="Package\1404\Script Component.Outputs[Output 0].Columns[Supplier]" />
                    <inputColumn
                      refId="Package\1404\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[OwenerBrand]"
                      cachedDataType="wstr"
                      cachedLength="250"
                      cachedName="OwenerBrand"
                      externalMetadataColumnId="Package\1404\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[OwenerBrand]"
                      lineageId="Package\1404\Script Component.Outputs[Output 0].Columns[OwenerBrand]" />
                    <inputColumn
                      refId="Package\1404\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Distributer]"
                      cachedDataType="wstr"
                      cachedLength="250"
                      cachedName="Distributer"
                      externalMetadataColumnId="Package\1404\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Distributer]"
                      lineageId="Package\1404\Script Component.Outputs[Output 0].Columns[Distributer]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\1404\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Distributer]"
                      dataType="wstr"
                      length="250"
                      name="Distributer" />
                    <externalMetadataColumn
                      refId="Package\1404\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[OwenerBrand]"
                      dataType="wstr"
                      length="250"
                      name="OwenerBrand" />
                    <externalMetadataColumn
                      refId="Package\1404\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Supplier]"
                      dataType="wstr"
                      length="250"
                      name="Supplier" />
                    <externalMetadataColumn
                      refId="Package\1404\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Producer]"
                      dataType="wstr"
                      length="250"
                      name="Producer" />
                    <externalMetadataColumn
                      refId="Package\1404\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[IRC]"
                      dataType="wstr"
                      length="250"
                      name="IRC" />
                    <externalMetadataColumn
                      refId="Package\1404\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[EnglishNameBrand]"
                      dataType="wstr"
                      length="250"
                      name="EnglishNameBrand" />
                    <externalMetadataColumn
                      refId="Package\1404\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[BrandName]"
                      dataType="wstr"
                      length="250"
                      name="BrandName" />
                    <externalMetadataColumn
                      refId="Package\1404\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[EffectiveMaterial]"
                      dataType="wstr"
                      length="250"
                      name="EffectiveMaterial" />
                    <externalMetadataColumn
                      refId="Package\1404\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[GenericCode]"
                      dataType="wstr"
                      length="15"
                      name="GenericCode" />
                    <externalMetadataColumn
                      refId="Package\1404\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[GenericName]"
                      dataType="wstr"
                      length="250"
                      name="GenericName" />
                    <externalMetadataColumn
                      refId="Package\1404\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[QuantityPkG]"
                      dataType="i8"
                      name="QuantityPkG" />
                    <externalMetadataColumn
                      refId="Package\1404\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[QuantityInPKG]"
                      dataType="i4"
                      name="QuantityInPKG" />
                    <externalMetadataColumn
                      refId="Package\1404\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[QuantitySales]"
                      dataType="i8"
                      name="QuantitySales" />
                    <externalMetadataColumn
                      refId="Package\1404\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ConsumerPrice]"
                      dataType="i8"
                      name="ConsumerPrice" />
                    <externalMetadataColumn
                      refId="Package\1404\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[OTC]"
                      dataType="wstr"
                      length="20"
                      name="OTC" />
                    <externalMetadataColumn
                      refId="Package\1404\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[biological]"
                      dataType="wstr"
                      length="20"
                      name="biological" />
                    <externalMetadataColumn
                      refId="Package\1404\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[License]"
                      dataType="bool"
                      name="License" />
                    <externalMetadataColumn
                      refId="Package\1404\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ATCCode]"
                      dataType="wstr"
                      length="20"
                      name="ATCCode" />
                    <externalMetadataColumn
                      refId="Package\1404\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ProducerCountry]"
                      dataType="wstr"
                      length="100"
                      name="ProducerCountry" />
                    <externalMetadataColumn
                      refId="Package\1404\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Registered]"
                      dataType="wstr"
                      length="10"
                      name="Registered" />
                    <externalMetadataColumn
                      refId="Package\1404\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Produce/Import]"
                      dataType="wstr"
                      length="10"
                      name="Produce/Import" />
                    <externalMetadataColumn
                      refId="Package\1404\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[year]"
                      dataType="i4"
                      name="year" />
                    <externalMetadataColumn
                      refId="Package\1404\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[month]"
                      dataType="i4"
                      name="month" />
                    <externalMetadataColumn
                      refId="Package\1404\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[cost]"
                      dataType="i8"
                      name="cost" />
                    <externalMetadataColumn
                      refId="Package\1404\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[price]"
                      dataType="i8"
                      name="price" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\1404\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\1404\OLE DB Destination.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\1404\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\1404\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\1404\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\1404\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\1404\Script Component"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;13"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Script Component"
              version="13">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_d0a14345282c46b6ab377eedd5af9f26")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_d0a14345282c46b6ab377eedd5af9f26")]
[assembly: AssemblyCopyright("Copyright @  2025")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help: Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component.
 */
#endregion

#region Namespaces
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using System;
using System.Data;
using System.Data.OleDb;
using System.Windows.Forms;
#endregion

/// <summary>
/// This is the class to which to add your code. Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    string processResult = "Success";
    bool fireAgain = false;
    #region Help: Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable. To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     *
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     * DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     * Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help: Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component. See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor. To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     *
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     * object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     * SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     * object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     * string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     * Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help: Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     * ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     * ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     * ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        //Variab/*l*/es.Result1 = processResult; // فقط اینجا میشه نوشت
    }



    public override void CreateNewOutputRows()
    {


        string connStr = "Provider=Microsoft.ACE.OLEDB.12.0;" +
                 $"Data Source={Variables.filename};" +
                 "Extended Properties=\"Excel 12.0;HDR=YES;IMEX=1\";";

        bool fireAgain = false;

        using (OleDbConnection conn = new OleDbConnection(connStr))
        {
            //ComponentMetaData.FireInformation(0, "CustomLog", $"Updated ID , rows affected: {Variables.filname1}", "", 0, ref fireAgain);
            try
            {
                conn.Open();
                ComponentMetaData.FireInformation(0, "CustomLog", $"Updated ID , rows affected: conn.Open()", "", 0, ref fireAgain);

                OleDbDataAdapter da = new OleDbDataAdapter("SELECT * FROM [Dataset$]", conn);
                ComponentMetaData.FireInformation(0, "CustomLog", $"Updated ID , rows affected: OleDbDataAdapter", "", 0, ref fireAgain);

                DataTable dt = new DataTable();
                da.Fill(dt);
                ComponentMetaData.FireInformation(0, "CustomLog", $"Updated ID , rows affected: da.Fill(dt)", "", 0, ref fireAgain);
                int rowCount = dt.Rows.Count;
                ComponentMetaData.FireInformation(0, "CustomLog", $"Rows Count: {rowCount}", "", 0, ref fireAgain);





                foreach (DataRow row in dt.Rows)
                {
                    Output0Buffer.AddRow();
                    Output0Buffer.Distributer = row[0]?.ToString();
                    
                    Output0Buffer.OwenerBrand = row[1]?.ToString();
                    Output0Buffer.Supplier = row[2]?.ToString();
                    Output0Buffer.Producer = row[3].ToString();
                    Output0Buffer.IRC = row[4].ToString();
                    Output0Buffer.EnglishNameBrand = row[5].ToString();
                    Output0Buffer.BrandName = row[6].ToString();
                    Output0Buffer.EffectiveMaterial = row[7].ToString();
                    Output0Buffer.GenericCode = row[8] == DBNull.Value ? 0 : Convert.ToInt32(row[8]);
                    Output0Buffer.GenericName = row[9].ToString();
                    Output0Buffer.month = row[10] == DBNull.Value ? 0 : Convert.ToInt32(row[10]);
                    Output0Buffer.QuantityPkG = row[11] == DBNull.Value ? 0 : Convert.ToInt32(row[11]);
                    Output0Buffer.QuantityInPKG = row[12] == DBNull.Value ? 0 : Convert.ToInt32(row[12]);
                    Output0Buffer.QuantitySales = row[13] == DBNull.Value ? 0 : Convert.ToInt32(row[13]);
                    Output0Buffer.cost = row[14] == DBNull.Value ? 0 : Convert.ToInt64(row[14]);
                    Output0Buffer.price = row[15] == DBNull.Value ? 0 : Convert.ToInt64(row[15]);
                    Output0Buffer.ConsumerPrice = row[16] == DBNull.Value ? 0 : Convert.ToInt64(row[16]);
                    Output0Buffer.OTC = row[17] == DBNull.Value ? 0 : Convert.ToInt32(row[17]);
                    Output0Buffer.biological = row[18] == DBNull.Value ? 0 : Convert.ToInt32(row[18]);
                    Output0Buffer.ATCCode = row[19].ToString();
                    Output0Buffer.ProducerCountry = row[20].ToString();
                    Output0Buffer.Registered = row[21].ToString();
                    Output0Buffer.ProduceImport = row[22].ToString();
                    Output0Buffer.year = 1404;
                }
            }
            catch (Exception ex)
            {
                processResult = "Fail"; // فقط مقدار local تغییر می‌کنه
                ComponentMetaData.FireInformation(0, "CustomLog", $"Exception: {ex.Message}", "", 0, ref fireAgain);
            }



      
        }
    }

    /* Add rows by calling the AddRow method on the member variable named "<Output Name>Buffer". 
       For example, call MyOutputBuffer.AddRow() if your output was named "MyOutput". */
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Output0Buffer: ScriptBuffer

{
    public Output0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Int64 price
    {
        set
        {
            this[0] = value;
        }
    }
    public bool price_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int64 cost
    {
        set
        {
            this[1] = value;
        }
    }
    public bool cost_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 month
    {
        set
        {
            this[2] = value;
        }
    }
    public bool month_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 year
    {
        set
        {
            this[3] = value;
        }
    }
    public bool year_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ProduceImport
    {
        set
        {
            this[4] = value;
        }
    }
    public bool ProduceImport_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Registered
    {
        set
        {
            this[5] = value;
        }
    }
    public bool Registered_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ProducerCountry
    {
        set
        {
            this[6] = value;
        }
    }
    public bool ProducerCountry_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ATCCode
    {
        set
        {
            this[7] = value;
        }
    }
    public bool ATCCode_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 License
    {
        set
        {
            this[8] = value;
        }
    }
    public bool License_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(8);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 biological
    {
        set
        {
            this[9] = value;
        }
    }
    public bool biological_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(9);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 OTC
    {
        set
        {
            this[10] = value;
        }
    }
    public bool OTC_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(10);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int64 ConsumerPrice
    {
        set
        {
            this[11] = value;
        }
    }
    public bool ConsumerPrice_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(11);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 QuantitySales
    {
        set
        {
            this[12] = value;
        }
    }
    public bool QuantitySales_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(12);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 QuantityInPKG
    {
        set
        {
            this[13] = value;
        }
    }
    public bool QuantityInPKG_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(13);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 QuantityPkG
    {
        set
        {
            this[14] = value;
        }
    }
    public bool QuantityPkG_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(14);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String GenericName
    {
        set
        {
            this[15] = value;
        }
    }
    public bool GenericName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(15);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 GenericCode
    {
        set
        {
            this[16] = value;
        }
    }
    public bool GenericCode_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(16);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String EffectiveMaterial
    {
        set
        {
            this[17] = value;
        }
    }
    public bool EffectiveMaterial_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(17);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String BrandName
    {
        set
        {
            this[18] = value;
        }
    }
    public bool BrandName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(18);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String EnglishNameBrand
    {
        set
        {
            this[19] = value;
        }
    }
    public bool EnglishNameBrand_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(19);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String IRC
    {
        set
        {
            this[20] = value;
        }
    }
    public bool IRC_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(20);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Producer
    {
        set
        {
            this[21] = value;
        }
    }
    public bool Producer_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(21);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Supplier
    {
        set
        {
            this[22] = value;
        }
    }
    public bool Supplier_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(22);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String OwenerBrand
    {
        set
        {
            this[23] = value;
        }
    }
    public bool OwenerBrand_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(23);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Distributer
    {
        set
        {
            this[24] = value;
        }
    }
    public bool Distributer_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(24);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_d0a14345282c46b6ab377eedd5af9f26.Properties.Settings.get_Default():SC_d0a14345282c46b6ab377eedd5af9f26.Properties.Sett" +
    "ings")]

namespace SC_d0a14345282c46b6ab377eedd5af9f26.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output0Buffer Output0Buffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output0Buffer)
        {
            Output0Buffer.SetEndOfRowset();
            Output0Buffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 0"))
            {
                Output0Buffer = new Output0Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String filename
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["filename"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_d0a14345282c46b6ab377eedd5af9f26</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_d0a14345282c46b6ab377eedd5af9f26</msb:DisplayName>
    <msb:ProjectId>{31498CFF-3679-4FB1-AF6B-E4FB941D73EE}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_d0a14345282c46b6ab377eedd5af9f26.csproj" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_d0a14345282c46b6ab377eedd5af9f26.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{15527E59-F829-4CEC-A450-B6E96C25074F}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_d0a14345282c46b6ab377eedd5af9f26</RootNamespace>
    <AssemblyName>SC_d0a14345282c46b6ab377eedd5af9f26</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_d0a14345282c46b6ab377eedd5af9f26.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_d0a14345282c46b6ab377eedd5af9f26.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_d0a14345282c46b6ab377eedd5af9f26.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_d0a14345282c46b6ab377eedd5af9f26.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_d0a14345282c46b6ab377eedd5af9f26.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_d0a14345282c46b6ab377eedd5af9f26.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[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
oACgALkAfwqnAMEAZwkGALkAVQqtAGEBNQezALkAEgy6AGkB4wvAAIEBzwHHAIEBNgzQANEAZwnW
APEAZwkGAC4ACwBmAS4AEwBvAS4AGwCOAS4AIwCXAS4AKwDAAS4AMwDAAS4AOwDAAS4AQwCXAS4A
SwDGAS4AUwDAAS4AWwDdAUMAYwAnAuMAawAnAkEBewAnAokGcwCOAakGcwCOARsAnAADAAEABgAz
AAcANAAIADYAAABpAUcBAADHBUsBAADJC0cBAAAGB0sBAACeBE8BAABBBksBAAB+CE8BAACFBksB
AACWC1MBAADtBksBAAAjAVMBAABlBUsBAABHDFMBAAAWB0sBAACDAVMBAADYBUsBAACRAk8BAAAu
BksBAACoBE8BAABSBksBAACcAE8BAAAmBUsBAABXAUcBAACuBUsBAABHCk8BAADUBksBAACwAE8B
AAA1BUsBAADCAE8BAABOBUsBAADlAVMBAAACBksBAACPAU8BAADrBUsBAAC3BFMBAABoBksBAAD1
AVMBAAAZBksBAAAyAVMBAAB7BUsBAACUAFMBAAAXBUsBAACHCFMBAACVBksBAADSCFMBAACpBksB
AABHAVMBAACXBUsBAABBCVMBAAC9BksBAAADAlMBAAC+CFcBAABSAlwBAAATC2EBAQAGAAMAAQAH
AAUAAQAIAAcAAQAJAAkAAQAKAAsAAQALAA0AAQAMAA8AAQANABEAAQAOABMAAQAPABUAAQAQABcA
AQARABkAAQASABsAAQATAB0AAQAUAB8AAQAVACEAAQAWACMAAQAXACUAAQAYACcAAQAZACkAAQAa
ACsAAQAbAC0AAQAcAC8AAQAdADEAAQAeADMAAQAfADUAAQAgADcAAQAhADkAAQAiADsAAQAjAD0A
AQAkAD8AAQAlAEEAAQAmAEMAAQAnAEUAAQAoAEcAAQApAEkAAQAqAEsAAQArAE0AAQAsAE8AAQAt
AFEAAQAuAFMAAQAvAFUAAQAwAFcAAQAxAFkAAQAyAFsAAQAzAF0AAQA0AF8AAQA1AGEAAQA2AGMA
AQA3AGUAAgBCAGcAAgBEAGkAAgBFAGsAAQBGAGsAAgBHAG0ABIAAAAEAAAAAAAAAAAAAAAAAYwAA
AAQAAAAAAAAAAAAAAN4AAgEAAAAAEAAAAAAAAAAAAAAA5wBtCwAAAAAEAAAAAAAAAAAAAADeAM4A
AAAAABAAAAAAAAAAAAAAAOcApAsAAAAABAAAAAAAAAAAAAAA3gBHBwAAAAAQAAAAAAAAAAAAAADn
AFYIAAAAABAAAAAAAAAAAAAAAOcAMwgAAAAAAAAAAAEAAADCCQAAAAAAAABJRFRTQ29tcG9uZW50
TWV0YURhdGExMDAASURUU1ZhcmlhYmxlMTAwAElEVFNWYXJpYWJsZXMxMDAASURUU0V2YWx1YXRv
ckNvbnRleHQxMDAAVG9JbnQzMgBUb0ludDY0AFNDX2QwYTE0MzQ1MjgyYzQ2YjZhYjM3N2VlZGQ1
YWY5ZjI2ADxNb2R1bGU+AHNldF9JUkMAc2V0X09UQwBHZXRPdXRwdXRJRABzZXRfUXVhbnRpdHlJ
blBLRwBzZXRfUXVhbnRpdHlQa0cAU3lzdGVtLkRhdGEAZ2V0X0NvbXBvbmVudE1ldGFEYXRhAFN5
c3RlbS5EYXRhLk9sZURiAG1zY29ybGliAE1hcmtPdXRwdXRzRmluaXNoZWQAc2V0X1JlZ2lzdGVy
ZWQAc2V0X0VuZ2xpc2hOYW1lQnJhbmQAc2V0X093ZW5lckJyYW5kAHNldF9Db25zdW1lclByaWNl
AHNldF9wcmljZQBkZWZhdWx0SW5zdGFuY2UAc2V0X0FUQ0NvZGUAc2V0X0dlbmVyaWNDb2RlAGdl
dF9NZXNzYWdlAERhdGFUYWJsZQBJRGlzcG9zYWJsZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBl
RnJvbUhhbmRsZQBzZXRfR2VuZXJpY05hbWUAc2V0X0JyYW5kTmFtZQBnZXRfZmlsZW5hbWUATWlj
cm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUAVHlwZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVy
ZQByZXNvdXJjZUN1bHR1cmUASW50ZXJuYWxEYXRhQ29sbGVjdGlvbkJhc2UAQXBwbGljYXRpb25T
ZXR0aW5nc0Jhc2UAc2V0X0xpY2Vuc2UARGlzcG9zZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21w
aWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVn
Z2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRy
aWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRl
AEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmli
dXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmli
dXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRDb21wb25lbnRFbnRyeVBv
aW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0
eUF0dHJpYnV0ZQBQcmVFeGVjdXRlAFBvc3RFeGVjdXRlAFZhbHVlAHZhbHVlAFN5c3RlbS5SdW50
aW1lLlZlcnNpb25pbmcAVG9TdHJpbmcAc2V0X21vbnRoAHNldF9iaW9sb2dpY2FsAHNldF9FZmZl
Y3RpdmVNYXRlcmlhbABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU0NfZDBhMTQzNDUyODJjNDZiNmFi
Mzc3ZWVkZDVhZjlmMjYuZGxsAEZpbGwAREJOdWxsAHNldF9JUkNfSXNOdWxsAHNldF9PVENfSXNO
dWxsAHNldF9RdWFudGl0eUluUEtHX0lzTnVsbABzZXRfUXVhbnRpdHlQa0dfSXNOdWxsAHNldF9S
ZWdpc3RlcmVkX0lzTnVsbABzZXRfRW5nbGlzaE5hbWVCcmFuZF9Jc051bGwAc2V0X093ZW5lckJy
YW5kX0lzTnVsbABzZXRfQ29uc3VtZXJQcmljZV9Jc051bGwAc2V0X3ByaWNlX0lzTnVsbABzZXRf
QVRDQ29kZV9Jc051bGwAc2V0X0dlbmVyaWNDb2RlX0lzTnVsbABzZXRfR2VuZXJpY05hbWVfSXNO
dWxsAHNldF9CcmFuZE5hbWVfSXNOdWxsAHNldF9MaWNlbnNlX0lzTnVsbABzZXRfbW9udGhfSXNO
dWxsAHNldF9iaW9sb2dpY2FsX0lzTnVsbABzZXRfRWZmZWN0aXZlTWF0ZXJpYWxfSXNOdWxsAHNl
dF95ZWFyX0lzTnVsbABzZXRfUHJvZHVjZXJfSXNOdWxsAHNldF9TdXBwbGllcl9Jc051bGwAc2V0
X0Rpc3RyaWJ1dGVyX0lzTnVsbABzZXRfUXVhbnRpdHlTYWxlc19Jc051bGwAc2V0X1Byb2R1Y2VJ
bXBvcnRfSXNOdWxsAHNldF9jb3N0X0lzTnVsbABzZXRfUHJvZHVjZXJDb3VudHJ5X0lzTnVsbABT
ZXROdWxsAGdldF9JdGVtAHNldF9JdGVtAFN5c3RlbQByZXNvdXJjZU1hbgBPcGVuAFNjcmlwdE1h
aW4AZmlyZUFnYWluAEZpcmVJbmZvcm1hdGlvbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0u
R2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBEYXRhUm93Q29sbGVjdGlvbgBPbGVEYkNv
bm5lY3Rpb24ASW52YWxpZE9wZXJhdGlvbkV4Y2VwdGlvbgBTeXN0ZW0uRGF0YS5Db21tb24AQ3Vs
dHVyZUluZm8AT3V0cHV0TmFtZU1hcABPdXRwdXRNYXAATWljcm9zb2Z0LlNxbFNlcnZlci5EVFNS
dW50aW1lV3JhcABNaWNyb3NvZnQuU3FsU2VydmVyLkRUU1BpcGVsaW5lV3JhcABzZXRfeWVhcgBz
ZXRfUHJvZHVjZXIAT3V0cHV0MEJ1ZmZlcgBQaXBlbGluZUJ1ZmZlcgBTY3JpcHRCdWZmZXIAZ2V0
X1Jlc291cmNlTWFuYWdlcgBzZXRfU3VwcGxpZXIATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVu
dGltZS5XcmFwcGVyAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lLldyYXBwZXIAT2xl
RGJEYXRhQWRhcHRlcgBzZXRfRGlzdHJpYnV0ZXIASUVudW1lcmF0b3IAR2V0RW51bWVyYXRvcgAu
Y3RvcgAuY2N0b3IAT3V0cHV0SURzAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5D
b21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU0NfZDBhMTQzNDUyODJjNDZiNmFiMzc3
ZWVkZDVhZjlmMjYuUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVz
AFNDX2QwYTE0MzQ1MjgyYzQ2YjZhYjM3N2VlZGQ1YWY5ZjI2LlByb3BlcnRpZXMAc2V0X1F1YW50
aXR5U2FsZXMAZ2V0X1JlYWRPbmx5VmFyaWFibGVzAEJ1ZmZlckNvbHVtbkluZGV4ZXMAR2V0Q29s
dW1uSW5kZXhlcwBTZXR0aW5ncwBTeXN0ZW0uQ29sbGVjdGlvbnMAQ29ubmVjdGlvbnMAQnVmZmVy
cwBGaW5pc2hPdXRwdXRzAGdldF9Sb3dzAENyZWF0ZU5ld091dHB1dFJvd3MAQ29uY2F0AEZvcm1h
dABPYmplY3QAU2V0RW5kT2ZSb3dzZXQAZ2V0X0RlZmF1bHQAcHJvY2Vzc1Jlc3VsdABVc2VyQ29t
cG9uZW50AFBhcmVudENvbXBvbmVudABTY3JpcHRDb21wb25lbnQAZ2V0X0N1cnJlbnQAZ2V0X0Nv
dW50AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuVHhTY3JpcHQAQ29udmVydABzZXRfUHJvZHVjZUltcG9y
dABNaWNyb3NvZnQuU3FsU2VydmVyLlBpcGVsaW5lSG9zdABzZXRfY29zdABQcmltZU91dHB1dABN
b3ZlTmV4dABHZXRWYWx1ZVdpdGhDb250ZXh0AFNjcmlwdENvbXBvbmVudEV2YWxDb250ZXh0AGdl
dF9FdmFsdWF0b3JDb250ZXh0AERhdGFSb3cAQWRkUm93AGdldF9Bc3NlbWJseQBzZXRfUHJvZHVj
ZXJDb3VudHJ5AAAAXVAAcgBvAHYAaQBkAGUAcgA9AE0AaQBjAHIAbwBzAG8AZgB0AC4AQQBDAEUA
LgBPAEwARQBEAEIALgAxADIALgAwADsARABhAHQAYQAgAFMAbwB1AHIAYwBlAD0AAGM7AEUAeAB0
AGUAbgBkAGUAZAAgAFAAcgBvAHAAZQByAHQAaQBlAHMAPQAiAEUAeABjAGUAbAAgADEAMgAuADAA
OwBIAEQAUgA9AFkARQBTADsASQBNAEUAWAA9ADEAIgA7AAATQwB1AHMAdABvAG0ATABvAGcAAE9V
AHAAZABhAHQAZQBkACAASQBEACAALAAgAHIAbwB3AHMAIABhAGYAZgBlAGMAdABlAGQAOgAgAGMA
bwBuAG4ALgBPAHAAZQBuACgAKQAAAQAxUwBFAEwARQBDAFQAIAAqACAARgBSAE8ATQAgAFsARABh
AHQAYQBzAGUAdAAkAF0AAFlVAHAAZABhAHQAZQBkACAASQBEACAALAAgAHIAbwB3AHMAIABhAGYA
ZgBlAGMAdABlAGQAOgAgAE8AbABlAEQAYgBEAGEAdABhAEEAZABhAHAAdABlAHIAAE9VAHAAZABh
AHQAZQBkACAASQBEACAALAAgAHIAbwB3AHMAIABhAGYAZgBlAGMAdABlAGQAOgAgAGQAYQAuAEYA
aQBsAGwAKABkAHQAKQAAH1IAbwB3AHMAIABDAG8AdQBuAHQAOgAgAHsAMAB9AAAJRgBhAGkAbAAA
F0UAeABjAGUAcAB0AGkAbwBuADoAIAAAD1MAdQBjAGMAZQBzAHMAAICbSQBzAE4AdQBsAGwAIABw
AHIAbwBwAGUAcgB0AHkAIABjAGEAbgBuAG8AdAAgAGIAZQAgAHMAZQB0ACAAdABvACAARgBhAGwA
cwBlAC4AIABBAHMAcwBpAGcAbgAgAGEAIAB2AGEAbAB1AGUAIAB0AG8AIAB0AGgAZQAgAGMAbwBs
AHUAbQBuACAAaQBuAHMAdABlAGEAZAAuAAARTwB1AHQAcAB1AHQAIAAwAAARZgBpAGwAZQBuAGEA
bQBlAABxUwBDAF8AZAAwAGEAMQA0ADMANAA1ADIAOAAyAGMANAA2AGIANgBhAGIAMwA3ADcAZQBl
AGQAZAA1AGEAZgA5AGYAMgA2AC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMA
ZQBzAAAAAOJECUD4dZVEksfE0qhvVd0ABCABAQgDIAABBSABARERBCABAQ4FIAEBEXEQBwgCEjkS
PQgSQRJFEkkSTQYAAw4ODg4FIAASgIkKIAYBCA4ODggQAgYgAgEOEjkFIAEIEj0FIAASgJUDIAAI
BQACDg4cBCAAEkEDIAAcBCABHAgDIAAOBAYSgKEEAAEIHAQAAQocAyAAAgUAAg4ODgkgAwESVR0I
ElkFIAIBCBwDBwEIBgACCBJZDgUgAR0ICAUgABKAsQYgARKAtRwFAAASgLkGIAEcEoC9CAABEoDB
EYDFBSAAEoDJByACAQ4SgMkIt3pcVhk04IkIiYRdzYCAzJECBg4CBgIDBhIUAwYSGAMGEgwDBhJd
AwYSaQMGEm0DBhIgBCABAQoEIAEBAgsgBAEIHQgdElUSWQUgAQESXQQAABJpBAAAEm0FAAEBEm0E
AAASIAMAAAEDKAAKAygAAgMoAAgDKAAOBAgAEmkECAASbQQIABIgCAEACAAAAAAAHgEAAQBUAhZX
cmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTQ19kMGExNDM0NTI4MmM0NmI2YWIz
NzdlZWRkNWFmOWYyNgAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDI1AABJAQAaLk5FVEZyYW1l
d29yayxWZXJzaW9uPXY0LjcBAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEi5ORVQgRnJhbWV3b3Jr
IDQuNwQBAAAAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVy
LCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRv
a2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQC
AAAAAAAAAAAAAABQQURQQURQtAAAAFRKAAAAAAAAAAAAAG5KAAAAIAAAAAAAAAAAAAAAAAAAAAAA
AAAAAABgSgAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAAGAAA
gAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhgAADsAwAA
AAAAAAAAAADsAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAAAQAA
AAEAAAAAAAAAAQAAAAAAPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQByAEYA
aQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAETAMA
AAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAKAMAAAEAMAAwADAAMAAwADQAYgAwAAAA
GgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkATgBhAG0AZQAA
AAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAEMAXwBkADAA
YQAxADQAMwA0ADUAMgA4ADIAYwA0ADYAYgA2AGEAYgAzADcANwBlAGUAZABkADUAYQBmADkAZgAy
ADYAAAAwAAgAAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4AMAAuADAAAABwACgA
AQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAQwBfAGQAMABhADEANAAzADQANQAyADgAMgBj
ADQANgBiADYAYQBiADMANwA3AGUAZQBkAGQANQBhAGYAOQBmADIANgAuAGQAbABsAAAASAASAAEA
TABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAy
ADAAMgA1AAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgA
AQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBDAF8AZAAwAGEAMQA0ADMANAA1
ADIAOAAyAGMANAA2AGIANgBhAGIAMwA3ADcAZQBlAGQAZAA1AGEAZgA5AGYAMgA2AC4AZABsAGwA
AABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAQwBfAGQAMABhADEANAAzADQANQAy
ADgAMgBjADQANgBiADYAYQBiADMANwA3AGUAZQBkAGQANQBhAGYAOQBmADIANgAAADQACAABAFAA
cgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAA4AAgAAQBBAHMAcwBl
AG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAMAAAAgDoAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_d0a14345282c46b6ab377eedd5af9f26</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::filename</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">4D</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <outputs>
                <output
                  refId="Package\1404\Script Component.Outputs[Output 0]"
                  hasSideEffects="true"
                  name="Output 0">
                  <outputColumns>
                    <outputColumn
                      refId="Package\1404\Script Component.Outputs[Output 0].Columns[price]"
                      dataType="i8"
                      lineageId="Package\1404\Script Component.Outputs[Output 0].Columns[price]"
                      name="price" />
                    <outputColumn
                      refId="Package\1404\Script Component.Outputs[Output 0].Columns[cost]"
                      dataType="i8"
                      lineageId="Package\1404\Script Component.Outputs[Output 0].Columns[cost]"
                      name="cost" />
                    <outputColumn
                      refId="Package\1404\Script Component.Outputs[Output 0].Columns[month]"
                      dataType="i4"
                      lineageId="Package\1404\Script Component.Outputs[Output 0].Columns[month]"
                      name="month" />
                    <outputColumn
                      refId="Package\1404\Script Component.Outputs[Output 0].Columns[year]"
                      dataType="i4"
                      lineageId="Package\1404\Script Component.Outputs[Output 0].Columns[year]"
                      name="year" />
                    <outputColumn
                      refId="Package\1404\Script Component.Outputs[Output 0].Columns[Produce/Import]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\1404\Script Component.Outputs[Output 0].Columns[Produce/Import]"
                      name="Produce/Import" />
                    <outputColumn
                      refId="Package\1404\Script Component.Outputs[Output 0].Columns[Registered]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\1404\Script Component.Outputs[Output 0].Columns[Registered]"
                      name="Registered" />
                    <outputColumn
                      refId="Package\1404\Script Component.Outputs[Output 0].Columns[ProducerCountry]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\1404\Script Component.Outputs[Output 0].Columns[ProducerCountry]"
                      name="ProducerCountry" />
                    <outputColumn
                      refId="Package\1404\Script Component.Outputs[Output 0].Columns[ATCCode]"
                      dataType="wstr"
                      length="20"
                      lineageId="Package\1404\Script Component.Outputs[Output 0].Columns[ATCCode]"
                      name="ATCCode" />
                    <outputColumn
                      refId="Package\1404\Script Component.Outputs[Output 0].Columns[License]"
                      dataType="i4"
                      lineageId="Package\1404\Script Component.Outputs[Output 0].Columns[License]"
                      name="License" />
                    <outputColumn
                      refId="Package\1404\Script Component.Outputs[Output 0].Columns[biological]"
                      dataType="i4"
                      lineageId="Package\1404\Script Component.Outputs[Output 0].Columns[biological]"
                      name="biological" />
                    <outputColumn
                      refId="Package\1404\Script Component.Outputs[Output 0].Columns[OTC]"
                      dataType="i4"
                      lineageId="Package\1404\Script Component.Outputs[Output 0].Columns[OTC]"
                      name="OTC" />
                    <outputColumn
                      refId="Package\1404\Script Component.Outputs[Output 0].Columns[ConsumerPrice]"
                      dataType="i8"
                      lineageId="Package\1404\Script Component.Outputs[Output 0].Columns[ConsumerPrice]"
                      name="ConsumerPrice" />
                    <outputColumn
                      refId="Package\1404\Script Component.Outputs[Output 0].Columns[QuantitySales]"
                      dataType="i4"
                      lineageId="Package\1404\Script Component.Outputs[Output 0].Columns[QuantitySales]"
                      name="QuantitySales" />
                    <outputColumn
                      refId="Package\1404\Script Component.Outputs[Output 0].Columns[QuantityInPKG]"
                      dataType="i4"
                      lineageId="Package\1404\Script Component.Outputs[Output 0].Columns[QuantityInPKG]"
                      name="QuantityInPKG" />
                    <outputColumn
                      refId="Package\1404\Script Component.Outputs[Output 0].Columns[QuantityPkG]"
                      dataType="i4"
                      lineageId="Package\1404\Script Component.Outputs[Output 0].Columns[QuantityPkG]"
                      name="QuantityPkG" />
                    <outputColumn
                      refId="Package\1404\Script Component.Outputs[Output 0].Columns[GenericName]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\1404\Script Component.Outputs[Output 0].Columns[GenericName]"
                      name="GenericName" />
                    <outputColumn
                      refId="Package\1404\Script Component.Outputs[Output 0].Columns[GenericCode]"
                      dataType="i4"
                      lineageId="Package\1404\Script Component.Outputs[Output 0].Columns[GenericCode]"
                      name="GenericCode" />
                    <outputColumn
                      refId="Package\1404\Script Component.Outputs[Output 0].Columns[EffectiveMaterial]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\1404\Script Component.Outputs[Output 0].Columns[EffectiveMaterial]"
                      name="EffectiveMaterial" />
                    <outputColumn
                      refId="Package\1404\Script Component.Outputs[Output 0].Columns[BrandName]"
                      dataType="wstr"
                      length="250"
                      lineageId="Package\1404\Script Component.Outputs[Output 0].Columns[BrandName]"
                      name="BrandName" />
                    <outputColumn
                      refId="Package\1404\Script Component.Outputs[Output 0].Columns[EnglishNameBrand]"
                      dataType="wstr"
                      length="250"
                      lineageId="Package\1404\Script Component.Outputs[Output 0].Columns[EnglishNameBrand]"
                      name="EnglishNameBrand" />
                    <outputColumn
                      refId="Package\1404\Script Component.Outputs[Output 0].Columns[IRC]"
                      dataType="wstr"
                      length="250"
                      lineageId="Package\1404\Script Component.Outputs[Output 0].Columns[IRC]"
                      name="IRC" />
                    <outputColumn
                      refId="Package\1404\Script Component.Outputs[Output 0].Columns[Producer]"
                      dataType="wstr"
                      length="250"
                      lineageId="Package\1404\Script Component.Outputs[Output 0].Columns[Producer]"
                      name="Producer" />
                    <outputColumn
                      refId="Package\1404\Script Component.Outputs[Output 0].Columns[Supplier]"
                      dataType="wstr"
                      length="250"
                      lineageId="Package\1404\Script Component.Outputs[Output 0].Columns[Supplier]"
                      name="Supplier" />
                    <outputColumn
                      refId="Package\1404\Script Component.Outputs[Output 0].Columns[OwenerBrand]"
                      dataType="wstr"
                      length="250"
                      lineageId="Package\1404\Script Component.Outputs[Output 0].Columns[OwenerBrand]"
                      name="OwenerBrand" />
                    <outputColumn
                      refId="Package\1404\Script Component.Outputs[Output 0].Columns[Distributer]"
                      dataType="wstr"
                      length="250"
                      lineageId="Package\1404\Script Component.Outputs[Output 0].Columns[Distributer]"
                      name="Distributer" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\1404.Paths[Output 0]"
              endId="Package\1404\OLE DB Destination.Inputs[OLE DB Destination Input]"
              name="Output 0"
              startId="Package\1404\Script Component.Outputs[Output 0]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{898B5213-A967-4702-A45C-788515113805}"
      DTS:From="Package\1404"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\1403" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{51D118EB-BF7F-4B9A-B7F7-4395E6B7376B}"
      DTS:From="Package\1403"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\1402" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{AEF85470-E27D-45A6-BB48-4E0165C60434}"
      DTS:From="Package\1402"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\1401" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="102,42"
          Id="Package\1403"
          TopLeft="59,162" />
        <NodeLayout
          Size="102,42"
          Id="Package\1404"
          TopLeft="60,60" />
        <NodeLayout
          Size="102,42"
          Id="Package\1402"
          TopLeft="59,264" />
        <NodeLayout
          Size="102,42"
          Id="Package\1401"
          TopLeft="62,354" />
        <NodeLayout
          Size="102,42"
          Id="Package\1400"
          TopLeft="59,456" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="110.5,102">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="110,204">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="111.5,306">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,48"
              Start="0,0"
              End="0,40.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,40.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\1403">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="163,42"
          Id="Package\1403\Script Component"
          TopLeft="521.5,145.5" />
        <NodeLayout
          Size="171,42"
          Id="Package\1403\OLE DB Destination"
          TopLeft="544.5,306.5" />
        <EdgeLayout
          Id="Package\1403.Paths[Output 0]"
          TopLeft="603,187.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="27,119"
              Start="0,0"
              End="27,111.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,55.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,55.5"
                    Point2="0,59.5"
                    Point3="4,59.5" />
                  <mssgle:LineSegment
                    End="23,59.5" />
                  <mssgle:CubicBezierSegment
                    Point1="23,59.5"
                    Point2="27,59.5"
                    Point3="27,63.5" />
                  <mssgle:LineSegment
                    End="27,111.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\1403\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\1404">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="163,42"
          Id="Package\1404\Script Component"
          TopLeft="521.5,145.5" />
        <NodeLayout
          Size="171,42"
          Id="Package\1404\OLE DB Destination"
          TopLeft="545.5,306.5" />
        <EdgeLayout
          Id="Package\1404.Paths[Output 0]"
          TopLeft="603,187.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="28,119"
              Start="0,0"
              End="28,111.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,55.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,55.5"
                    Point2="0,59.5"
                    Point3="4,59.5" />
                  <mssgle:LineSegment
                    End="24,59.5" />
                  <mssgle:CubicBezierSegment
                    Point1="24,59.5"
                    Point2="28,59.5"
                    Point3="28,63.5" />
                  <mssgle:LineSegment
                    End="28,111.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\1404\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\1402">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="171,42"
          Id="Package\1402\OLE DB Destination"
          TopLeft="545.5,306.5" />
        <NodeLayout
          Size="163,42"
          Id="Package\1402\Script Component"
          TopLeft="521.5,145.5" />
        <EdgeLayout
          Id="Package\1402.Paths[Output 0]"
          TopLeft="603,187.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="28,119"
              Start="0,0"
              End="28,111.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,55.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,55.5"
                    Point2="0,59.5"
                    Point3="4,59.5" />
                  <mssgle:LineSegment
                    End="24,59.5" />
                  <mssgle:CubicBezierSegment
                    Point1="24,59.5"
                    Point2="28,59.5"
                    Point3="28,63.5" />
                  <mssgle:LineSegment
                    End="28,111.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <TaskHost
    design-time-name="Package\1401">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="171,42"
          Id="Package\1401\OLE DB Destination"
          TopLeft="545.5,306.5" />
        <NodeLayout
          Size="163,42"
          Id="Package\1401\Script Component"
          TopLeft="521.5,145.5" />
        <EdgeLayout
          Id="Package\1401.Paths[Output 0]"
          TopLeft="603,187.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="28,119"
              Start="0,0"
              End="28,111.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,55.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,55.5"
                    Point2="0,59.5"
                    Point3="4,59.5" />
                  <mssgle:LineSegment
                    End="24,59.5" />
                  <mssgle:CubicBezierSegment
                    Point1="24,59.5"
                    Point2="28,59.5"
                    Point3="28,63.5" />
                  <mssgle:LineSegment
                    End="28,111.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <TaskHost
    design-time-name="Package\1400">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="171,42"
          Id="Package\1400\OLE DB Destination"
          TopLeft="545.5,306.5" />
        <NodeLayout
          Size="163,42"
          Id="Package\1400\Script Component"
          TopLeft="521.5,145.5" />
        <EdgeLayout
          Id="Package\1400.Paths[Output 0]"
          TopLeft="603,187.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="28,119"
              Start="0,0"
              End="28,111.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,55.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,55.5"
                    Point2="0,59.5"
                    Point3="4,59.5" />
                  <mssgle:LineSegment
                    End="24,59.5" />
                  <mssgle:CubicBezierSegment
                    Point1="24,59.5"
                    Point2="28,59.5"
                    Point3="28,63.5" />
                  <mssgle:LineSegment
                    End="28,111.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>